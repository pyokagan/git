var data = {lines:[
{"lineNum":"    1","line":"#!/bin/sh"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Copyright (c) 2005 Junio C Hamano"},
{"lineNum":"    4","line":"#"},
{"lineNum":"    5","line":"# Fetch one or more remote refs and merge it/them into the current HEAD."},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"USAGE=\'[-n | --no-stat] [--[no-]commit] [--[no-]squash] [--[no-]ff|--ff-only] [--[no-]rebase|--rebase=preserve] [-s strategy]... [<fetch-options>] <repo> <head>...\'","class":"lineCov","hits":"1",},
{"lineNum":"    8","line":"LONG_USAGE=\'Fetch one or more remote refs and integrate it/them with the current HEAD.\'","class":"lineCov","hits":"1",},
{"lineNum":"    9","line":"SUBDIRECTORY_OK=Yes","class":"lineCov","hits":"1",},
{"lineNum":"   10","line":"OPTIONS_SPEC=","class":"lineCov","hits":"1",},
{"lineNum":"   11","line":". git-sh-setup","class":"lineCov","hits":"1",},
{"lineNum":"   12","line":". git-sh-i18n","class":"lineCov","hits":"1",},
{"lineNum":"   13","line":"set_reflog_action \"pull${1+ $*}\"","class":"lineCov","hits":"1",},
{"lineNum":"   14","line":"require_work_tree_exists","class":"lineCov","hits":"1",},
{"lineNum":"   15","line":"cd_to_toplevel","class":"lineCov","hits":"1",},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"die_conflict () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   19","line":"    git diff-index --cached --name-status -r --ignore-submodules HEAD --","class":"lineCov","hits":"1",},
{"lineNum":"   20","line":"    if [ $(git config --bool --get advice.resolveConflict || echo true) = \"true\" ]; then","class":"lineCov","hits":"1",},
{"lineNum":"   21","line":"\tdie \"$(gettext \"Pull is not possible because you have unmerged files.","class":"lineNoCov","hits":"0",},
{"lineNum":"   22","line":"Please, fix them up in the work tree, and then use \'git add/rm <file>\'","class":"lineNoCov","hits":"0",},
{"lineNum":"   23","line":"as appropriate to mark resolution and make a commit.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"   24","line":"    else"},
{"lineNum":"   25","line":"\tdie \"$(gettext \"Pull is not possible because you have unmerged files.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"   26","line":"    fi"},
{"lineNum":"   27","line":"}"},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"die_merge () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   30","line":"    if [ $(git config --bool --get advice.resolveConflict || echo true) = \"true\" ]; then","class":"lineCov","hits":"1",},
{"lineNum":"   31","line":"\tdie \"$(gettext \"You have not concluded your merge (MERGE_HEAD exists).","class":"lineNoCov","hits":"0",},
{"lineNum":"   32","line":"Please, commit your changes before you can merge.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"   33","line":"    else"},
{"lineNum":"   34","line":"\tdie \"$(gettext \"You have not concluded your merge (MERGE_HEAD exists).\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"   35","line":"    fi"},
{"lineNum":"   36","line":"}"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"test -z \"$(git ls-files -u)\" || die_conflict","class":"lineCov","hits":"1",},
{"lineNum":"   39","line":"test -f \"$GIT_DIR/MERGE_HEAD\" && die_merge","class":"lineCov","hits":"1",},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"bool_or_string_config () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   42","line":"\tgit config --bool \"$1\" 2>/dev/null || git config \"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"   43","line":"}"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"strategy_args= diffstat= no_commit= squash= no_ff= ff_only=","class":"lineCov","hits":"1",},
{"lineNum":"   46","line":"log_arg= verbosity= progress= recurse_submodules= verify_signatures=","class":"lineCov","hits":"1",},
{"lineNum":"   47","line":"merge_args= edit= rebase_args=","class":"lineCov","hits":"1",},
{"lineNum":"   48","line":"curr_branch=$(git symbolic-ref -q HEAD)","class":"lineCov","hits":"1",},
{"lineNum":"   49","line":"curr_branch_short=\"${curr_branch#refs/heads/}\"","class":"lineCov","hits":"1",},
{"lineNum":"   50","line":"rebase=$(bool_or_string_config branch.$curr_branch_short.rebase)","class":"lineCov","hits":"1",},
{"lineNum":"   51","line":"if test -z \"$rebase\"","class":"lineCov","hits":"1",},
{"lineNum":"   52","line":"then"},
{"lineNum":"   53","line":"\trebase=$(bool_or_string_config pull.rebase)","class":"lineCov","hits":"1",},
{"lineNum":"   54","line":"fi"},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"# Setup default fast-forward options via `pull.ff`"},
{"lineNum":"   57","line":"pull_ff=$(git config pull.ff)","class":"lineCov","hits":"1",},
{"lineNum":"   58","line":"case \"$pull_ff\" in","class":"lineCov","hits":"1",},
{"lineNum":"   59","line":"false)"},
{"lineNum":"   60","line":"\tno_ff=--no-ff","class":"lineCov","hits":"1",},
{"lineNum":"   61","line":"\t;;"},
{"lineNum":"   62","line":"only)"},
{"lineNum":"   63","line":"\tff_only=--ff-only","class":"lineCov","hits":"1",},
{"lineNum":"   64","line":"\t;;"},
{"lineNum":"   65","line":"esac"},
{"lineNum":"   66","line":""},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"dry_run=","class":"lineCov","hits":"1",},
{"lineNum":"   69","line":"while :","class":"lineCov","hits":"1",},
{"lineNum":"   70","line":"do"},
{"lineNum":"   71","line":"\tcase \"$1\" in","class":"lineCov","hits":"1",},
{"lineNum":"   72","line":"\t-q|--quiet)"},
{"lineNum":"   73","line":"\t\tverbosity=\"$verbosity -q\" ;;","class":"lineCov","hits":"1",},
{"lineNum":"   74","line":"\t-v|--verbose)"},
{"lineNum":"   75","line":"\t\tverbosity=\"$verbosity -v\" ;;","class":"lineCov","hits":"1",},
{"lineNum":"   76","line":"\t--progress)"},
{"lineNum":"   77","line":"\t\tprogress=--progress ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   78","line":"\t--no-progress)"},
{"lineNum":"   79","line":"\t\tprogress=--no-progress ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   80","line":"\t-n|--no-stat|--no-summary)"},
{"lineNum":"   81","line":"\t\tdiffstat=--no-stat ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   82","line":"\t--stat|--summary)"},
{"lineNum":"   83","line":"\t\tdiffstat=--stat ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   84","line":"\t--log|--no-log)"},
{"lineNum":"   85","line":"\t\tlog_arg=$1 ;;","class":"lineCov","hits":"1",},
{"lineNum":"   86","line":"\t--no-c|--no-co|--no-com|--no-comm|--no-commi|--no-commit)"},
{"lineNum":"   87","line":"\t\tno_commit=--no-commit ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   88","line":"\t--c|--co|--com|--comm|--commi|--commit)"},
{"lineNum":"   89","line":"\t\tno_commit=--commit ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   90","line":"\t-e|--edit)"},
{"lineNum":"   91","line":"\t\tedit=--edit ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   92","line":"\t--no-edit)"},
{"lineNum":"   93","line":"\t\tedit=--no-edit ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   94","line":"\t--sq|--squ|--squa|--squas|--squash)"},
{"lineNum":"   95","line":"\t\tsquash=--squash ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   96","line":"\t--no-sq|--no-squ|--no-squa|--no-squas|--no-squash)"},
{"lineNum":"   97","line":"\t\tsquash=--no-squash ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"   98","line":"\t--ff)"},
{"lineNum":"   99","line":"\t\tno_ff=--ff ;;","class":"lineCov","hits":"1",},
{"lineNum":"  100","line":"\t--no-ff)"},
{"lineNum":"  101","line":"\t\tno_ff=--no-ff ;;","class":"lineCov","hits":"1",},
{"lineNum":"  102","line":"\t--ff-only)"},
{"lineNum":"  103","line":"\t\tff_only=--ff-only ;;","class":"lineCov","hits":"1",},
{"lineNum":"  104","line":"\t-s=*|--s=*|--st=*|--str=*|--stra=*|--strat=*|--strate=*|\\","class":"lineNoCov","hits":"0",},
{"lineNum":"  105","line":"\t\t--strateg=*|--strategy=*|\\"},
{"lineNum":"  106","line":"\t-s|--s|--st|--str|--stra|--strat|--strate|--strateg|--strategy)"},
{"lineNum":"  107","line":"\t\tcase \"$#,$1\" in","class":"lineCov","hits":"1",},
{"lineNum":"  108","line":"\t\t*,*=*)"},
{"lineNum":"  109","line":"\t\t\tstrategy=$(expr \"z$1\" : \'z-[^=]*=\\(.*\\)\') ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  110","line":"\t\t1,*)"},
{"lineNum":"  111","line":"\t\t\tusage ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  112","line":"\t\t*)"},
{"lineNum":"  113","line":"\t\t\tstrategy=\"$2\"","class":"lineCov","hits":"1",},
{"lineNum":"  114","line":"\t\t\tshift ;;","class":"lineCov","hits":"1",},
{"lineNum":"  115","line":"\t\tesac"},
{"lineNum":"  116","line":"\t\tstrategy_args=\"${strategy_args}-s $strategy \"","class":"lineCov","hits":"1",},
{"lineNum":"  117","line":"\t\t;;"},
{"lineNum":"  118","line":"\t-X*)"},
{"lineNum":"  119","line":"\t\tcase \"$#,$1\" in","class":"lineCov","hits":"1",},
{"lineNum":"  120","line":"\t\t1,-X)"},
{"lineNum":"  121","line":"\t\t\tusage ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  122","line":"\t\t*,-X)"},
{"lineNum":"  123","line":"\t\t\txx=\"-X $(git rev-parse --sq-quote \"$2\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  124","line":"\t\t\tshift ;;","class":"lineCov","hits":"1",},
{"lineNum":"  125","line":"\t\t*,*)"},
{"lineNum":"  126","line":"\t\t\txx=$(git rev-parse --sq-quote \"$1\") ;;","class":"lineCov","hits":"1",},
{"lineNum":"  127","line":"\t\tesac"},
{"lineNum":"  128","line":"\t\tmerge_args=\"$merge_args$xx \"","class":"lineCov","hits":"1",},
{"lineNum":"  129","line":"\t\t;;"},
{"lineNum":"  130","line":"\t-r=*|--r=*|--re=*|--reb=*|--reba=*|--rebas=*|--rebase=*)"},
{"lineNum":"  131","line":"\t\trebase=\"${1#*=}\"","class":"lineCov","hits":"1",},
{"lineNum":"  132","line":"\t\t;;"},
{"lineNum":"  133","line":"\t-r|--r|--re|--reb|--reba|--rebas|--rebase)"},
{"lineNum":"  134","line":"\t\trebase=true","class":"lineCov","hits":"1",},
{"lineNum":"  135","line":"\t\t;;"},
{"lineNum":"  136","line":"\t--no-r|--no-re|--no-reb|--no-reba|--no-rebas|--no-rebase)"},
{"lineNum":"  137","line":"\t\trebase=false","class":"lineNoCov","hits":"0",},
{"lineNum":"  138","line":"\t\t;;"},
{"lineNum":"  139","line":"\t--recurse-submodules)"},
{"lineNum":"  140","line":"\t\trecurse_submodules=--recurse-submodules","class":"lineNoCov","hits":"0",},
{"lineNum":"  141","line":"\t\t;;"},
{"lineNum":"  142","line":"\t--recurse-submodules=*)"},
{"lineNum":"  143","line":"\t\trecurse_submodules=\"$1\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  144","line":"\t\t;;"},
{"lineNum":"  145","line":"\t--no-recurse-submodules)"},
{"lineNum":"  146","line":"\t\trecurse_submodules=--no-recurse-submodules","class":"lineCov","hits":"1",},
{"lineNum":"  147","line":"\t\t;;"},
{"lineNum":"  148","line":"\t--verify-signatures)"},
{"lineNum":"  149","line":"\t\tverify_signatures=--verify-signatures","class":"lineNoCov","hits":"0",},
{"lineNum":"  150","line":"\t\t;;"},
{"lineNum":"  151","line":"\t--no-verify-signatures)"},
{"lineNum":"  152","line":"\t\tverify_signatures=--no-verify-signatures","class":"lineNoCov","hits":"0",},
{"lineNum":"  153","line":"\t\t;;"},
{"lineNum":"  154","line":"\t--gpg-sign|-S)"},
{"lineNum":"  155","line":"\t\tgpg_sign_args=-S","class":"lineNoCov","hits":"0",},
{"lineNum":"  156","line":"\t\t;;"},
{"lineNum":"  157","line":"\t--gpg-sign=*)"},
{"lineNum":"  158","line":"\t\tgpg_sign_args=$(git rev-parse --sq-quote \"-S${1#--gpg-sign=}\")","class":"lineNoCov","hits":"0",},
{"lineNum":"  159","line":"\t\t;;"},
{"lineNum":"  160","line":"\t-S*)"},
{"lineNum":"  161","line":"\t\tgpg_sign_args=$(git rev-parse --sq-quote \"$1\")","class":"lineNoCov","hits":"0",},
{"lineNum":"  162","line":"\t\t;;"},
{"lineNum":"  163","line":"\t--d|--dr|--dry|--dry-|--dry-r|--dry-ru|--dry-run)"},
{"lineNum":"  164","line":"\t\tdry_run=--dry-run","class":"lineCov","hits":"1",},
{"lineNum":"  165","line":"\t\t;;"},
{"lineNum":"  166","line":"\t-h|--help-all)"},
{"lineNum":"  167","line":"\t\tusage","class":"lineNoCov","hits":"0",},
{"lineNum":"  168","line":"\t\t;;"},
{"lineNum":"  169","line":"\t*)"},
{"lineNum":"  170","line":"\t\t# Pass thru anything that may be meant for fetch."},
{"lineNum":"  171","line":"\t\tbreak","class":"lineCov","hits":"1",},
{"lineNum":"  172","line":"\t\t;;"},
{"lineNum":"  173","line":"\tesac"},
{"lineNum":"  174","line":"\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  175","line":"done"},
{"lineNum":"  176","line":""},
{"lineNum":"  177","line":"case \"$rebase\" in","class":"lineCov","hits":"1",},
{"lineNum":"  178","line":"preserve)"},
{"lineNum":"  179","line":"\trebase=true","class":"lineCov","hits":"1",},
{"lineNum":"  180","line":"\trebase_args=--preserve-merges","class":"lineCov","hits":"1",},
{"lineNum":"  181","line":"\t;;"},
{"lineNum":"  182","line":"true|false|\'\')"},
{"lineNum":"  183","line":"\t;;"},
{"lineNum":"  184","line":"*)"},
{"lineNum":"  185","line":"\techo \"Invalid value for --rebase, should be true, false, or preserve\"","class":"lineCov","hits":"1",},
{"lineNum":"  186","line":"\tusage","class":"lineCov","hits":"1",},
{"lineNum":"  187","line":"\texit 1","class":"lineNoCov","hits":"0",},
{"lineNum":"  188","line":"\t;;"},
{"lineNum":"  189","line":"esac"},
{"lineNum":"  190","line":""},
{"lineNum":"  191","line":"error_on_no_merge_candidates () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  192","line":"\texec >&2","class":"lineCov","hits":"1",},
{"lineNum":"  193","line":"\tfor opt","class":"lineCov","hits":"1",},
{"lineNum":"  194","line":"\tdo"},
{"lineNum":"  195","line":"\t\tcase \"$opt\" in","class":"lineCov","hits":"1",},
{"lineNum":"  196","line":"\t\t-t|--t|--ta|--tag|--tags)"},
{"lineNum":"  197","line":"\t\t\techo \"It doesn\'t make sense to pull all tags; you probably meant:\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  198","line":"\t\t\techo \"  git fetch --tags\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  199","line":"\t\t\texit 1","class":"lineNoCov","hits":"0",},
{"lineNum":"  200","line":"\t\tesac"},
{"lineNum":"  201","line":"\tdone"},
{"lineNum":"  202","line":""},
{"lineNum":"  203","line":"\tif test true = \"$rebase\"","class":"lineCov","hits":"1",},
{"lineNum":"  204","line":"\tthen"},
{"lineNum":"  205","line":"\t\top_type=rebase","class":"lineNoCov","hits":"0",},
{"lineNum":"  206","line":"\t\top_prep=against","class":"lineNoCov","hits":"0",},
{"lineNum":"  207","line":"\telse"},
{"lineNum":"  208","line":"\t\top_type=merge","class":"lineCov","hits":"1",},
{"lineNum":"  209","line":"\t\top_prep=with","class":"lineCov","hits":"1",},
{"lineNum":"  210","line":"\tfi"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"\tupstream=$(git config \"branch.$curr_branch_short.merge\")","class":"lineCov","hits":"1",},
{"lineNum":"  213","line":"\tremote=$(git config \"branch.$curr_branch_short.remote\")","class":"lineCov","hits":"1",},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"\tif [ $# -gt 1 ]; then","class":"lineCov","hits":"1",},
{"lineNum":"  216","line":"\t\tif [ \"$rebase\" = true ]; then","class":"lineCov","hits":"1",},
{"lineNum":"  217","line":"\t\t\tprintf \"There is no candidate for rebasing against \"","class":"lineNoCov","hits":"0",},
{"lineNum":"  218","line":"\t\telse"},
{"lineNum":"  219","line":"\t\t\tprintf \"There are no candidates for merging \"","class":"lineCov","hits":"1",},
{"lineNum":"  220","line":"\t\tfi"},
{"lineNum":"  221","line":"\t\techo \"among the refs that you just fetched.\"","class":"lineCov","hits":"1",},
{"lineNum":"  222","line":"\t\techo \"Generally this means that you provided a wildcard refspec which had no\"","class":"lineCov","hits":"1",},
{"lineNum":"  223","line":"\t\techo \"matches on the remote end.\"","class":"lineCov","hits":"1",},
{"lineNum":"  224","line":"\telif [ $# -gt 0 ] && [ \"$1\" != \"$remote\" ]; then","class":"lineCov","hits":"1",},
{"lineNum":"  225","line":"\t\techo \"You asked to pull from the remote \'$1\', but did not specify\"","class":"lineCov","hits":"1",},
{"lineNum":"  226","line":"\t\techo \"a branch. Because this is not the default configured remote\"","class":"lineCov","hits":"1",},
{"lineNum":"  227","line":"\t\techo \"for your current branch, you must specify a branch on the command line.\"","class":"lineCov","hits":"1",},
{"lineNum":"  228","line":"\telif [ -z \"$curr_branch\" -o -z \"$upstream\" ]; then","class":"lineCov","hits":"1",},
{"lineNum":"  229","line":"\t\t. git-parse-remote","class":"lineCov","hits":"1",},
{"lineNum":"  230","line":"\t\terror_on_missing_default_upstream \"pull\" $op_type $op_prep \\","class":"lineCov","hits":"1",},
{"lineNum":"  231","line":"\t\t\t\"git pull <remote> <branch>\""},
{"lineNum":"  232","line":"\telse"},
{"lineNum":"  233","line":"\t\techo \"Your configuration specifies to $op_type $op_prep the ref \'${upstream#refs/heads/}\'\"","class":"lineCov","hits":"1",},
{"lineNum":"  234","line":"\t\techo \"from the remote, but no such ref was fetched.\"","class":"lineCov","hits":"1",},
{"lineNum":"  235","line":"\tfi"},
{"lineNum":"  236","line":"\texit 1","class":"lineCov","hits":"1",},
{"lineNum":"  237","line":"}"},
{"lineNum":"  238","line":""},
{"lineNum":"  239","line":"test true = \"$rebase\" && {","class":"lineCov","hits":"1",},
{"lineNum":"  240","line":"\tif ! git rev-parse -q --verify HEAD >/dev/null","class":"lineCov","hits":"1",},
{"lineNum":"  241","line":"\tthen"},
{"lineNum":"  242","line":"\t\t# On an unborn branch"},
{"lineNum":"  243","line":"\t\tif test -f \"$GIT_DIR/index\"","class":"lineCov","hits":"1",},
{"lineNum":"  244","line":"\t\tthen"},
{"lineNum":"  245","line":"\t\t\tdie \"$(gettext \"updating an unborn branch with changes added to the index\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  246","line":"\t\tfi"},
{"lineNum":"  247","line":"\telse"},
{"lineNum":"  248","line":"\t\trequire_clean_work_tree \"pull with rebase\" \"Please commit or stash them.\"","class":"lineCov","hits":"1",},
{"lineNum":"  249","line":"\tfi"},
{"lineNum":"  250","line":"\toldremoteref= &&","class":"lineCov","hits":"1",},
{"lineNum":"  251","line":"\ttest -n \"$curr_branch\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  252","line":"\t. git-parse-remote &&","class":"lineCov","hits":"1",},
{"lineNum":"  253","line":"\tremoteref=\"$(get_remote_merge_branch \"$@\" 2>/dev/null)\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  254","line":"\toldremoteref=$(git merge-base --fork-point \"$remoteref\" $curr_branch 2>/dev/null)","class":"lineCov","hits":"1",},
{"lineNum":"  255","line":"}"},
{"lineNum":"  256","line":"orig_head=$(git rev-parse -q --verify HEAD)","class":"lineCov","hits":"1",},
{"lineNum":"  257","line":"git fetch $verbosity $progress $dry_run $recurse_submodules --update-head-ok \"$@\" || exit 1","class":"lineCov","hits":"1",},
{"lineNum":"  258","line":"test -z \"$dry_run\" || exit 0","class":"lineCov","hits":"1",},
{"lineNum":"  259","line":""},
{"lineNum":"  260","line":"curr_head=$(git rev-parse -q --verify HEAD)","class":"lineCov","hits":"1",},
{"lineNum":"  261","line":"if test -n \"$orig_head\" && test \"$curr_head\" != \"$orig_head\"","class":"lineCov","hits":"1",},
{"lineNum":"  262","line":"then"},
{"lineNum":"  263","line":"\t# The fetch involved updating the current branch."},
{"lineNum":"  264","line":""},
{"lineNum":"  265","line":"\t# The working tree and the index file is still based on the"},
{"lineNum":"  266","line":"\t# $orig_head commit, but we are merging into $curr_head."},
{"lineNum":"  267","line":"\t# First update the working tree to match $curr_head."},
{"lineNum":"  268","line":""},
{"lineNum":"  269","line":"\teval_gettextln \"Warning: fetch updated the current branch head.","class":"lineNoCov","hits":"0",},
{"lineNum":"  270","line":"Warning: fast-forwarding your working tree from","class":"lineNoCov","hits":"0",},
{"lineNum":"  271","line":"Warning: commit \\$orig_head.\" >&2","class":"lineCov","hits":"1",},
{"lineNum":"  272","line":"\tgit update-index -q --refresh","class":"lineCov","hits":"1",},
{"lineNum":"  273","line":"\tgit read-tree -u -m \"$orig_head\" \"$curr_head\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  274","line":"\t\tdie \"$(eval_gettext \"Cannot fast-forward your working tree.","class":"lineNoCov","hits":"0",},
{"lineNum":"  275","line":"After making sure that you saved anything precious from","class":"lineNoCov","hits":"0",},
{"lineNum":"  276","line":"$ git diff \\$orig_head","class":"lineNoCov","hits":"0",},
{"lineNum":"  277","line":"output, run","class":"lineNoCov","hits":"0",},
{"lineNum":"  278","line":"$ git reset --hard","class":"lineNoCov","hits":"0",},
{"lineNum":"  279","line":"to recover.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  280","line":""},
{"lineNum":"  281","line":"fi"},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"merge_head=$(sed -e \'/\tnot-for-merge\t/d\' \\","class":"lineNoCov","hits":"0",},
{"lineNum":"  284","line":"\t-e \'s/\t.*//\' \"$GIT_DIR\"/FETCH_HEAD | \\"},
{"lineNum":"  285","line":"\ttr \'\\012\' \' \')"},
{"lineNum":"  286","line":""},
{"lineNum":"  287","line":"case \"$merge_head\" in","class":"lineCov","hits":"1",},
{"lineNum":"  288","line":"\'\')"},
{"lineNum":"  289","line":"\terror_on_no_merge_candidates \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  290","line":"\t;;"},
{"lineNum":"  291","line":"?*\' \'?*)"},
{"lineNum":"  292","line":"\tif test -z \"$orig_head\"","class":"lineCov","hits":"1",},
{"lineNum":"  293","line":"\tthen"},
{"lineNum":"  294","line":"\t\tdie \"$(gettext \"Cannot merge multiple branches into empty head\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  295","line":"\tfi"},
{"lineNum":"  296","line":"\tif test true = \"$rebase\"","class":"lineCov","hits":"1",},
{"lineNum":"  297","line":"\tthen"},
{"lineNum":"  298","line":"\t\tdie \"$(gettext \"Cannot rebase onto multiple branches\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  299","line":"\tfi"},
{"lineNum":"  300","line":"\t;;"},
{"lineNum":"  301","line":"esac"},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"# Pulling into unborn branch: a shorthand for branching off"},
{"lineNum":"  304","line":"# FETCH_HEAD, for lazy typers."},
{"lineNum":"  305","line":"if test -z \"$orig_head\"","class":"lineCov","hits":"1",},
{"lineNum":"  306","line":"then"},
{"lineNum":"  307","line":"\t# Two-way merge: we claim the index is based on an empty tree,"},
{"lineNum":"  308","line":"\t# and try to fast-forward to HEAD.  This ensures we will not"},
{"lineNum":"  309","line":"\t# lose index/worktree changes that the user already made on"},
{"lineNum":"  310","line":"\t# the unborn branch."},
{"lineNum":"  311","line":"\tempty_tree=4b825dc642cb6eb9a060e54bf8d69288fbee4904","class":"lineCov","hits":"1",},
{"lineNum":"  312","line":"\tgit read-tree -m -u $empty_tree $merge_head &&","class":"lineCov","hits":"1",},
{"lineNum":"  313","line":"\tgit update-ref -m \"initial pull\" HEAD $merge_head \"$curr_head\"","class":"lineCov","hits":"1",},
{"lineNum":"  314","line":"\texit","class":"lineCov","hits":"1",},
{"lineNum":"  315","line":"fi"},
{"lineNum":"  316","line":""},
{"lineNum":"  317","line":"if test true = \"$rebase\"","class":"lineCov","hits":"1",},
{"lineNum":"  318","line":"then"},
{"lineNum":"  319","line":"\to=$(git show-branch --merge-base $curr_branch $merge_head $oldremoteref)","class":"lineCov","hits":"1",},
{"lineNum":"  320","line":"\tif test \"$oldremoteref\" = \"$o\"","class":"lineCov","hits":"1",},
{"lineNum":"  321","line":"\tthen"},
{"lineNum":"  322","line":"\t\tunset oldremoteref","class":"lineCov","hits":"1",},
{"lineNum":"  323","line":"\tfi"},
{"lineNum":"  324","line":"fi"},
{"lineNum":"  325","line":""},
{"lineNum":"  326","line":"merge_name=$(git fmt-merge-msg $log_arg <\"$GIT_DIR/FETCH_HEAD\") || exit","class":"lineCov","hits":"1",},
{"lineNum":"  327","line":"case \"$rebase\" in","class":"lineCov","hits":"1",},
{"lineNum":"  328","line":"true)"},
{"lineNum":"  329","line":"\teval=\"git-rebase $diffstat $strategy_args $merge_args $rebase_args $verbosity\"","class":"lineCov","hits":"1",},
{"lineNum":"  330","line":"\teval=\"$eval $gpg_sign_args\"","class":"lineCov","hits":"1",},
{"lineNum":"  331","line":"\teval=\"$eval --onto $merge_head ${oldremoteref:-$merge_head}\"","class":"lineCov","hits":"1",},
{"lineNum":"  332","line":"\t;;"},
{"lineNum":"  333","line":"*)"},
{"lineNum":"  334","line":"\teval=\"git-merge $diffstat $no_commit $verify_signatures $edit $squash $no_ff $ff_only\"","class":"lineCov","hits":"1",},
{"lineNum":"  335","line":"\teval=\"$eval $log_arg $strategy_args $merge_args $verbosity $progress\"","class":"lineCov","hits":"1",},
{"lineNum":"  336","line":"\teval=\"$eval $gpg_sign_args\"","class":"lineCov","hits":"1",},
{"lineNum":"  337","line":"\teval=\"$eval \\\"\\$merge_name\\\" HEAD $merge_head\"","class":"lineCov","hits":"1",},
{"lineNum":"  338","line":"\t;;"},
{"lineNum":"  339","line":"esac"},
{"lineNum":"  340","line":"eval \"exec $eval\"","class":"lineCov","hits":"1",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "git-pull", "date" : "2015-05-02 15:01:37", "instrumented" : 173, "covered" : 127,};
var merged_data = [];
