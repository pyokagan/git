var data = {lines:[
{"lineNum":"    1","line":"#!/bin/sh"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Copyright (c) 2005 Linus Torvalds"},
{"lineNum":"    4","line":"# Copyright (c) 2005 Junio C Hamano"},
{"lineNum":"    5","line":"#"},
{"lineNum":"    6","line":"# Resolve two trees, using enhanced multi-base read-tree."},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"# The first parameters up to -- are merge bases; the rest are heads."},
{"lineNum":"    9","line":"bases= head= remotes= sep_seen=","class":"lineCov","hits":"92","possible_hits":"0",},
{"lineNum":"   10","line":"for arg","class":"lineCov","hits":"93","possible_hits":"0",},
{"lineNum":"   11","line":"do"},
{"lineNum":"   12","line":"\tcase \",$sep_seen,$head,$arg,\" in","class":"lineCov","hits":"93","possible_hits":"0",},
{"lineNum":"   13","line":"\t*,--,)"},
{"lineNum":"   14","line":"\t\tsep_seen=yes","class":"lineCov","hits":"23","possible_hits":"0",},
{"lineNum":"   15","line":"\t\t;;"},
{"lineNum":"   16","line":"\t,yes,,*)"},
{"lineNum":"   17","line":"\t\thead=$arg","class":"lineCov","hits":"23","possible_hits":"0",},
{"lineNum":"   18","line":"\t\t;;"},
{"lineNum":"   19","line":"\t,yes,*)"},
{"lineNum":"   20","line":"\t\tremotes=\"$remotes$arg \"","class":"lineCov","hits":"23","possible_hits":"0",},
{"lineNum":"   21","line":"\t\t;;"},
{"lineNum":"   22","line":"\t*)"},
{"lineNum":"   23","line":"\t\tbases=\"$bases$arg \"","class":"lineCov","hits":"24","possible_hits":"0",},
{"lineNum":"   24","line":"\t\t;;"},
{"lineNum":"   25","line":"\tesac"},
{"lineNum":"   26","line":"done"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"# Give up if we are given two or more remotes -- not handling octopus."},
{"lineNum":"   29","line":"case \"$remotes\" in","class":"lineCov","hits":"23","possible_hits":"0",},
{"lineNum":"   30","line":"?*\' \'?*)"},
{"lineNum":"   31","line":"\texit 2 ;;","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   32","line":"esac"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"# Give up if this is a baseless merge."},
{"lineNum":"   35","line":"if test \'\' = \"$bases\"","class":"lineCov","hits":"23","possible_hits":"0",},
{"lineNum":"   36","line":"then"},
{"lineNum":"   37","line":"\texit 2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   38","line":"fi"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"git update-index -q --refresh","class":"lineCov","hits":"23","possible_hits":"0",},
{"lineNum":"   41","line":"git read-tree -u -m --aggressive $bases $head $remotes || exit 2","class":"lineCov","hits":"27","possible_hits":"0",},
{"lineNum":"   42","line":"echo \"Trying simple merge.\"","class":"lineCov","hits":"19","possible_hits":"0",},
{"lineNum":"   43","line":"if result_tree=$(git write-tree 2>/dev/null)","class":"lineCov","hits":"38","possible_hits":"0",},
{"lineNum":"   44","line":"then"},
{"lineNum":"   45","line":"\texit 0","class":"lineCov","hits":"7","possible_hits":"0",},
{"lineNum":"   46","line":"else"},
{"lineNum":"   47","line":"\techo \"Simple merge failed, trying Automatic merge.\"","class":"lineCov","hits":"12","possible_hits":"0",},
{"lineNum":"   48","line":"\tif git-merge-index -o git-merge-one-file -a","class":"lineCov","hits":"12","possible_hits":"0",},
{"lineNum":"   49","line":"\tthen"},
{"lineNum":"   50","line":"\t\texit 0","class":"lineCov","hits":"7","possible_hits":"0",},
{"lineNum":"   51","line":"\telse"},
{"lineNum":"   52","line":"\t\texit 1","class":"lineCov","hits":"5","possible_hits":"0",},
{"lineNum":"   53","line":"\tfi"},
{"lineNum":"   54","line":"fi"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "git-merge-resolve", "date" : "2015-07-02 17:40:12", "instrumented" : 20, "covered" : 18,};
var merged_data = [];
