var data = {lines:[
{"lineNum":"    1","line":"#!/bin/sh"},
{"lineNum":"    2","line":"# Copyright (c) 2007, Nanako Shiraishi"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"dashless=$(basename \"$0\" | sed -e \'s/-/ /\')","class":"lineCov","hits":"1",},
{"lineNum":"    5","line":"USAGE=\"list [<options>]"},
{"lineNum":"    6","line":"   or: $dashless show [<stash>]"},
{"lineNum":"    7","line":"   or: $dashless drop [-q|--quiet] [<stash>]"},
{"lineNum":"    8","line":"   or: $dashless ( pop | apply ) [--index] [-q|--quiet] [<stash>]"},
{"lineNum":"    9","line":"   or: $dashless branch <branchname> [<stash>]"},
{"lineNum":"   10","line":"   or: $dashless [save [--patch] [-k|--[no-]keep-index] [-q|--quiet]"},
{"lineNum":"   11","line":"\t\t       [-u|--include-untracked] [-a|--all] [<message>]]"},
{"lineNum":"   12","line":"   or: $dashless clear\"","class":"lineCov","hits":"1",},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"SUBDIRECTORY_OK=Yes","class":"lineCov","hits":"1",},
{"lineNum":"   15","line":"OPTIONS_SPEC=","class":"lineCov","hits":"1",},
{"lineNum":"   16","line":"START_DIR=$(pwd)","class":"lineCov","hits":"1",},
{"lineNum":"   17","line":". git-sh-setup","class":"lineCov","hits":"1",},
{"lineNum":"   18","line":". git-sh-i18n","class":"lineCov","hits":"1",},
{"lineNum":"   19","line":"require_work_tree","class":"lineCov","hits":"1",},
{"lineNum":"   20","line":"cd_to_toplevel","class":"lineCov","hits":"1",},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"TMP=\"$GIT_DIR/.git-stash.$$\"","class":"lineCov","hits":"1",},
{"lineNum":"   23","line":"TMPindex=${GIT_INDEX_FILE-\"$(git rev-parse --git-path index)\"}.stash.$$","class":"lineCov","hits":"1",},
{"lineNum":"   24","line":"trap \'rm -f \"$TMP-\"* \"$TMPindex\"\' 0","class":"lineCov","hits":"1",},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"ref_stash=refs/stash","class":"lineCov","hits":"1",},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"if git config --get-colorbool color.interactive; then","class":"lineCov","hits":"1",},
{"lineNum":"   29","line":"       help_color=\"$(git config --get-color color.interactive.help \'red bold\')\"","class":"lineNoCov","hits":"0",},
{"lineNum":"   30","line":"       reset_color=\"$(git config --get-color \'\' reset)\"","class":"lineNoCov","hits":"0",},
{"lineNum":"   31","line":"else"},
{"lineNum":"   32","line":"       help_color=","class":"lineCov","hits":"1",},
{"lineNum":"   33","line":"       reset_color=","class":"lineCov","hits":"1",},
{"lineNum":"   34","line":"fi"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"no_changes () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   37","line":"\tgit diff-index --quiet --cached HEAD --ignore-submodules -- &&","class":"lineCov","hits":"1",},
{"lineNum":"   38","line":"\tgit diff-files --quiet --ignore-submodules &&","class":"lineCov","hits":"1",},
{"lineNum":"   39","line":"\t(test -z \"$untracked\" || test -z \"$(untracked_files)\")","class":"lineCov","hits":"1",},
{"lineNum":"   40","line":"}"},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"untracked_files () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   43","line":"\texcl_opt=--exclude-standard","class":"lineCov","hits":"1",},
{"lineNum":"   44","line":"\ttest \"$untracked\" = \"all\" && excl_opt=","class":"lineCov","hits":"1",},
{"lineNum":"   45","line":"\tgit ls-files -o -z $excl_opt","class":"lineCov","hits":"1",},
{"lineNum":"   46","line":"}"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"clear_stash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   49","line":"\tif test $# != 0","class":"lineCov","hits":"1",},
{"lineNum":"   50","line":"\tthen"},
{"lineNum":"   51","line":"\t\tdie \"$(gettext \"git stash clear with parameters is unimplemented\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"   52","line":"\tfi"},
{"lineNum":"   53","line":"\tif current=$(git rev-parse --verify --quiet $ref_stash)","class":"lineCov","hits":"1",},
{"lineNum":"   54","line":"\tthen"},
{"lineNum":"   55","line":"\t\tgit update-ref -d $ref_stash $current","class":"lineCov","hits":"1",},
{"lineNum":"   56","line":"\tfi"},
{"lineNum":"   57","line":"}"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"create_stash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   60","line":"\tstash_msg=\"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"   61","line":"\tuntracked=\"$2\"","class":"lineCov","hits":"1",},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"\tgit update-index -q --refresh","class":"lineCov","hits":"1",},
{"lineNum":"   64","line":"\tif no_changes","class":"lineCov","hits":"1",},
{"lineNum":"   65","line":"\tthen"},
{"lineNum":"   66","line":"\t\texit 0","class":"lineCov","hits":"1",},
{"lineNum":"   67","line":"\tfi"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"\t# state of the base commit"},
{"lineNum":"   70","line":"\tif b_commit=$(git rev-parse --verify HEAD)","class":"lineCov","hits":"1",},
{"lineNum":"   71","line":"\tthen"},
{"lineNum":"   72","line":"\t\thead=$(git rev-list --oneline -n 1 HEAD --)","class":"lineCov","hits":"1",},
{"lineNum":"   73","line":"\telse"},
{"lineNum":"   74","line":"\t\tdie \"$(gettext \"You do not have the initial commit yet\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"   75","line":"\tfi"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"\tif branch=$(git symbolic-ref -q HEAD)","class":"lineCov","hits":"1",},
{"lineNum":"   78","line":"\tthen"},
{"lineNum":"   79","line":"\t\tbranch=${branch#refs/heads/}","class":"lineCov","hits":"1",},
{"lineNum":"   80","line":"\telse"},
{"lineNum":"   81","line":"\t\tbranch=\'(no branch)\'","class":"lineNoCov","hits":"0",},
{"lineNum":"   82","line":"\tfi"},
{"lineNum":"   83","line":"\tmsg=$(printf \'%s: %s\' \"$branch\" \"$head\")","class":"lineCov","hits":"1",},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"\t# state of the index"},
{"lineNum":"   86","line":"\ti_tree=$(git write-tree) &&","class":"lineCov","hits":"1",},
{"lineNum":"   87","line":"\ti_commit=$(printf \'index on %s\\n\' \"$msg\" |","class":"lineNoCov","hits":"0",},
{"lineNum":"   88","line":"\t\tgit commit-tree $i_tree -p $b_commit) ||","class":"lineCov","hits":"1",},
{"lineNum":"   89","line":"\t\tdie \"$(gettext \"Cannot save the current index state\")\"","class":"lineCov","hits":"1",},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"\tif test -n \"$untracked\"","class":"lineCov","hits":"1",},
{"lineNum":"   92","line":"\tthen"},
{"lineNum":"   93","line":"\t\t# Untracked files are stored by themselves in a parentless commit, for"},
{"lineNum":"   94","line":"\t\t# ease of unpacking later."},
{"lineNum":"   95","line":"\t\tu_commit=$(","class":"lineNoCov","hits":"0",},
{"lineNum":"   96","line":"\t\t\tuntracked_files | (","class":"lineNoCov","hits":"0",},
{"lineNum":"   97","line":"\t\t\t\tGIT_INDEX_FILE=\"$TMPindex\" &&","class":"lineNoCov","hits":"0",},
{"lineNum":"   98","line":"\t\t\t\texport GIT_INDEX_FILE &&","class":"lineNoCov","hits":"0",},
{"lineNum":"   99","line":"\t\t\t\trm -f \"$TMPindex\" &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  100","line":"\t\t\t\tgit update-index -z --add --remove --stdin &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  101","line":"\t\t\t\tu_tree=$(git write-tree) &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  102","line":"\t\t\t\tprintf \'untracked files on %s\\n\' \"$msg\" | git commit-tree $u_tree  &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  103","line":"\t\t\t\trm -f \"$TMPindex\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  104","line":"\t\t) ) || die \"Cannot save the untracked files\"","class":"lineCov","hits":"1",},
{"lineNum":"  105","line":""},
{"lineNum":"  106","line":"\t\tuntracked_commit_option=\"-p $u_commit\";","class":"lineCov","hits":"1",},
{"lineNum":"  107","line":"\telse"},
{"lineNum":"  108","line":"\t\tuntracked_commit_option=","class":"lineCov","hits":"1",},
{"lineNum":"  109","line":"\tfi"},
{"lineNum":"  110","line":""},
{"lineNum":"  111","line":"\tif test -z \"$patch_mode\"","class":"lineCov","hits":"1",},
{"lineNum":"  112","line":"\tthen"},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"\t\t# state of the working tree"},
{"lineNum":"  115","line":"\t\tw_tree=$( (","class":"lineNoCov","hits":"0",},
{"lineNum":"  116","line":"\t\t\tgit read-tree --index-output=\"$TMPindex\" -m $i_tree &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  117","line":"\t\t\tGIT_INDEX_FILE=\"$TMPindex\" &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  118","line":"\t\t\texport GIT_INDEX_FILE &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  119","line":"\t\t\tgit diff --name-only -z HEAD -- >\"$TMP-stagenames\" &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  120","line":"\t\t\tgit update-index -z --add --remove --stdin <\"$TMP-stagenames\" &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  121","line":"\t\t\tgit write-tree &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  122","line":"\t\t\trm -f \"$TMPindex\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  123","line":"\t\t) ) ||","class":"lineCov","hits":"1",},
{"lineNum":"  124","line":"\t\t\tdie \"$(gettext \"Cannot save the current worktree state\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"\telse"},
{"lineNum":"  127","line":""},
{"lineNum":"  128","line":"\t\trm -f \"$TMP-index\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  129","line":"\t\tGIT_INDEX_FILE=\"$TMP-index\" git read-tree HEAD &&","class":"lineCov","hits":"1",},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"\t\t# find out what the user wants"},
{"lineNum":"  132","line":"\t\tGIT_INDEX_FILE=\"$TMP-index\" \\","class":"lineCov","hits":"1",},
{"lineNum":"  133","line":"\t\t\tgit add--interactive --patch=stash -- &&"},
{"lineNum":"  134","line":""},
{"lineNum":"  135","line":"\t\t# state of the working tree"},
{"lineNum":"  136","line":"\t\tw_tree=$(GIT_INDEX_FILE=\"$TMP-index\" git write-tree) ||","class":"lineCov","hits":"1",},
{"lineNum":"  137","line":"\t\tdie \"$(gettext \"Cannot save the current worktree state\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"\t\tgit diff-tree -p HEAD $w_tree -- >\"$TMP-patch\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  140","line":"\t\ttest -s \"$TMP-patch\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  141","line":"\t\tdie \"$(gettext \"No changes selected\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"\t\trm -f \"$TMP-index\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  144","line":"\t\tdie \"$(gettext \"Cannot remove temporary index (can\'t happen)\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":"\tfi"},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"\t# create the stash"},
{"lineNum":"  149","line":"\tif test -z \"$stash_msg\"","class":"lineCov","hits":"1",},
{"lineNum":"  150","line":"\tthen"},
{"lineNum":"  151","line":"\t\tstash_msg=$(printf \'WIP on %s\' \"$msg\")","class":"lineCov","hits":"1",},
{"lineNum":"  152","line":"\telse"},
{"lineNum":"  153","line":"\t\tstash_msg=$(printf \'On %s: %s\' \"$branch\" \"$stash_msg\")","class":"lineCov","hits":"1",},
{"lineNum":"  154","line":"\tfi"},
{"lineNum":"  155","line":"\tw_commit=$(printf \'%s\\n\' \"$stash_msg\" |","class":"lineNoCov","hits":"0",},
{"lineNum":"  156","line":"\tgit commit-tree $w_tree -p $b_commit -p $i_commit $untracked_commit_option) ||","class":"lineCov","hits":"1",},
{"lineNum":"  157","line":"\tdie \"$(gettext \"Cannot record working tree state\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  158","line":"}"},
{"lineNum":"  159","line":""},
{"lineNum":"  160","line":"store_stash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  161","line":"\twhile test $# != 0","class":"lineCov","hits":"1",},
{"lineNum":"  162","line":"\tdo"},
{"lineNum":"  163","line":"\t\tcase \"$1\" in","class":"lineCov","hits":"1",},
{"lineNum":"  164","line":"\t\t-m|--message)"},
{"lineNum":"  165","line":"\t\t\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  166","line":"\t\t\tstash_msg=\"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"  167","line":"\t\t\t;;"},
{"lineNum":"  168","line":"\t\t-q|--quiet)"},
{"lineNum":"  169","line":"\t\t\tquiet=t","class":"lineCov","hits":"1",},
{"lineNum":"  170","line":"\t\t\t;;"},
{"lineNum":"  171","line":"\t\t*)"},
{"lineNum":"  172","line":"\t\t\tbreak","class":"lineCov","hits":"1",},
{"lineNum":"  173","line":"\t\t\t;;"},
{"lineNum":"  174","line":"\t\tesac"},
{"lineNum":"  175","line":"\t\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  176","line":"\tdone"},
{"lineNum":"  177","line":"\ttest $# = 1 ||","class":"lineCov","hits":"1",},
{"lineNum":"  178","line":"\tdie \"$(eval_gettext \"\\\"$dashless store\\\" requires one <commit> argument\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"\tw_commit=\"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"  181","line":"\tif test -z \"$stash_msg\"","class":"lineCov","hits":"1",},
{"lineNum":"  182","line":"\tthen"},
{"lineNum":"  183","line":"\t\tstash_msg=\"Created via \\\"git stash store\\\".\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  184","line":"\tfi"},
{"lineNum":"  185","line":""},
{"lineNum":"  186","line":"\t# Make sure the reflog for stash is kept."},
{"lineNum":"  187","line":"\t: >>\"$(git rev-parse --git-path logs/$ref_stash)\"","class":"lineCov","hits":"1",},
{"lineNum":"  188","line":"\tgit update-ref -m \"$stash_msg\" $ref_stash $w_commit","class":"lineCov","hits":"1",},
{"lineNum":"  189","line":"\tret=$?","class":"lineCov","hits":"1",},
{"lineNum":"  190","line":"\ttest $ret != 0 && test -z $quiet &&","class":"lineCov","hits":"1",},
{"lineNum":"  191","line":"\tdie \"$(eval_gettext \"Cannot update \\$ref_stash with \\$w_commit\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  192","line":"\treturn $ret","class":"lineCov","hits":"1",},
{"lineNum":"  193","line":"}"},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"save_stash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  196","line":"\tkeep_index=","class":"lineCov","hits":"1",},
{"lineNum":"  197","line":"\tpatch_mode=","class":"lineCov","hits":"1",},
{"lineNum":"  198","line":"\tuntracked=","class":"lineCov","hits":"1",},
{"lineNum":"  199","line":"\twhile test $# != 0","class":"lineCov","hits":"1",},
{"lineNum":"  200","line":"\tdo"},
{"lineNum":"  201","line":"\t\tcase \"$1\" in","class":"lineCov","hits":"1",},
{"lineNum":"  202","line":"\t\t-k|--keep-index)"},
{"lineNum":"  203","line":"\t\t\tkeep_index=t","class":"lineNoCov","hits":"0",},
{"lineNum":"  204","line":"\t\t\t;;"},
{"lineNum":"  205","line":"\t\t--no-keep-index)"},
{"lineNum":"  206","line":"\t\t\tkeep_index=n","class":"lineCov","hits":"1",},
{"lineNum":"  207","line":"\t\t\t;;"},
{"lineNum":"  208","line":"\t\t-p|--patch)"},
{"lineNum":"  209","line":"\t\t\tpatch_mode=t","class":"lineCov","hits":"1",},
{"lineNum":"  210","line":"\t\t\t# only default to keep if we don\'t already have an override"},
{"lineNum":"  211","line":"\t\t\ttest -z \"$keep_index\" && keep_index=t","class":"lineCov","hits":"1",},
{"lineNum":"  212","line":"\t\t\t;;"},
{"lineNum":"  213","line":"\t\t-q|--quiet)"},
{"lineNum":"  214","line":"\t\t\tGIT_QUIET=t","class":"lineCov","hits":"1",},
{"lineNum":"  215","line":"\t\t\t;;"},
{"lineNum":"  216","line":"\t\t-u|--include-untracked)"},
{"lineNum":"  217","line":"\t\t\tuntracked=untracked","class":"lineCov","hits":"1",},
{"lineNum":"  218","line":"\t\t\t;;"},
{"lineNum":"  219","line":"\t\t-a|--all)"},
{"lineNum":"  220","line":"\t\t\tuntracked=all","class":"lineCov","hits":"1",},
{"lineNum":"  221","line":"\t\t\t;;"},
{"lineNum":"  222","line":"\t\t--help)"},
{"lineNum":"  223","line":"\t\t\tshow_help","class":"lineNoCov","hits":"0",},
{"lineNum":"  224","line":"\t\t\t;;"},
{"lineNum":"  225","line":"\t\t--)"},
{"lineNum":"  226","line":"\t\t\tshift","class":"lineNoCov","hits":"0",},
{"lineNum":"  227","line":"\t\t\tbreak","class":"lineNoCov","hits":"0",},
{"lineNum":"  228","line":"\t\t\t;;"},
{"lineNum":"  229","line":"\t\t-*)"},
{"lineNum":"  230","line":"\t\t\toption=\"$1\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  231","line":"\t\t\t# TRANSLATORS: $option is an invalid option, like"},
{"lineNum":"  232","line":"\t\t\t# `--blah-blah\'. The 7 spaces at the beginning of the"},
{"lineNum":"  233","line":"\t\t\t# second line correspond to \"error: \". So you should line"},
{"lineNum":"  234","line":"\t\t\t# up the second line with however many characters the"},
{"lineNum":"  235","line":"\t\t\t# translation of \"error: \" takes in your language. E.g. in"},
{"lineNum":"  236","line":"\t\t\t# English this is:"},
{"lineNum":"  237","line":"\t\t\t#"},
{"lineNum":"  238","line":"\t\t\t#    $ git stash save --blah-blah 2>&1 | head -n 2"},
{"lineNum":"  239","line":"\t\t\t#    error: unknown option for \'stash save\': --blah-blah"},
{"lineNum":"  240","line":"\t\t\t#           To provide a message, use git stash save -- \'--blah-blah\'"},
{"lineNum":"  241","line":"\t\t\teval_gettextln \"error: unknown option for \'stash save\': \\$option","class":"lineNoCov","hits":"0",},
{"lineNum":"  242","line":"       To provide a message, use git stash save -- \'\\$option\'\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  243","line":"\t\t\tusage","class":"lineNoCov","hits":"0",},
{"lineNum":"  244","line":"\t\t\t;;"},
{"lineNum":"  245","line":"\t\t*)"},
{"lineNum":"  246","line":"\t\t\tbreak","class":"lineCov","hits":"1",},
{"lineNum":"  247","line":"\t\t\t;;"},
{"lineNum":"  248","line":"\t\tesac"},
{"lineNum":"  249","line":"\t\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  250","line":"\tdone"},
{"lineNum":"  251","line":""},
{"lineNum":"  252","line":"\tif test -n \"$patch_mode\" && test -n \"$untracked\"","class":"lineCov","hits":"1",},
{"lineNum":"  253","line":"\tthen"},
{"lineNum":"  254","line":"\t    die \"Can\'t use --patch and --include-untracked or --all at the same time\"","class":"lineCov","hits":"1",},
{"lineNum":"  255","line":"\tfi"},
{"lineNum":"  256","line":""},
{"lineNum":"  257","line":"\tstash_msg=\"$*\"","class":"lineCov","hits":"1",},
{"lineNum":"  258","line":""},
{"lineNum":"  259","line":"\tgit update-index -q --refresh","class":"lineCov","hits":"1",},
{"lineNum":"  260","line":"\tif no_changes","class":"lineCov","hits":"1",},
{"lineNum":"  261","line":"\tthen"},
{"lineNum":"  262","line":"\t\tsay \"$(gettext \"No local changes to save\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  263","line":"\t\texit 0","class":"lineCov","hits":"1",},
{"lineNum":"  264","line":"\tfi"},
{"lineNum":"  265","line":"\ttest -f \"$(git rev-parse --git-path logs/$ref_stash)\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  266","line":"\t\tclear_stash || die \"$(gettext \"Cannot initialize stash\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  267","line":""},
{"lineNum":"  268","line":"\tcreate_stash \"$stash_msg\" $untracked","class":"lineCov","hits":"1",},
{"lineNum":"  269","line":"\tstore_stash -m \"$stash_msg\" -q $w_commit ||","class":"lineCov","hits":"1",},
{"lineNum":"  270","line":"\tdie \"$(gettext \"Cannot save the current status\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  271","line":"\tsay Saved working directory and index state \"$stash_msg\"","class":"lineCov","hits":"1",},
{"lineNum":"  272","line":""},
{"lineNum":"  273","line":"\tif test -z \"$patch_mode\"","class":"lineCov","hits":"1",},
{"lineNum":"  274","line":"\tthen"},
{"lineNum":"  275","line":"\t\tgit reset --hard ${GIT_QUIET:+-q}","class":"lineCov","hits":"1",},
{"lineNum":"  276","line":"\t\ttest \"$untracked\" = \"all\" && CLEAN_X_OPTION=-x || CLEAN_X_OPTION=","class":"lineCov","hits":"1",},
{"lineNum":"  277","line":"\t\tif test -n \"$untracked\"","class":"lineCov","hits":"1",},
{"lineNum":"  278","line":"\t\tthen"},
{"lineNum":"  279","line":"\t\t\tgit clean --force --quiet -d $CLEAN_X_OPTION","class":"lineCov","hits":"1",},
{"lineNum":"  280","line":"\t\tfi"},
{"lineNum":"  281","line":""},
{"lineNum":"  282","line":"\t\tif test \"$keep_index\" = \"t\" && test -n $i_tree","class":"lineCov","hits":"1",},
{"lineNum":"  283","line":"\t\tthen"},
{"lineNum":"  284","line":"\t\t\tgit read-tree --reset -u $i_tree","class":"lineNoCov","hits":"0",},
{"lineNum":"  285","line":"\t\tfi"},
{"lineNum":"  286","line":"\telse"},
{"lineNum":"  287","line":"\t\tgit apply -R < \"$TMP-patch\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  288","line":"\t\tdie \"$(gettext \"Cannot remove worktree changes\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  289","line":""},
{"lineNum":"  290","line":"\t\tif test \"$keep_index\" != \"t\"","class":"lineCov","hits":"1",},
{"lineNum":"  291","line":"\t\tthen"},
{"lineNum":"  292","line":"\t\t\tgit reset","class":"lineCov","hits":"1",},
{"lineNum":"  293","line":"\t\tfi"},
{"lineNum":"  294","line":"\tfi"},
{"lineNum":"  295","line":"}"},
{"lineNum":"  296","line":""},
{"lineNum":"  297","line":"have_stash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  298","line":"\tgit rev-parse --verify --quiet $ref_stash >/dev/null","class":"lineCov","hits":"1",},
{"lineNum":"  299","line":"}"},
{"lineNum":"  300","line":""},
{"lineNum":"  301","line":"list_stash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  302","line":"\thave_stash || return 0","class":"lineNoCov","hits":"0",},
{"lineNum":"  303","line":"\tgit log --format=\"%gd: %gs\" -g --first-parent -m \"$@\" $ref_stash --","class":"lineNoCov","hits":"0",},
{"lineNum":"  304","line":"}"},
{"lineNum":"  305","line":""},
{"lineNum":"  306","line":"show_stash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  307","line":"\tALLOW_UNKNOWN_FLAGS=t","class":"lineNoCov","hits":"0",},
{"lineNum":"  308","line":"\tassert_stash_like \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  309","line":""},
{"lineNum":"  310","line":"\tgit diff ${FLAGS:---stat} $b_commit $w_commit","class":"lineNoCov","hits":"0",},
{"lineNum":"  311","line":"}"},
{"lineNum":"  312","line":""},
{"lineNum":"  313","line":"show_help () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  314","line":"\texec git help stash","class":"lineNoCov","hits":"0",},
{"lineNum":"  315","line":"\texit 1","class":"lineNoCov","hits":"0",},
{"lineNum":"  316","line":"}"},
{"lineNum":"  317","line":""},
{"lineNum":"  318","line":"#"},
{"lineNum":"  319","line":"# Parses the remaining options looking for flags and"},
{"lineNum":"  320","line":"# at most one revision defaulting to ${ref_stash}@{0}"},
{"lineNum":"  321","line":"# if none found."},
{"lineNum":"  322","line":"#"},
{"lineNum":"  323","line":"# Derives related tree and commit objects from the"},
{"lineNum":"  324","line":"# revision, if one is found."},
{"lineNum":"  325","line":"#"},
{"lineNum":"  326","line":"# stash records the work tree, and is a merge between the"},
{"lineNum":"  327","line":"# base commit (first parent) and the index tree (second parent)."},
{"lineNum":"  328","line":"#"},
{"lineNum":"  329","line":"#   REV is set to the symbolic version of the specified stash-like commit"},
{"lineNum":"  330","line":"#   IS_STASH_LIKE is non-blank if ${REV} looks like a stash"},
{"lineNum":"  331","line":"#   IS_STASH_REF is non-blank if the ${REV} looks like a stash ref"},
{"lineNum":"  332","line":"#   s is set to the SHA1 of the stash commit"},
{"lineNum":"  333","line":"#   w_commit is set to the commit containing the working tree"},
{"lineNum":"  334","line":"#   b_commit is set to the base commit"},
{"lineNum":"  335","line":"#   i_commit is set to the commit containing the index tree"},
{"lineNum":"  336","line":"#   u_commit is set to the commit containing the untracked files tree"},
{"lineNum":"  337","line":"#   w_tree is set to the working tree"},
{"lineNum":"  338","line":"#   b_tree is set to the base tree"},
{"lineNum":"  339","line":"#   i_tree is set to the index tree"},
{"lineNum":"  340","line":"#   u_tree is set to the untracked files tree"},
{"lineNum":"  341","line":"#"},
{"lineNum":"  342","line":"#   GIT_QUIET is set to t if -q is specified"},
{"lineNum":"  343","line":"#   INDEX_OPTION is set to --index if --index is specified."},
{"lineNum":"  344","line":"#   FLAGS is set to the remaining flags (if allowed)"},
{"lineNum":"  345","line":"#"},
{"lineNum":"  346","line":"# dies if:"},
{"lineNum":"  347","line":"#   * too many revisions specified"},
{"lineNum":"  348","line":"#   * no revision is specified and there is no stash stack"},
{"lineNum":"  349","line":"#   * a revision is specified which cannot be resolve to a SHA1"},
{"lineNum":"  350","line":"#   * a non-existent stash reference is specified"},
{"lineNum":"  351","line":"#   * unknown flags were set and ALLOW_UNKNOWN_FLAGS is not \"t\""},
{"lineNum":"  352","line":"#"},
{"lineNum":"  353","line":""},
{"lineNum":"  354","line":"parse_flags_and_rev()"},
{"lineNum":"  355","line":"{"},
{"lineNum":"  356","line":"\ttest \"$PARSE_CACHE\" = \"$*\" && return 0 # optimisation","class":"lineCov","hits":"1",},
{"lineNum":"  357","line":"\tPARSE_CACHE=\"$*\"","class":"lineCov","hits":"1",},
{"lineNum":"  358","line":""},
{"lineNum":"  359","line":"\tIS_STASH_LIKE=","class":"lineCov","hits":"1",},
{"lineNum":"  360","line":"\tIS_STASH_REF=","class":"lineCov","hits":"1",},
{"lineNum":"  361","line":"\tINDEX_OPTION=","class":"lineCov","hits":"1",},
{"lineNum":"  362","line":"\ts=","class":"lineCov","hits":"1",},
{"lineNum":"  363","line":"\tw_commit=","class":"lineCov","hits":"1",},
{"lineNum":"  364","line":"\tb_commit=","class":"lineCov","hits":"1",},
{"lineNum":"  365","line":"\ti_commit=","class":"lineCov","hits":"1",},
{"lineNum":"  366","line":"\tu_commit=","class":"lineCov","hits":"1",},
{"lineNum":"  367","line":"\tw_tree=","class":"lineCov","hits":"1",},
{"lineNum":"  368","line":"\tb_tree=","class":"lineCov","hits":"1",},
{"lineNum":"  369","line":"\ti_tree=","class":"lineCov","hits":"1",},
{"lineNum":"  370","line":"\tu_tree=","class":"lineCov","hits":"1",},
{"lineNum":"  371","line":""},
{"lineNum":"  372","line":"\tREV=$(git rev-parse --no-flags --symbolic --sq \"$@\") || exit 1","class":"lineCov","hits":"1",},
{"lineNum":"  373","line":""},
{"lineNum":"  374","line":"\tFLAGS=","class":"lineCov","hits":"1",},
{"lineNum":"  375","line":"\tfor opt","class":"lineCov","hits":"1",},
{"lineNum":"  376","line":"\tdo"},
{"lineNum":"  377","line":"\t\tcase \"$opt\" in","class":"lineCov","hits":"1",},
{"lineNum":"  378","line":"\t\t\t-q|--quiet)"},
{"lineNum":"  379","line":"\t\t\t\tGIT_QUIET=-t","class":"lineNoCov","hits":"0",},
{"lineNum":"  380","line":"\t\t\t;;"},
{"lineNum":"  381","line":"\t\t\t--index)"},
{"lineNum":"  382","line":"\t\t\t\tINDEX_OPTION=--index","class":"lineCov","hits":"1",},
{"lineNum":"  383","line":"\t\t\t;;"},
{"lineNum":"  384","line":"\t\t\t--help)"},
{"lineNum":"  385","line":"\t\t\t\tshow_help","class":"lineNoCov","hits":"0",},
{"lineNum":"  386","line":"\t\t\t;;"},
{"lineNum":"  387","line":"\t\t\t-*)"},
{"lineNum":"  388","line":"\t\t\t\ttest \"$ALLOW_UNKNOWN_FLAGS\" = t ||","class":"lineNoCov","hits":"0",},
{"lineNum":"  389","line":"\t\t\t\t\tdie \"$(eval_gettext \"unknown option: \\$opt\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  390","line":"\t\t\t\tFLAGS=\"${FLAGS}${FLAGS:+ }$opt\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  391","line":"\t\t\t;;"},
{"lineNum":"  392","line":"\t\tesac"},
{"lineNum":"  393","line":"\tdone"},
{"lineNum":"  394","line":""},
{"lineNum":"  395","line":"\teval set -- $REV","class":"lineCov","hits":"1",},
{"lineNum":"  396","line":""},
{"lineNum":"  397","line":"\tcase $# in","class":"lineCov","hits":"1",},
{"lineNum":"  398","line":"\t\t0)"},
{"lineNum":"  399","line":"\t\t\thave_stash || die \"$(gettext \"No stash found.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  400","line":"\t\t\tset -- ${ref_stash}@{0}","class":"lineCov","hits":"1",},
{"lineNum":"  401","line":"\t\t;;"},
{"lineNum":"  402","line":"\t\t1)"},
{"lineNum":"  403","line":"\t\t\t:","class":"lineNoCov","hits":"0",},
{"lineNum":"  404","line":"\t\t;;"},
{"lineNum":"  405","line":"\t\t*)"},
{"lineNum":"  406","line":"\t\t\tdie \"$(eval_gettext \"Too many revisions specified: \\$REV\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  407","line":"\t\t;;"},
{"lineNum":"  408","line":"\tesac"},
{"lineNum":"  409","line":""},
{"lineNum":"  410","line":"\tREV=$(git rev-parse --symbolic --verify --quiet \"$1\") || {","class":"lineCov","hits":"1",},
{"lineNum":"  411","line":"\t\treference=\"$1\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  412","line":"\t\tdie \"$(eval_gettext \"\\$reference is not a valid reference\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  413","line":"\t}"},
{"lineNum":"  414","line":""},
{"lineNum":"  415","line":"\ti_commit=$(git rev-parse --verify --quiet \"$REV^2\") &&","class":"lineCov","hits":"1",},
{"lineNum":"  416","line":"\tset -- $(git rev-parse \"$REV\" \"$REV^1\" \"$REV:\" \"$REV^1:\" \"$REV^2:\" 2>/dev/null) &&","class":"lineCov","hits":"1",},
{"lineNum":"  417","line":"\ts=$1 &&","class":"lineCov","hits":"1",},
{"lineNum":"  418","line":"\tw_commit=$1 &&","class":"lineCov","hits":"1",},
{"lineNum":"  419","line":"\tb_commit=$2 &&","class":"lineCov","hits":"1",},
{"lineNum":"  420","line":"\tw_tree=$3 &&","class":"lineCov","hits":"1",},
{"lineNum":"  421","line":"\tb_tree=$4 &&","class":"lineCov","hits":"1",},
{"lineNum":"  422","line":"\ti_tree=$5 &&","class":"lineCov","hits":"1",},
{"lineNum":"  423","line":"\tIS_STASH_LIKE=t &&","class":"lineCov","hits":"1",},
{"lineNum":"  424","line":"\ttest \"$ref_stash\" = \"$(git rev-parse --symbolic-full-name \"${REV%@*}\")\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  425","line":"\tIS_STASH_REF=t","class":"lineCov","hits":"1",},
{"lineNum":"  426","line":""},
{"lineNum":"  427","line":"\tu_commit=$(git rev-parse --verify --quiet \"$REV^3\") &&","class":"lineCov","hits":"1",},
{"lineNum":"  428","line":"\tu_tree=$(git rev-parse \"$REV^3:\" 2>/dev/null)","class":"lineCov","hits":"1",},
{"lineNum":"  429","line":"}"},
{"lineNum":"  430","line":""},
{"lineNum":"  431","line":"is_stash_like()"},
{"lineNum":"  432","line":"{"},
{"lineNum":"  433","line":"\tparse_flags_and_rev \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  434","line":"\ttest -n \"$IS_STASH_LIKE\"","class":"lineCov","hits":"1",},
{"lineNum":"  435","line":"}"},
{"lineNum":"  436","line":""},
{"lineNum":"  437","line":"assert_stash_like() {"},
{"lineNum":"  438","line":"\tis_stash_like \"$@\" || {","class":"lineCov","hits":"1",},
{"lineNum":"  439","line":"\t\targs=\"$*\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  440","line":"\t\tdie \"$(eval_gettext \"\'\\$args\' is not a stash-like commit\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  441","line":"\t}"},
{"lineNum":"  442","line":"}"},
{"lineNum":"  443","line":""},
{"lineNum":"  444","line":"is_stash_ref() {"},
{"lineNum":"  445","line":"\tis_stash_like \"$@\" && test -n \"$IS_STASH_REF\"","class":"lineCov","hits":"1",},
{"lineNum":"  446","line":"}"},
{"lineNum":"  447","line":""},
{"lineNum":"  448","line":"assert_stash_ref() {"},
{"lineNum":"  449","line":"\tis_stash_ref \"$@\" || {","class":"lineCov","hits":"1",},
{"lineNum":"  450","line":"\t\targs=\"$*\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  451","line":"\t\tdie \"$(eval_gettext \"\'\\$args\' is not a stash reference\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  452","line":"\t}"},
{"lineNum":"  453","line":"}"},
{"lineNum":"  454","line":""},
{"lineNum":"  455","line":"apply_stash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  456","line":""},
{"lineNum":"  457","line":"\tassert_stash_like \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  458","line":""},
{"lineNum":"  459","line":"\tgit update-index -q --refresh || die \"$(gettext \"unable to refresh index\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  460","line":""},
{"lineNum":"  461","line":"\t# current index state"},
{"lineNum":"  462","line":"\tc_tree=$(git write-tree) ||","class":"lineCov","hits":"1",},
{"lineNum":"  463","line":"\t\tdie \"$(gettext \"Cannot apply a stash in the middle of a merge\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  464","line":""},
{"lineNum":"  465","line":"\tunstashed_index_tree=","class":"lineCov","hits":"1",},
{"lineNum":"  466","line":"\tif test -n \"$INDEX_OPTION\" && test \"$b_tree\" != \"$i_tree\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  467","line":"\t\t\ttest \"$c_tree\" != \"$i_tree\"","class":"lineCov","hits":"1",},
{"lineNum":"  468","line":"\tthen"},
{"lineNum":"  469","line":"\t\tgit diff-tree --binary $s^2^..$s^2 | git apply --cached","class":"lineCov","hits":"1",},
{"lineNum":"  470","line":"\t\ttest $? -ne 0 &&","class":"lineCov","hits":"1",},
{"lineNum":"  471","line":"\t\t\tdie \"$(gettext \"Conflicts in index. Try without --index.\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  472","line":"\t\tunstashed_index_tree=$(git write-tree) ||","class":"lineCov","hits":"1",},
{"lineNum":"  473","line":"\t\t\tdie \"$(gettext \"Could not save index tree\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  474","line":"\t\tgit reset","class":"lineCov","hits":"1",},
{"lineNum":"  475","line":"\tfi"},
{"lineNum":"  476","line":""},
{"lineNum":"  477","line":"\tif test -n \"$u_tree\"","class":"lineCov","hits":"1",},
{"lineNum":"  478","line":"\tthen"},
{"lineNum":"  479","line":"\t\tGIT_INDEX_FILE=\"$TMPindex\" git-read-tree \"$u_tree\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  480","line":"\t\tGIT_INDEX_FILE=\"$TMPindex\" git checkout-index --all &&","class":"lineCov","hits":"1",},
{"lineNum":"  481","line":"\t\trm -f \"$TMPindex\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  482","line":"\t\tdie \'Could not restore untracked files from stash\'","class":"lineNoCov","hits":"0",},
{"lineNum":"  483","line":"\tfi"},
{"lineNum":"  484","line":""},
{"lineNum":"  485","line":"\teval \"","class":"lineNoCov","hits":"0",},
{"lineNum":"  486","line":"\t\tGITHEAD_$w_tree=\'Stashed changes\' &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  487","line":"\t\tGITHEAD_$c_tree=\'Updated upstream\' &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  488","line":"\t\tGITHEAD_$b_tree=\'Version stash was based on\' &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  489","line":"\t\texport GITHEAD_$w_tree GITHEAD_$c_tree GITHEAD_$b_tree","class":"lineNoCov","hits":"0",},
{"lineNum":"  490","line":"\t\"","class":"lineCov","hits":"1",},
{"lineNum":"  491","line":""},
{"lineNum":"  492","line":"\tif test -n \"$GIT_QUIET\"","class":"lineCov","hits":"1",},
{"lineNum":"  493","line":"\tthen"},
{"lineNum":"  494","line":"\t\tGIT_MERGE_VERBOSITY=0 && export GIT_MERGE_VERBOSITY","class":"lineCov","hits":"1",},
{"lineNum":"  495","line":"\tfi"},
{"lineNum":"  496","line":"\tif git merge-recursive $b_tree -- $c_tree $w_tree","class":"lineCov","hits":"1",},
{"lineNum":"  497","line":"\tthen"},
{"lineNum":"  498","line":"\t\t# No conflict"},
{"lineNum":"  499","line":"\t\tif test -n \"$unstashed_index_tree\"","class":"lineCov","hits":"1",},
{"lineNum":"  500","line":"\t\tthen"},
{"lineNum":"  501","line":"\t\t\tgit read-tree \"$unstashed_index_tree\"","class":"lineCov","hits":"1",},
{"lineNum":"  502","line":"\t\telse"},
{"lineNum":"  503","line":"\t\t\ta=\"$TMP-added\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  504","line":"\t\t\tgit diff-index --cached --name-only --diff-filter=A $c_tree >\"$a\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  505","line":"\t\t\tgit read-tree --reset $c_tree &&","class":"lineCov","hits":"1",},
{"lineNum":"  506","line":"\t\t\tgit update-index --add --stdin <\"$a\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  507","line":"\t\t\t\tdie \"$(gettext \"Cannot unstage modified files\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  508","line":"\t\t\trm -f \"$a\"","class":"lineCov","hits":"1",},
{"lineNum":"  509","line":"\t\tfi"},
{"lineNum":"  510","line":"\t\tsquelch=","class":"lineCov","hits":"1",},
{"lineNum":"  511","line":"\t\tif test -n \"$GIT_QUIET\"","class":"lineCov","hits":"1",},
{"lineNum":"  512","line":"\t\tthen"},
{"lineNum":"  513","line":"\t\t\tsquelch=\'>/dev/null 2>&1\'","class":"lineNoCov","hits":"0",},
{"lineNum":"  514","line":"\t\tfi"},
{"lineNum":"  515","line":"\t\t(cd \"$START_DIR\" && eval \"git status $squelch\") || :","class":"lineCov","hits":"1",},
{"lineNum":"  516","line":"\telse"},
{"lineNum":"  517","line":"\t\t# Merge conflict; keep the exit status from merge-recursive"},
{"lineNum":"  518","line":"\t\tstatus=$?","class":"lineCov","hits":"1",},
{"lineNum":"  519","line":"\t\tgit rerere","class":"lineCov","hits":"1",},
{"lineNum":"  520","line":"\t\tif test -n \"$INDEX_OPTION\"","class":"lineCov","hits":"1",},
{"lineNum":"  521","line":"\t\tthen"},
{"lineNum":"  522","line":"\t\t\tgettextln \"Index was not unstashed.\" >&2","class":"lineNoCov","hits":"0",},
{"lineNum":"  523","line":"\t\tfi"},
{"lineNum":"  524","line":"\t\texit $status","class":"lineCov","hits":"1",},
{"lineNum":"  525","line":"\tfi"},
{"lineNum":"  526","line":"}"},
{"lineNum":"  527","line":""},
{"lineNum":"  528","line":"pop_stash() {"},
{"lineNum":"  529","line":"\tassert_stash_ref \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  530","line":""},
{"lineNum":"  531","line":"\tif apply_stash \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  532","line":"\tthen"},
{"lineNum":"  533","line":"\t\tdrop_stash \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  534","line":"\telse"},
{"lineNum":"  535","line":"\t\tstatus=$?","class":"lineNoCov","hits":"0",},
{"lineNum":"  536","line":"\t\tsay \"The stash is kept in case you need it again.\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  537","line":"\t\texit $status","class":"lineNoCov","hits":"0",},
{"lineNum":"  538","line":"\tfi"},
{"lineNum":"  539","line":"}"},
{"lineNum":"  540","line":""},
{"lineNum":"  541","line":"drop_stash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  542","line":"\tassert_stash_ref \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  543","line":""},
{"lineNum":"  544","line":"\tgit reflog delete --updateref --rewrite \"${REV}\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  545","line":"\t\tsay \"$(eval_gettext \"Dropped \\${REV} (\\$s)\")\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  546","line":"\t\tdie \"$(eval_gettext \"\\${REV}: Could not drop stash entry\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  547","line":""},
{"lineNum":"  548","line":"\t# clear_stash if we just dropped the last stash entry"},
{"lineNum":"  549","line":"\tgit rev-parse --verify --quiet \"$ref_stash@{0}\" >/dev/null ||","class":"lineCov","hits":"1",},
{"lineNum":"  550","line":"\tclear_stash","class":"lineCov","hits":"1",},
{"lineNum":"  551","line":"}"},
{"lineNum":"  552","line":""},
{"lineNum":"  553","line":"apply_to_branch () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  554","line":"\ttest -n \"$1\" || die \"$(gettext \"No branch name specified\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  555","line":"\tbranch=$1","class":"lineNoCov","hits":"0",},
{"lineNum":"  556","line":"\tshift 1","class":"lineNoCov","hits":"0",},
{"lineNum":"  557","line":""},
{"lineNum":"  558","line":"\tset -- --index \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  559","line":"\tassert_stash_like \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  560","line":""},
{"lineNum":"  561","line":"\tgit checkout -b $branch $REV^ &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  562","line":"\tapply_stash \"$@\" && {","class":"lineNoCov","hits":"0",},
{"lineNum":"  563","line":"\t\ttest -z \"$IS_STASH_REF\" || drop_stash \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  564","line":"\t}"},
{"lineNum":"  565","line":"}"},
{"lineNum":"  566","line":""},
{"lineNum":"  567","line":"PARSE_CACHE=\'--not-parsed\'","class":"lineCov","hits":"1",},
{"lineNum":"  568","line":"# The default command is \"save\" if nothing but options are given"},
{"lineNum":"  569","line":"seen_non_option=","class":"lineCov","hits":"1",},
{"lineNum":"  570","line":"for opt","class":"lineCov","hits":"1",},
{"lineNum":"  571","line":"do"},
{"lineNum":"  572","line":"\tcase \"$opt\" in","class":"lineCov","hits":"1",},
{"lineNum":"  573","line":"\t-*) ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  574","line":"\t*) seen_non_option=t; break ;;","class":"lineCov","hits":"1",},
{"lineNum":"  575","line":"\tesac"},
{"lineNum":"  576","line":"done"},
{"lineNum":"  577","line":""},
{"lineNum":"  578","line":"test -n \"$seen_non_option\" || set \"save\" \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  579","line":""},
{"lineNum":"  580","line":"# Main command set"},
{"lineNum":"  581","line":"case \"$1\" in","class":"lineCov","hits":"1",},
{"lineNum":"  582","line":"list)"},
{"lineNum":"  583","line":"\tshift","class":"lineNoCov","hits":"0",},
{"lineNum":"  584","line":"\tlist_stash \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  585","line":"\t;;"},
{"lineNum":"  586","line":"show)"},
{"lineNum":"  587","line":"\tshift","class":"lineNoCov","hits":"0",},
{"lineNum":"  588","line":"\tshow_stash \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  589","line":"\t;;"},
{"lineNum":"  590","line":"save)"},
{"lineNum":"  591","line":"\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  592","line":"\tsave_stash \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  593","line":"\t;;"},
{"lineNum":"  594","line":"apply)"},
{"lineNum":"  595","line":"\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  596","line":"\tapply_stash \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  597","line":"\t;;"},
{"lineNum":"  598","line":"clear)"},
{"lineNum":"  599","line":"\tshift","class":"lineNoCov","hits":"0",},
{"lineNum":"  600","line":"\tclear_stash \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  601","line":"\t;;"},
{"lineNum":"  602","line":"create)"},
{"lineNum":"  603","line":"\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  604","line":"\tcreate_stash \"$*\" && echo \"$w_commit\"","class":"lineCov","hits":"1",},
{"lineNum":"  605","line":"\t;;"},
{"lineNum":"  606","line":"store)"},
{"lineNum":"  607","line":"\tshift","class":"lineNoCov","hits":"0",},
{"lineNum":"  608","line":"\tstore_stash \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  609","line":"\t;;"},
{"lineNum":"  610","line":"drop)"},
{"lineNum":"  611","line":"\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  612","line":"\tdrop_stash \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  613","line":"\t;;"},
{"lineNum":"  614","line":"pop)"},
{"lineNum":"  615","line":"\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  616","line":"\tpop_stash \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  617","line":"\t;;"},
{"lineNum":"  618","line":"branch)"},
{"lineNum":"  619","line":"\tshift","class":"lineNoCov","hits":"0",},
{"lineNum":"  620","line":"\tapply_to_branch \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  621","line":"\t;;"},
{"lineNum":"  622","line":"*)"},
{"lineNum":"  623","line":"\tcase $# in","class":"lineNoCov","hits":"0",},
{"lineNum":"  624","line":"\t0)"},
{"lineNum":"  625","line":"\t\tsave_stash &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  626","line":"\t\tsay \"$(gettext \"(To restore them type \\\"git stash apply\\\")\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  627","line":"\t\t;;"},
{"lineNum":"  628","line":"\t*)"},
{"lineNum":"  629","line":"\t\tusage","class":"lineNoCov","hits":"0",},
{"lineNum":"  630","line":"\tesac"},
{"lineNum":"  631","line":"\t;;"},
{"lineNum":"  632","line":"esac"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "git-stash", "date" : "2015-07-02 17:41:50", "instrumented" : 319, "covered" : 208,};
var merged_data = [];
