var data = {lines:[
{"lineNum":"    1","line":"# This shell library is Git\'s interface to gettext.sh. See po/README"},
{"lineNum":"    2","line":"# for usage instructions."},
{"lineNum":"    3","line":"#"},
{"lineNum":"    4","line":"# Copyright (c) 2010 Ævar Arnfjörð Bjarmason"},
{"lineNum":"    5","line":"#"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"# Export the TEXTDOMAIN* data that we need for Git"},
{"lineNum":"    8","line":"TEXTDOMAIN=git","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"    9","line":"export TEXTDOMAIN","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   10","line":"if test -z \"$GIT_TEXTDOMAINDIR\"","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   11","line":"then"},
{"lineNum":"   12","line":"\tTEXTDOMAINDIR=\"/home/pyokagan/share/locale\"","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   13","line":"else"},
{"lineNum":"   14","line":"\tTEXTDOMAINDIR=\"$GIT_TEXTDOMAINDIR\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   15","line":"fi"},
{"lineNum":"   16","line":"export TEXTDOMAINDIR","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"# First decide what scheme to use..."},
{"lineNum":"   19","line":"GIT_INTERNAL_GETTEXT_SH_SCHEME=fallthrough","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   20","line":"if test -n \"\"","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   21","line":"then"},
{"lineNum":"   22","line":"\tGIT_INTERNAL_GETTEXT_SH_SCHEME=\"\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   23","line":"elif test -n \"$GIT_INTERNAL_GETTEXT_TEST_FALLBACKS\"","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   24","line":"then"},
{"lineNum":"   25","line":"\t: no probing necessary","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   26","line":"elif test -n \"$GIT_GETTEXT_POISON\"","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   27","line":"then"},
{"lineNum":"   28","line":"\tGIT_INTERNAL_GETTEXT_SH_SCHEME=poison","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   29","line":"elif type gettext.sh >/dev/null 2>&1","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   30","line":"then"},
{"lineNum":"   31","line":"\t# GNU libintl\'s gettext.sh"},
{"lineNum":"   32","line":"\tGIT_INTERNAL_GETTEXT_SH_SCHEME=gnu","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   33","line":"elif test \"$(gettext -h 2>&1)\" = \"-h\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   34","line":"then"},
{"lineNum":"   35","line":"\t# gettext binary exists but no gettext.sh. likely to be a gettext"},
{"lineNum":"   36","line":"\t# binary on a Solaris or something that is not GNU libintl and"},
{"lineNum":"   37","line":"\t# lack eval_gettext."},
{"lineNum":"   38","line":"\tGIT_INTERNAL_GETTEXT_SH_SCHEME=gettext_without_eval_gettext","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   39","line":"fi"},
{"lineNum":"   40","line":"export GIT_INTERNAL_GETTEXT_SH_SCHEME","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"# ... and then follow that decision."},
{"lineNum":"   43","line":"case \"$GIT_INTERNAL_GETTEXT_SH_SCHEME\" in","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   44","line":"gnu)"},
{"lineNum":"   45","line":"\t# Use libintl\'s gettext.sh, or fall back to English if we can\'t."},
{"lineNum":"   46","line":"\t. gettext.sh","class":"lineCov","hits":"121","possible_hits":"0",},
{"lineNum":"   47","line":"\t;;"},
{"lineNum":"   48","line":"gettext_without_eval_gettext)"},
{"lineNum":"   49","line":"\t# Solaris has a gettext(1) but no eval_gettext(1)"},
{"lineNum":"   50","line":"\teval_gettext () {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   51","line":"\t\tgettext \"$1\" | (","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   52","line":"\t\t\texport PATH $(git sh-i18n--envsubst --variables \"$1\");","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   53","line":"\t\t\tgit sh-i18n--envsubst \"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   54","line":"\t\t)"},
{"lineNum":"   55","line":"\t}"},
{"lineNum":"   56","line":"\t;;"},
{"lineNum":"   57","line":"poison)"},
{"lineNum":"   58","line":"\t# Emit garbage so that tests that incorrectly rely on translatable"},
{"lineNum":"   59","line":"\t# strings will fail."},
{"lineNum":"   60","line":"\tgettext () {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   61","line":"\t\tprintf \"%s\" \"# GETTEXT POISON #\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   62","line":"\t}"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"\teval_gettext () {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   65","line":"\t\tprintf \"%s\" \"# GETTEXT POISON #\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   66","line":"\t}"},
{"lineNum":"   67","line":"\t;;"},
{"lineNum":"   68","line":"*)"},
{"lineNum":"   69","line":"\tgettext () {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   70","line":"\t\tprintf \"%s\" \"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   71","line":"\t}"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"\teval_gettext () {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   74","line":"\t\tprintf \"%s\" \"$1\" | (","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   75","line":"\t\t\texport PATH $(git sh-i18n--envsubst --variables \"$1\");","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   76","line":"\t\t\tgit sh-i18n--envsubst \"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   77","line":"\t\t)"},
{"lineNum":"   78","line":"\t}"},
{"lineNum":"   79","line":"\t;;"},
{"lineNum":"   80","line":"esac"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"# Git-specific wrapper functions"},
{"lineNum":"   83","line":"gettextln () {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   84","line":"\tgettext \"$1\"","class":"lineCov","hits":"3","possible_hits":"0",},
{"lineNum":"   85","line":"\techo","class":"lineCov","hits":"3","possible_hits":"0",},
{"lineNum":"   86","line":"}"},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"eval_gettextln () {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   89","line":"\teval_gettext \"$1\"","class":"lineCov","hits":"86","possible_hits":"0",},
{"lineNum":"   90","line":"\techo","class":"lineCov","hits":"86","possible_hits":"0",},
{"lineNum":"   91","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "git-am", "date" : "2015-05-01 11:32:07", "instrumented" : 40, "covered" : 18,};
var merged_data = [];
