var data = {lines:[
{"lineNum":"    1","line":"# This shell script fragment is sourced by git-rebase to implement"},
{"lineNum":"    2","line":"# its default, fast, patch-based, non-interactive mode."},
{"lineNum":"    3","line":"#"},
{"lineNum":"    4","line":"# Copyright (c) 2010 Junio C Hamano."},
{"lineNum":"    5","line":"#"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"# The whole contents of this file is run by dot-sourcing it from"},
{"lineNum":"    8","line":"# inside a shell function.  It used to be that \"return\"s we see"},
{"lineNum":"    9","line":"# below were not inside any function, and expected to return"},
{"lineNum":"   10","line":"# to the function that dot-sourced us."},
{"lineNum":"   11","line":"#"},
{"lineNum":"   12","line":"# However, FreeBSD /bin/sh misbehaves on such a construct and"},
{"lineNum":"   13","line":"# continues to run the statements that follow such a \"return\"."},
{"lineNum":"   14","line":"# As a work-around, we introduce an extra layer of a function"},
{"lineNum":"   15","line":"# here, and immediately call it after defining it."},
{"lineNum":"   16","line":"git_rebase__am () {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"case \"$action\" in","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"   19","line":"continue)"},
{"lineNum":"   20","line":"\tgit am --resolved --resolvemsg=\"$resolvemsg\" \\","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   21","line":"\t\t${gpg_sign_opt:+\"$gpg_sign_opt\"} &&"},
{"lineNum":"   22","line":"\tmove_to_original_branch","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   23","line":"\treturn","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   24","line":"\t;;"},
{"lineNum":"   25","line":"skip)"},
{"lineNum":"   26","line":"\tgit am --skip --resolvemsg=\"$resolvemsg\" &&","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   27","line":"\tmove_to_original_branch","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   28","line":"\treturn","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   29","line":"\t;;"},
{"lineNum":"   30","line":"esac"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"if test -z \"$rebase_root\"","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"   33","line":"\t# this is now equivalent to ! -z \"$upstream\""},
{"lineNum":"   34","line":"then"},
{"lineNum":"   35","line":"\trevisions=$upstream...$orig_head","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"   36","line":"else"},
{"lineNum":"   37","line":"\trevisions=$onto...$orig_head","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   38","line":"fi"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"ret=0","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"   41","line":"if test -n \"$keep_empty\"","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"   42","line":"then"},
{"lineNum":"   43","line":"\t# we have to do this the hard way.  git format-patch completely squashes"},
{"lineNum":"   44","line":"\t# empty commits and even if it didn\'t the format doesn\'t really lend"},
{"lineNum":"   45","line":"\t# itself well to recording empty patches.  fortunately, cherry-pick"},
{"lineNum":"   46","line":"\t# makes this easy"},
{"lineNum":"   47","line":"\tgit cherry-pick ${gpg_sign_opt:+\"$gpg_sign_opt\"} --allow-empty \\","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   48","line":"\t\t--right-only \"$revisions\" \\"},
{"lineNum":"   49","line":"\t\t${restrict_revision+^$restrict_revision}"},
{"lineNum":"   50","line":"\tret=$?","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   51","line":"else"},
{"lineNum":"   52","line":"\trm -f \"$GIT_DIR/rebased-patches\"","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"\tgit format-patch -k --stdout --full-index --cherry-pick --right-only \\","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"   55","line":"\t\t--src-prefix=a/ --dst-prefix=b/ --no-renames --no-cover-letter \\"},
{"lineNum":"   56","line":"\t\t\"$revisions\" ${restrict_revision+^$restrict_revision} \\"},
{"lineNum":"   57","line":"\t\t>\"$GIT_DIR/rebased-patches\""},
{"lineNum":"   58","line":"\tret=$?","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"\tif test 0 != $ret","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"   61","line":"\tthen"},
{"lineNum":"   62","line":"\t\trm -f \"$GIT_DIR/rebased-patches\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   63","line":"\t\tcase \"$head_name\" in","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   64","line":"\t\trefs/heads/*)"},
{"lineNum":"   65","line":"\t\t\tgit checkout -q \"$head_name\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   66","line":"\t\t\t;;"},
{"lineNum":"   67","line":"\t\t*)"},
{"lineNum":"   68","line":"\t\t\tgit checkout -q \"$orig_head\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   69","line":"\t\t\t;;"},
{"lineNum":"   70","line":"\t\tesac"},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"\t\tcat >&2 <<-EOF","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   73","line":""},
{"lineNum":"   74","line":"\t\tgit encountered an error while preparing the patches to replay"},
{"lineNum":"   75","line":"\t\tthese revisions:"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"\t\t    $revisions"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"\t\tAs a result, git cannot rebase them."},
{"lineNum":"   80","line":"\t\tEOF"},
{"lineNum":"   81","line":"\t\treturn $?"},
{"lineNum":"   82","line":"\tfi"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"\tgit am $git_am_opt --rebasing --resolvemsg=\"$resolvemsg\" \\"},
{"lineNum":"   85","line":"\t\t${gpg_sign_opt:+\"$gpg_sign_opt\"} <\"$GIT_DIR/rebased-patches\""},
{"lineNum":"   86","line":"\tret=$?"},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"\trm -f \"$GIT_DIR/rebased-patches\""},
{"lineNum":"   89","line":"fi"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"if test 0 != $ret"},
{"lineNum":"   92","line":"then"},
{"lineNum":"   93","line":"\ttest -d \"$state_dir\" && write_basic_state"},
{"lineNum":"   94","line":"\treturn $ret"},
{"lineNum":"   95","line":"fi"},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"move_to_original_branch"},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"}"},
{"lineNum":"  100","line":"# ... and then we call the whole thing."},
{"lineNum":"  101","line":"git_rebase__am"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "git-rebase", "date" : "2015-05-01 11:33:22", "instrumented" : 24, "covered" : 9,};
var merged_data = [];
