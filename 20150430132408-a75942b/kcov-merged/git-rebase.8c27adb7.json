var data = {lines:[
{"lineNum":"    1","line":"#!/bin/sh"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Copyright (c) 2005 Junio C Hamano."},
{"lineNum":"    4","line":"#"},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"SUBDIRECTORY_OK=Yes","class":"lineCov","hits":"1",},
{"lineNum":"    7","line":"OPTIONS_KEEPDASHDASH=","class":"lineCov","hits":"1",},
{"lineNum":"    8","line":"OPTIONS_STUCKLONG=t","class":"lineCov","hits":"1",},
{"lineNum":"    9","line":"OPTIONS_SPEC=\"\\","class":"lineNoCov","hits":"0",},
{"lineNum":"   10","line":"git rebase [-i] [options] [--exec <cmd>] [--onto <newbase>] [<upstream>] [<branch>]"},
{"lineNum":"   11","line":"git rebase [-i] [options] [--exec <cmd>] [--onto <newbase>] --root [<branch>]","class":"lineNoCov","hits":"0",},
{"lineNum":"   12","line":"git-rebase --continue | --abort | --skip | --edit-todo","class":"lineNoCov","hits":"0",},
{"lineNum":"   13","line":"--","class":"lineNoCov","hits":"0",},
{"lineNum":"   14","line":" Available options are","class":"lineNoCov","hits":"0",},
{"lineNum":"   15","line":"v,verbose!         display a diffstat of what changed upstream","class":"lineNoCov","hits":"0",},
{"lineNum":"   16","line":"q,quiet!           be quiet. implies --no-stat","class":"lineNoCov","hits":"0",},
{"lineNum":"   17","line":"autostash!         automatically stash/stash pop before and after","class":"lineNoCov","hits":"0",},
{"lineNum":"   18","line":"fork-point         use \'merge-base --fork-point\' to refine upstream","class":"lineNoCov","hits":"0",},
{"lineNum":"   19","line":"onto=!             rebase onto given branch instead of upstream","class":"lineNoCov","hits":"0",},
{"lineNum":"   20","line":"p,preserve-merges! try to recreate merges instead of ignoring them","class":"lineNoCov","hits":"0",},
{"lineNum":"   21","line":"s,strategy=!       use the given merge strategy","class":"lineNoCov","hits":"0",},
{"lineNum":"   22","line":"no-ff!             cherry-pick all commits, even if unchanged","class":"lineNoCov","hits":"0",},
{"lineNum":"   23","line":"m,merge!           use merging strategies to rebase","class":"lineNoCov","hits":"0",},
{"lineNum":"   24","line":"i,interactive!     let the user edit the list of commits to rebase","class":"lineNoCov","hits":"0",},
{"lineNum":"   25","line":"x,exec=!           add exec lines after each commit of the editable list","class":"lineNoCov","hits":"0",},
{"lineNum":"   26","line":"k,keep-empty\t   preserve empty commits during rebase","class":"lineNoCov","hits":"0",},
{"lineNum":"   27","line":"f,force-rebase!    force rebase even if branch is up to date","class":"lineNoCov","hits":"0",},
{"lineNum":"   28","line":"X,strategy-option=! pass the argument through to the merge strategy","class":"lineNoCov","hits":"0",},
{"lineNum":"   29","line":"stat!              display a diffstat of what changed upstream","class":"lineNoCov","hits":"0",},
{"lineNum":"   30","line":"n,no-stat!         do not show diffstat of what changed upstream","class":"lineNoCov","hits":"0",},
{"lineNum":"   31","line":"verify             allow pre-rebase hook to run","class":"lineNoCov","hits":"0",},
{"lineNum":"   32","line":"rerere-autoupdate  allow rerere to update index with resolved conflicts","class":"lineNoCov","hits":"0",},
{"lineNum":"   33","line":"root!              rebase all reachable commits up to the root(s)","class":"lineNoCov","hits":"0",},
{"lineNum":"   34","line":"autosquash         move commits that begin with squash!/fixup! under -i","class":"lineNoCov","hits":"0",},
{"lineNum":"   35","line":"committer-date-is-author-date! passed to \'git am\'","class":"lineNoCov","hits":"0",},
{"lineNum":"   36","line":"ignore-date!       passed to \'git am\'","class":"lineNoCov","hits":"0",},
{"lineNum":"   37","line":"whitespace=!       passed to \'git apply\'","class":"lineNoCov","hits":"0",},
{"lineNum":"   38","line":"ignore-whitespace! passed to \'git apply\'","class":"lineNoCov","hits":"0",},
{"lineNum":"   39","line":"C=!                passed to \'git apply\'","class":"lineNoCov","hits":"0",},
{"lineNum":"   40","line":"S,gpg-sign?        GPG-sign commits","class":"lineNoCov","hits":"0",},
{"lineNum":"   41","line":" Actions:","class":"lineNoCov","hits":"0",},
{"lineNum":"   42","line":"continue!          continue","class":"lineNoCov","hits":"0",},
{"lineNum":"   43","line":"abort!             abort and check out the original branch","class":"lineNoCov","hits":"0",},
{"lineNum":"   44","line":"skip!              skip current patch and continue","class":"lineNoCov","hits":"0",},
{"lineNum":"   45","line":"edit-todo!         edit the todo list during an interactive rebase","class":"lineNoCov","hits":"0",},
{"lineNum":"   46","line":"\"","class":"lineCov","hits":"1",},
{"lineNum":"   47","line":". git-sh-setup","class":"lineCov","hits":"1",},
{"lineNum":"   48","line":". git-sh-i18n","class":"lineCov","hits":"1",},
{"lineNum":"   49","line":"set_reflog_action rebase","class":"lineCov","hits":"1",},
{"lineNum":"   50","line":"require_work_tree_exists","class":"lineCov","hits":"1",},
{"lineNum":"   51","line":"cd_to_toplevel","class":"lineCov","hits":"1",},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"LF=\'","class":"lineNoCov","hits":"0",},
{"lineNum":"   54","line":"\'","class":"lineCov","hits":"1",},
{"lineNum":"   55","line":"ok_to_skip_pre_rebase=","class":"lineCov","hits":"1",},
{"lineNum":"   56","line":"resolvemsg=\""},
{"lineNum":"   57","line":"$(gettext \'When you have resolved this problem, run \"git rebase --continue\"."},
{"lineNum":"   58","line":"If you prefer to skip this patch, run \"git rebase --skip\" instead."},
{"lineNum":"   59","line":"To check out the original branch and stop rebasing, run \"git rebase --abort\".\')"},
{"lineNum":"   60","line":"\"","class":"lineCov","hits":"1",},
{"lineNum":"   61","line":"unset onto","class":"lineCov","hits":"1",},
{"lineNum":"   62","line":"unset restrict_revision","class":"lineCov","hits":"1",},
{"lineNum":"   63","line":"cmd=","class":"lineCov","hits":"1",},
{"lineNum":"   64","line":"strategy=","class":"lineCov","hits":"1",},
{"lineNum":"   65","line":"strategy_opts=","class":"lineCov","hits":"1",},
{"lineNum":"   66","line":"do_merge=","class":"lineCov","hits":"1",},
{"lineNum":"   67","line":"merge_dir=\"$GIT_DIR\"/rebase-merge","class":"lineCov","hits":"1",},
{"lineNum":"   68","line":"apply_dir=\"$GIT_DIR\"/rebase-apply","class":"lineCov","hits":"1",},
{"lineNum":"   69","line":"verbose=","class":"lineCov","hits":"1",},
{"lineNum":"   70","line":"diffstat=","class":"lineCov","hits":"1",},
{"lineNum":"   71","line":"test \"$(git config --bool rebase.stat)\" = true && diffstat=t","class":"lineCov","hits":"1",},
{"lineNum":"   72","line":"autostash=\"$(git config --bool rebase.autostash || echo false)\"","class":"lineCov","hits":"1",},
{"lineNum":"   73","line":"fork_point=auto","class":"lineCov","hits":"1",},
{"lineNum":"   74","line":"git_am_opt=","class":"lineCov","hits":"1",},
{"lineNum":"   75","line":"rebase_root=","class":"lineCov","hits":"1",},
{"lineNum":"   76","line":"force_rebase=","class":"lineCov","hits":"1",},
{"lineNum":"   77","line":"allow_rerere_autoupdate=","class":"lineCov","hits":"1",},
{"lineNum":"   78","line":"# Non-empty if a rebase was in progress when \'git rebase\' was invoked"},
{"lineNum":"   79","line":"in_progress=","class":"lineCov","hits":"1",},
{"lineNum":"   80","line":"# One of {am, merge, interactive}"},
{"lineNum":"   81","line":"type=","class":"lineCov","hits":"1",},
{"lineNum":"   82","line":"# One of {\"$GIT_DIR\"/rebase-apply, \"$GIT_DIR\"/rebase-merge}"},
{"lineNum":"   83","line":"state_dir=","class":"lineCov","hits":"1",},
{"lineNum":"   84","line":"# One of {\'\', continue, skip, abort}, as parsed from command line"},
{"lineNum":"   85","line":"action=","class":"lineCov","hits":"1",},
{"lineNum":"   86","line":"preserve_merges=","class":"lineCov","hits":"1",},
{"lineNum":"   87","line":"autosquash=","class":"lineCov","hits":"1",},
{"lineNum":"   88","line":"keep_empty=","class":"lineCov","hits":"1",},
{"lineNum":"   89","line":"test \"$(git config --bool rebase.autosquash)\" = \"true\" && autosquash=t","class":"lineCov","hits":"1",},
{"lineNum":"   90","line":"gpg_sign_opt=","class":"lineCov","hits":"1",},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"read_basic_state () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   93","line":"\ttest -f \"$state_dir/head-name\" &&","class":"lineCov","hits":"1",},
{"lineNum":"   94","line":"\ttest -f \"$state_dir/onto\" &&","class":"lineCov","hits":"1",},
{"lineNum":"   95","line":"\thead_name=$(cat \"$state_dir\"/head-name) &&","class":"lineCov","hits":"1",},
{"lineNum":"   96","line":"\tonto=$(cat \"$state_dir\"/onto) &&","class":"lineCov","hits":"1",},
{"lineNum":"   97","line":"\t# We always write to orig-head, but interactive rebase used to write to"},
{"lineNum":"   98","line":"\t# head. Fall back to reading from head to cover for the case that the"},
{"lineNum":"   99","line":"\t# user upgraded git with an ongoing interactive rebase."},
{"lineNum":"  100","line":"\tif test -f \"$state_dir\"/orig-head","class":"lineCov","hits":"1",},
{"lineNum":"  101","line":"\tthen"},
{"lineNum":"  102","line":"\t\torig_head=$(cat \"$state_dir\"/orig-head)","class":"lineCov","hits":"1",},
{"lineNum":"  103","line":"\telse"},
{"lineNum":"  104","line":"\t\torig_head=$(cat \"$state_dir\"/head)","class":"lineNoCov","hits":"0",},
{"lineNum":"  105","line":"\tfi &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  106","line":"\tGIT_QUIET=$(cat \"$state_dir\"/quiet) &&","class":"lineCov","hits":"1",},
{"lineNum":"  107","line":"\ttest -f \"$state_dir\"/verbose && verbose=t","class":"lineCov","hits":"1",},
{"lineNum":"  108","line":"\ttest -f \"$state_dir\"/strategy && strategy=\"$(cat \"$state_dir\"/strategy)\"","class":"lineCov","hits":"1",},
{"lineNum":"  109","line":"\ttest -f \"$state_dir\"/strategy_opts &&","class":"lineCov","hits":"1",},
{"lineNum":"  110","line":"\t\tstrategy_opts=\"$(cat \"$state_dir\"/strategy_opts)\"","class":"lineCov","hits":"1",},
{"lineNum":"  111","line":"\ttest -f \"$state_dir\"/allow_rerere_autoupdate &&","class":"lineCov","hits":"1",},
{"lineNum":"  112","line":"\t\tallow_rerere_autoupdate=\"$(cat \"$state_dir\"/allow_rerere_autoupdate)\"","class":"lineCov","hits":"1",},
{"lineNum":"  113","line":"\ttest -f \"$state_dir\"/gpg_sign_opt &&","class":"lineCov","hits":"1",},
{"lineNum":"  114","line":"\t\tgpg_sign_opt=\"$(cat \"$state_dir\"/gpg_sign_opt)\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  115","line":"}"},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"write_basic_state () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  118","line":"\techo \"$head_name\" > \"$state_dir\"/head-name &&","class":"lineCov","hits":"1",},
{"lineNum":"  119","line":"\techo \"$onto\" > \"$state_dir\"/onto &&","class":"lineCov","hits":"1",},
{"lineNum":"  120","line":"\techo \"$orig_head\" > \"$state_dir\"/orig-head &&","class":"lineCov","hits":"1",},
{"lineNum":"  121","line":"\techo \"$GIT_QUIET\" > \"$state_dir\"/quiet &&","class":"lineCov","hits":"1",},
{"lineNum":"  122","line":"\ttest t = \"$verbose\" && : > \"$state_dir\"/verbose","class":"lineCov","hits":"1",},
{"lineNum":"  123","line":"\ttest -n \"$strategy\" && echo \"$strategy\" > \"$state_dir\"/strategy","class":"lineCov","hits":"1",},
{"lineNum":"  124","line":"\ttest -n \"$strategy_opts\" && echo \"$strategy_opts\" > \\","class":"lineCov","hits":"1",},
{"lineNum":"  125","line":"\t\t\"$state_dir\"/strategy_opts"},
{"lineNum":"  126","line":"\ttest -n \"$allow_rerere_autoupdate\" && echo \"$allow_rerere_autoupdate\" > \\","class":"lineCov","hits":"1",},
{"lineNum":"  127","line":"\t\t\"$state_dir\"/allow_rerere_autoupdate"},
{"lineNum":"  128","line":"\ttest -n \"$gpg_sign_opt\" && echo \"$gpg_sign_opt\" > \"$state_dir\"/gpg_sign_opt","class":"lineCov","hits":"1",},
{"lineNum":"  129","line":"}"},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"output () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  132","line":"\tcase \"$verbose\" in","class":"lineCov","hits":"1",},
{"lineNum":"  133","line":"\t\'\')"},
{"lineNum":"  134","line":"\t\toutput=$(\"$@\" 2>&1 )","class":"lineCov","hits":"1",},
{"lineNum":"  135","line":"\t\tstatus=$?","class":"lineCov","hits":"1",},
{"lineNum":"  136","line":"\t\ttest $status != 0 && printf \"%s\\n\" \"$output\"","class":"lineCov","hits":"1",},
{"lineNum":"  137","line":"\t\treturn $status","class":"lineCov","hits":"1",},
{"lineNum":"  138","line":"\t\t;;"},
{"lineNum":"  139","line":"\t*)"},
{"lineNum":"  140","line":"\t\t\"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  141","line":"\t\t;;"},
{"lineNum":"  142","line":"\tesac"},
{"lineNum":"  143","line":"}"},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"move_to_original_branch () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  146","line":"\tcase \"$head_name\" in","class":"lineCov","hits":"1",},
{"lineNum":"  147","line":"\trefs/*)"},
{"lineNum":"  148","line":"\t\tmessage=\"rebase finished: $head_name onto $onto\"","class":"lineCov","hits":"1",},
{"lineNum":"  149","line":"\t\tgit update-ref -m \"$message\" \\","class":"lineCov","hits":"1",},
{"lineNum":"  150","line":"\t\t\t$head_name $(git rev-parse HEAD) $orig_head &&"},
{"lineNum":"  151","line":"\t\tgit symbolic-ref \\","class":"lineCov","hits":"1",},
{"lineNum":"  152","line":"\t\t\t-m \"rebase finished: returning to $head_name\" \\"},
{"lineNum":"  153","line":"\t\t\tHEAD $head_name ||"},
{"lineNum":"  154","line":"\t\tdie \"$(gettext \"Could not move back to $head_name\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  155","line":"\t\t;;"},
{"lineNum":"  156","line":"\tesac"},
{"lineNum":"  157","line":"}"},
{"lineNum":"  158","line":""},
{"lineNum":"  159","line":"apply_autostash () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  160","line":"\tif test -f \"$state_dir/autostash\"","class":"lineCov","hits":"1",},
{"lineNum":"  161","line":"\tthen"},
{"lineNum":"  162","line":"\t\tstash_sha1=$(cat \"$state_dir/autostash\")","class":"lineCov","hits":"1",},
{"lineNum":"  163","line":"\t\tif git stash apply $stash_sha1 2>&1 >/dev/null","class":"lineCov","hits":"1",},
{"lineNum":"  164","line":"\t\tthen"},
{"lineNum":"  165","line":"\t\t\techo \"$(gettext \'Applied autostash.\')\"","class":"lineCov","hits":"1",},
{"lineNum":"  166","line":"\t\telse"},
{"lineNum":"  167","line":"\t\t\tgit stash store -m \"autostash\" -q $stash_sha1 ||","class":"lineCov","hits":"1",},
{"lineNum":"  168","line":"\t\t\tdie \"$(eval_gettext \"Cannot store \\$stash_sha1\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  169","line":"\t\t\tgettext \'Applying autostash resulted in conflicts.","class":"lineNoCov","hits":"0",},
{"lineNum":"  170","line":"Your changes are safe in the stash.","class":"lineNoCov","hits":"0",},
{"lineNum":"  171","line":"You can run \"git stash pop\" or \"git stash drop\" at any time.","class":"lineNoCov","hits":"0",},
{"lineNum":"  172","line":"\'","class":"lineCov","hits":"1",},
{"lineNum":"  173","line":"\t\tfi"},
{"lineNum":"  174","line":"\tfi"},
{"lineNum":"  175","line":"}"},
{"lineNum":"  176","line":""},
{"lineNum":"  177","line":"finish_rebase () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  178","line":"\tapply_autostash &&","class":"lineCov","hits":"1",},
{"lineNum":"  179","line":"\tgit gc --auto &&","class":"lineCov","hits":"1",},
{"lineNum":"  180","line":"\trm -rf \"$state_dir\"","class":"lineCov","hits":"1",},
{"lineNum":"  181","line":"}"},
{"lineNum":"  182","line":""},
{"lineNum":"  183","line":"run_specific_rebase () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  184","line":"\tif [ \"$interactive_rebase\" = implied ]; then","class":"lineCov","hits":"1",},
{"lineNum":"  185","line":"\t\tGIT_EDITOR=:","class":"lineNoCov","hits":"0",},
{"lineNum":"  186","line":"\t\texport GIT_EDITOR","class":"lineNoCov","hits":"0",},
{"lineNum":"  187","line":"\t\tautosquash=","class":"lineNoCov","hits":"0",},
{"lineNum":"  188","line":"\tfi"},
{"lineNum":"  189","line":"\t. git-rebase--$type","class":"lineCov","hits":"1",},
{"lineNum":"  190","line":"\tret=$?","class":"lineCov","hits":"1",},
{"lineNum":"  191","line":"\tif test $ret -eq 0","class":"lineCov","hits":"1",},
{"lineNum":"  192","line":"\tthen"},
{"lineNum":"  193","line":"\t\tfinish_rebase","class":"lineCov","hits":"1",},
{"lineNum":"  194","line":"\telif test $ret -eq 2 # special exit status for rebase -i","class":"lineCov","hits":"1",},
{"lineNum":"  195","line":"\tthen"},
{"lineNum":"  196","line":"\t\tapply_autostash &&","class":"lineCov","hits":"1",},
{"lineNum":"  197","line":"\t\trm -rf \"$state_dir\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  198","line":"\t\tdie \"Nothing to do\"","class":"lineCov","hits":"1",},
{"lineNum":"  199","line":"\tfi"},
{"lineNum":"  200","line":"\texit $ret","class":"lineCov","hits":"1",},
{"lineNum":"  201","line":"}"},
{"lineNum":"  202","line":""},
{"lineNum":"  203","line":"run_pre_rebase_hook () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  204","line":"\tif test -z \"$ok_to_skip_pre_rebase\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  205","line":"\t   test -x \"$GIT_DIR/hooks/pre-rebase\"","class":"lineCov","hits":"1",},
{"lineNum":"  206","line":"\tthen"},
{"lineNum":"  207","line":"\t\t\"$GIT_DIR/hooks/pre-rebase\" ${1+\"$@\"} ||","class":"lineCov","hits":"1",},
{"lineNum":"  208","line":"\t\tdie \"$(gettext \"The pre-rebase hook refused to rebase.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  209","line":"\tfi"},
{"lineNum":"  210","line":"}"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"test -f \"$apply_dir\"/applying &&","class":"lineCov","hits":"1",},
{"lineNum":"  213","line":"\tdie \"$(gettext \"It looks like git-am is in progress. Cannot rebase.\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"if test -d \"$apply_dir\"","class":"lineCov","hits":"1",},
{"lineNum":"  216","line":"then"},
{"lineNum":"  217","line":"\ttype=am","class":"lineCov","hits":"1",},
{"lineNum":"  218","line":"\tstate_dir=\"$apply_dir\"","class":"lineCov","hits":"1",},
{"lineNum":"  219","line":"elif test -d \"$merge_dir\"","class":"lineCov","hits":"1",},
{"lineNum":"  220","line":"then"},
{"lineNum":"  221","line":"\tif test -f \"$merge_dir\"/interactive","class":"lineCov","hits":"1",},
{"lineNum":"  222","line":"\tthen"},
{"lineNum":"  223","line":"\t\ttype=interactive","class":"lineCov","hits":"1",},
{"lineNum":"  224","line":"\t\tinteractive_rebase=explicit","class":"lineCov","hits":"1",},
{"lineNum":"  225","line":"\telse"},
{"lineNum":"  226","line":"\t\ttype=merge","class":"lineCov","hits":"1",},
{"lineNum":"  227","line":"\tfi"},
{"lineNum":"  228","line":"\tstate_dir=\"$merge_dir\"","class":"lineCov","hits":"1",},
{"lineNum":"  229","line":"fi"},
{"lineNum":"  230","line":"test -n \"$type\" && in_progress=t","class":"lineCov","hits":"1",},
{"lineNum":"  231","line":""},
{"lineNum":"  232","line":"total_argc=$#","class":"lineCov","hits":"1",},
{"lineNum":"  233","line":"while test $# != 0","class":"lineCov","hits":"1",},
{"lineNum":"  234","line":"do"},
{"lineNum":"  235","line":"\tcase \"$1\" in","class":"lineCov","hits":"1",},
{"lineNum":"  236","line":"\t--no-verify)"},
{"lineNum":"  237","line":"\t\tok_to_skip_pre_rebase=yes","class":"lineCov","hits":"1",},
{"lineNum":"  238","line":"\t\t;;"},
{"lineNum":"  239","line":"\t--verify)"},
{"lineNum":"  240","line":"\t\tok_to_skip_pre_rebase=","class":"lineNoCov","hits":"0",},
{"lineNum":"  241","line":"\t\t;;"},
{"lineNum":"  242","line":"\t--continue|--skip|--abort|--edit-todo)"},
{"lineNum":"  243","line":"\t\ttest $total_argc -eq 2 || usage","class":"lineCov","hits":"1",},
{"lineNum":"  244","line":"\t\taction=${1##--}","class":"lineCov","hits":"1",},
{"lineNum":"  245","line":"\t\t;;"},
{"lineNum":"  246","line":"\t--onto=*)"},
{"lineNum":"  247","line":"\t\tonto=\"${1#--onto=}\"","class":"lineCov","hits":"1",},
{"lineNum":"  248","line":"\t\t;;"},
{"lineNum":"  249","line":"\t--exec=*)"},
{"lineNum":"  250","line":"\t\tcmd=\"${cmd}exec ${1#--exec=}${LF}\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  251","line":"\t\t;;"},
{"lineNum":"  252","line":"\t--interactive)"},
{"lineNum":"  253","line":"\t\tinteractive_rebase=explicit","class":"lineCov","hits":"1",},
{"lineNum":"  254","line":"\t\t;;"},
{"lineNum":"  255","line":"\t--keep-empty)"},
{"lineNum":"  256","line":"\t\tkeep_empty=yes","class":"lineNoCov","hits":"0",},
{"lineNum":"  257","line":"\t\t;;"},
{"lineNum":"  258","line":"\t--preserve-merges)"},
{"lineNum":"  259","line":"\t\tpreserve_merges=t","class":"lineNoCov","hits":"0",},
{"lineNum":"  260","line":"\t\ttest -z \"$interactive_rebase\" && interactive_rebase=implied","class":"lineNoCov","hits":"0",},
{"lineNum":"  261","line":"\t\t;;"},
{"lineNum":"  262","line":"\t--autosquash)"},
{"lineNum":"  263","line":"\t\tautosquash=t","class":"lineCov","hits":"1",},
{"lineNum":"  264","line":"\t\t;;"},
{"lineNum":"  265","line":"\t--no-autosquash)"},
{"lineNum":"  266","line":"\t\tautosquash=","class":"lineNoCov","hits":"0",},
{"lineNum":"  267","line":"\t\t;;"},
{"lineNum":"  268","line":"\t--fork-point)"},
{"lineNum":"  269","line":"\t\tfork_point=t","class":"lineNoCov","hits":"0",},
{"lineNum":"  270","line":"\t\t;;"},
{"lineNum":"  271","line":"\t--no-fork-point)"},
{"lineNum":"  272","line":"\t\tfork_point=","class":"lineNoCov","hits":"0",},
{"lineNum":"  273","line":"\t\t;;"},
{"lineNum":"  274","line":"\t--merge)"},
{"lineNum":"  275","line":"\t\tdo_merge=t","class":"lineCov","hits":"1",},
{"lineNum":"  276","line":"\t\t;;"},
{"lineNum":"  277","line":"\t--strategy-option=*)"},
{"lineNum":"  278","line":"\t\tstrategy_opts=\"$strategy_opts $(git rev-parse --sq-quote \"--${1#--strategy-option=}\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  279","line":"\t\tdo_merge=t","class":"lineCov","hits":"1",},
{"lineNum":"  280","line":"\t\ttest -z \"$strategy\" && strategy=recursive","class":"lineCov","hits":"1",},
{"lineNum":"  281","line":"\t\t;;"},
{"lineNum":"  282","line":"\t--strategy=*)"},
{"lineNum":"  283","line":"\t\tstrategy=\"${1#--strategy=}\"","class":"lineCov","hits":"1",},
{"lineNum":"  284","line":"\t\tdo_merge=t","class":"lineCov","hits":"1",},
{"lineNum":"  285","line":"\t\t;;"},
{"lineNum":"  286","line":"\t--no-stat)"},
{"lineNum":"  287","line":"\t\tdiffstat=","class":"lineCov","hits":"1",},
{"lineNum":"  288","line":"\t\t;;"},
{"lineNum":"  289","line":"\t--stat)"},
{"lineNum":"  290","line":"\t\tdiffstat=t","class":"lineCov","hits":"1",},
{"lineNum":"  291","line":"\t\t;;"},
{"lineNum":"  292","line":"\t--autostash)"},
{"lineNum":"  293","line":"\t\tautostash=true","class":"lineCov","hits":"1",},
{"lineNum":"  294","line":"\t\t;;"},
{"lineNum":"  295","line":"\t--verbose)"},
{"lineNum":"  296","line":"\t\tverbose=t","class":"lineCov","hits":"1",},
{"lineNum":"  297","line":"\t\tdiffstat=t","class":"lineCov","hits":"1",},
{"lineNum":"  298","line":"\t\tGIT_QUIET=","class":"lineCov","hits":"1",},
{"lineNum":"  299","line":"\t\t;;"},
{"lineNum":"  300","line":"\t--quiet)"},
{"lineNum":"  301","line":"\t\tGIT_QUIET=t","class":"lineCov","hits":"1",},
{"lineNum":"  302","line":"\t\tgit_am_opt=\"$git_am_opt -q\"","class":"lineCov","hits":"1",},
{"lineNum":"  303","line":"\t\tverbose=","class":"lineCov","hits":"1",},
{"lineNum":"  304","line":"\t\tdiffstat=","class":"lineCov","hits":"1",},
{"lineNum":"  305","line":"\t\t;;"},
{"lineNum":"  306","line":"\t--whitespace=*)"},
{"lineNum":"  307","line":"\t\tgit_am_opt=\"$git_am_opt --whitespace=${1#--whitespace=}\"","class":"lineCov","hits":"1",},
{"lineNum":"  308","line":"\t\tcase \"${1#--whitespace=}\" in","class":"lineCov","hits":"1",},
{"lineNum":"  309","line":"\t\tfix|strip)"},
{"lineNum":"  310","line":"\t\t\tforce_rebase=t","class":"lineCov","hits":"1",},
{"lineNum":"  311","line":"\t\t\t;;"},
{"lineNum":"  312","line":"\t\tesac"},
{"lineNum":"  313","line":"\t\t;;"},
{"lineNum":"  314","line":"\t--ignore-whitespace)"},
{"lineNum":"  315","line":"\t\tgit_am_opt=\"$git_am_opt $1\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  316","line":"\t\t;;"},
{"lineNum":"  317","line":"\t--committer-date-is-author-date|--ignore-date)"},
{"lineNum":"  318","line":"\t\tgit_am_opt=\"$git_am_opt $1\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  319","line":"\t\tforce_rebase=t","class":"lineNoCov","hits":"0",},
{"lineNum":"  320","line":"\t\t;;"},
{"lineNum":"  321","line":"\t-C*)"},
{"lineNum":"  322","line":"\t\tgit_am_opt=\"$git_am_opt $1\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  323","line":"\t\t;;"},
{"lineNum":"  324","line":"\t--root)"},
{"lineNum":"  325","line":"\t\trebase_root=t","class":"lineNoCov","hits":"0",},
{"lineNum":"  326","line":"\t\t;;"},
{"lineNum":"  327","line":"\t--force-rebase|--no-ff)"},
{"lineNum":"  328","line":"\t\tforce_rebase=t","class":"lineCov","hits":"1",},
{"lineNum":"  329","line":"\t\t;;"},
{"lineNum":"  330","line":"\t--rerere-autoupdate|--no-rerere-autoupdate)"},
{"lineNum":"  331","line":"\t\tallow_rerere_autoupdate=\"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"  332","line":"\t\t;;"},
{"lineNum":"  333","line":"\t--gpg-sign)"},
{"lineNum":"  334","line":"\t\tgpg_sign_opt=-S","class":"lineNoCov","hits":"0",},
{"lineNum":"  335","line":"\t\t;;"},
{"lineNum":"  336","line":"\t--gpg-sign=*)"},
{"lineNum":"  337","line":"\t\tgpg_sign_opt=\"-S${1#--gpg-sign=}\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  338","line":"\t\t;;"},
{"lineNum":"  339","line":"\t--)"},
{"lineNum":"  340","line":"\t\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  341","line":"\t\tbreak","class":"lineCov","hits":"1",},
{"lineNum":"  342","line":"\t\t;;"},
{"lineNum":"  343","line":"\tesac"},
{"lineNum":"  344","line":"\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  345","line":"done"},
{"lineNum":"  346","line":"test $# -gt 2 && usage","class":"lineCov","hits":"1",},
{"lineNum":"  347","line":""},
{"lineNum":"  348","line":"if test -n \"$cmd\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  349","line":"   test \"$interactive_rebase\" != explicit","class":"lineNoCov","hits":"0",},
{"lineNum":"  350","line":"then"},
{"lineNum":"  351","line":"\tdie \"$(gettext \"The --exec option must be used with the --interactive option\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  352","line":"fi"},
{"lineNum":"  353","line":""},
{"lineNum":"  354","line":"if test -n \"$action\"","class":"lineCov","hits":"1",},
{"lineNum":"  355","line":"then"},
{"lineNum":"  356","line":"\ttest -z \"$in_progress\" && die \"$(gettext \"No rebase in progress?\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  357","line":"\t# Only interactive rebase uses detailed reflog messages"},
{"lineNum":"  358","line":"\tif test \"$type\" = interactive && test \"$GIT_REFLOG_ACTION\" = rebase","class":"lineCov","hits":"1",},
{"lineNum":"  359","line":"\tthen"},
{"lineNum":"  360","line":"\t\tGIT_REFLOG_ACTION=\"rebase -i ($action)\"","class":"lineCov","hits":"1",},
{"lineNum":"  361","line":"\t\texport GIT_REFLOG_ACTION","class":"lineCov","hits":"1",},
{"lineNum":"  362","line":"\tfi"},
{"lineNum":"  363","line":"fi"},
{"lineNum":"  364","line":""},
{"lineNum":"  365","line":"if test \"$action\" = \"edit-todo\" && test \"$type\" != \"interactive\"","class":"lineCov","hits":"1",},
{"lineNum":"  366","line":"then"},
{"lineNum":"  367","line":"\tdie \"$(gettext \"The --edit-todo action can only be used during interactive rebase.\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  368","line":"fi"},
{"lineNum":"  369","line":""},
{"lineNum":"  370","line":"case \"$action\" in","class":"lineCov","hits":"1",},
{"lineNum":"  371","line":"continue)"},
{"lineNum":"  372","line":"\t# Sanity check"},
{"lineNum":"  373","line":"\tgit rev-parse --verify HEAD >/dev/null ||","class":"lineCov","hits":"1",},
{"lineNum":"  374","line":"\t\tdie \"$(gettext \"Cannot read HEAD\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  375","line":"\tgit update-index --ignore-submodules --refresh &&","class":"lineCov","hits":"1",},
{"lineNum":"  376","line":"\tgit diff-files --quiet --ignore-submodules || {","class":"lineCov","hits":"1",},
{"lineNum":"  377","line":"\t\techo \"$(gettext \"You must edit all merge conflicts and then","class":"lineNoCov","hits":"0",},
{"lineNum":"  378","line":"mark them as resolved using git add\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  379","line":"\t\texit 1","class":"lineNoCov","hits":"0",},
{"lineNum":"  380","line":"\t}"},
{"lineNum":"  381","line":"\tread_basic_state","class":"lineCov","hits":"1",},
{"lineNum":"  382","line":"\trun_specific_rebase","class":"lineCov","hits":"1",},
{"lineNum":"  383","line":"\t;;"},
{"lineNum":"  384","line":"skip)"},
{"lineNum":"  385","line":"\toutput git reset --hard HEAD || exit $?","class":"lineCov","hits":"1",},
{"lineNum":"  386","line":"\tread_basic_state","class":"lineCov","hits":"1",},
{"lineNum":"  387","line":"\trun_specific_rebase","class":"lineCov","hits":"1",},
{"lineNum":"  388","line":"\t;;"},
{"lineNum":"  389","line":"abort)"},
{"lineNum":"  390","line":"\tgit rerere clear","class":"lineCov","hits":"1",},
{"lineNum":"  391","line":"\tread_basic_state","class":"lineCov","hits":"1",},
{"lineNum":"  392","line":"\tcase \"$head_name\" in","class":"lineCov","hits":"1",},
{"lineNum":"  393","line":"\trefs/*)"},
{"lineNum":"  394","line":"\t\tgit symbolic-ref -m \"rebase: aborting\" HEAD $head_name ||","class":"lineCov","hits":"1",},
{"lineNum":"  395","line":"\t\tdie \"$(eval_gettext \"Could not move back to \\$head_name\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  396","line":"\t\t;;"},
{"lineNum":"  397","line":"\tesac"},
{"lineNum":"  398","line":"\toutput git reset --hard $orig_head","class":"lineCov","hits":"1",},
{"lineNum":"  399","line":"\tfinish_rebase","class":"lineCov","hits":"1",},
{"lineNum":"  400","line":"\texit","class":"lineCov","hits":"1",},
{"lineNum":"  401","line":"\t;;"},
{"lineNum":"  402","line":"edit-todo)"},
{"lineNum":"  403","line":"\trun_specific_rebase","class":"lineNoCov","hits":"0",},
{"lineNum":"  404","line":"\t;;"},
{"lineNum":"  405","line":"esac"},
{"lineNum":"  406","line":""},
{"lineNum":"  407","line":"# Make sure no rebase is in progress"},
{"lineNum":"  408","line":"if test -n \"$in_progress\"","class":"lineCov","hits":"1",},
{"lineNum":"  409","line":"then"},
{"lineNum":"  410","line":"\tstate_dir_base=${state_dir##*/}","class":"lineNoCov","hits":"0",},
{"lineNum":"  411","line":"\tcmd_live_rebase=\"git rebase (--continue | --abort | --skip)\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  412","line":"\tcmd_clear_stale_rebase=\"rm -fr \\\"$state_dir\\\"\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  413","line":"\tdie \"","class":"lineNoCov","hits":"0",},
{"lineNum":"  414","line":"$(eval_gettext \'It seems that there is already a $state_dir_base directory, and","class":"lineNoCov","hits":"0",},
{"lineNum":"  415","line":"I wonder if you are in the middle of another rebase.  If that is the","class":"lineNoCov","hits":"0",},
{"lineNum":"  416","line":"case, please try","class":"lineNoCov","hits":"0",},
{"lineNum":"  417","line":"\t$cmd_live_rebase","class":"lineNoCov","hits":"0",},
{"lineNum":"  418","line":"If that is not the case, please","class":"lineNoCov","hits":"0",},
{"lineNum":"  419","line":"\t$cmd_clear_stale_rebase","class":"lineNoCov","hits":"0",},
{"lineNum":"  420","line":"and run me again.  I am stopping in case you still have something","class":"lineNoCov","hits":"0",},
{"lineNum":"  421","line":"valuable there.\')\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  422","line":"fi"},
{"lineNum":"  423","line":""},
{"lineNum":"  424","line":"if test -n \"$rebase_root\" && test -z \"$onto\"","class":"lineCov","hits":"1",},
{"lineNum":"  425","line":"then"},
{"lineNum":"  426","line":"\ttest -z \"$interactive_rebase\" && interactive_rebase=implied","class":"lineNoCov","hits":"0",},
{"lineNum":"  427","line":"fi"},
{"lineNum":"  428","line":""},
{"lineNum":"  429","line":"if test -n \"$interactive_rebase\"","class":"lineCov","hits":"1",},
{"lineNum":"  430","line":"then"},
{"lineNum":"  431","line":"\ttype=interactive","class":"lineCov","hits":"1",},
{"lineNum":"  432","line":"\tstate_dir=\"$merge_dir\"","class":"lineCov","hits":"1",},
{"lineNum":"  433","line":"elif test -n \"$do_merge\"","class":"lineCov","hits":"1",},
{"lineNum":"  434","line":"then"},
{"lineNum":"  435","line":"\ttype=merge","class":"lineCov","hits":"1",},
{"lineNum":"  436","line":"\tstate_dir=\"$merge_dir\"","class":"lineCov","hits":"1",},
{"lineNum":"  437","line":"else"},
{"lineNum":"  438","line":"\ttype=am","class":"lineCov","hits":"1",},
{"lineNum":"  439","line":"\tstate_dir=\"$apply_dir\"","class":"lineCov","hits":"1",},
{"lineNum":"  440","line":"fi"},
{"lineNum":"  441","line":""},
{"lineNum":"  442","line":"if test -z \"$rebase_root\"","class":"lineCov","hits":"1",},
{"lineNum":"  443","line":"then"},
{"lineNum":"  444","line":"\tcase \"$#\" in","class":"lineCov","hits":"1",},
{"lineNum":"  445","line":"\t0)"},
{"lineNum":"  446","line":"\t\tif ! upstream_name=$(git rev-parse --symbolic-full-name \\","class":"lineNoCov","hits":"0",},
{"lineNum":"  447","line":"\t\t\t--verify -q @{upstream} 2>/dev/null)"},
{"lineNum":"  448","line":"\t\tthen"},
{"lineNum":"  449","line":"\t\t\t. git-parse-remote","class":"lineCov","hits":"1",},
{"lineNum":"  450","line":"\t\t\terror_on_missing_default_upstream \"rebase\" \"rebase\" \\","class":"lineCov","hits":"1",},
{"lineNum":"  451","line":"\t\t\t\t\"against\" \"git rebase <branch>\""},
{"lineNum":"  452","line":"\t\tfi"},
{"lineNum":"  453","line":""},
{"lineNum":"  454","line":"\t\ttest \"$fork_point\" = auto && fork_point=t","class":"lineCov","hits":"1",},
{"lineNum":"  455","line":"\t\t;;"},
{"lineNum":"  456","line":"\t*)\tupstream_name=\"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"  457","line":"\t\tif test \"$upstream_name\" = \"-\"","class":"lineCov","hits":"1",},
{"lineNum":"  458","line":"\t\tthen"},
{"lineNum":"  459","line":"\t\t\tupstream_name=\"@{-1}\"","class":"lineCov","hits":"1",},
{"lineNum":"  460","line":"\t\tfi"},
{"lineNum":"  461","line":"\t\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  462","line":"\t\t;;"},
{"lineNum":"  463","line":"\tesac"},
{"lineNum":"  464","line":"\tupstream=$(peel_committish \"${upstream_name}\") ||","class":"lineCov","hits":"1",},
{"lineNum":"  465","line":"\tdie \"$(eval_gettext \"invalid upstream \\$upstream_name\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  466","line":"\tupstream_arg=\"$upstream_name\"","class":"lineCov","hits":"1",},
{"lineNum":"  467","line":"else"},
{"lineNum":"  468","line":"\tif test -z \"$onto\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  469","line":"\tthen"},
{"lineNum":"  470","line":"\t\tempty_tree=$(git hash-object -t tree /dev/null)","class":"lineNoCov","hits":"0",},
{"lineNum":"  471","line":"\t\tonto=$(git commit-tree $empty_tree </dev/null)","class":"lineNoCov","hits":"0",},
{"lineNum":"  472","line":"\t\tsquash_onto=\"$onto\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  473","line":"\tfi"},
{"lineNum":"  474","line":"\tunset upstream_name","class":"lineNoCov","hits":"0",},
{"lineNum":"  475","line":"\tunset upstream","class":"lineNoCov","hits":"0",},
{"lineNum":"  476","line":"\ttest $# -gt 1 && usage","class":"lineNoCov","hits":"0",},
{"lineNum":"  477","line":"\tupstream_arg=--root","class":"lineNoCov","hits":"0",},
{"lineNum":"  478","line":"fi"},
{"lineNum":"  479","line":""},
{"lineNum":"  480","line":"# Make sure the branch to rebase onto is valid."},
{"lineNum":"  481","line":"onto_name=${onto-\"$upstream_name\"}","class":"lineCov","hits":"1",},
{"lineNum":"  482","line":"case \"$onto_name\" in","class":"lineCov","hits":"1",},
{"lineNum":"  483","line":"*...*)"},
{"lineNum":"  484","line":"\tif\tleft=${onto_name%...*} right=${onto_name#*...} &&","class":"lineCov","hits":"1",},
{"lineNum":"  485","line":"\t\tonto=$(git merge-base --all ${left:-HEAD} ${right:-HEAD})","class":"lineCov","hits":"1",},
{"lineNum":"  486","line":"\tthen"},
{"lineNum":"  487","line":"\t\tcase \"$onto\" in","class":"lineCov","hits":"1",},
{"lineNum":"  488","line":"\t\t?*\"$LF\"?*)"},
{"lineNum":"  489","line":"\t\t\tdie \"$(eval_gettext \"\\$onto_name: there are more than one merge bases\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  490","line":"\t\t\t;;"},
{"lineNum":"  491","line":"\t\t\'\')"},
{"lineNum":"  492","line":"\t\t\tdie \"$(eval_gettext \"\\$onto_name: there is no merge base\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  493","line":"\t\t\t;;"},
{"lineNum":"  494","line":"\t\tesac"},
{"lineNum":"  495","line":"\telse"},
{"lineNum":"  496","line":"\t\tdie \"$(eval_gettext \"\\$onto_name: there is no merge base\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  497","line":"\tfi"},
{"lineNum":"  498","line":"\t;;"},
{"lineNum":"  499","line":"*)"},
{"lineNum":"  500","line":"\tonto=$(peel_committish \"$onto_name\") ||","class":"lineCov","hits":"1",},
{"lineNum":"  501","line":"\tdie \"$(eval_gettext \"Does not point to a valid commit: \\$onto_name\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  502","line":"\t;;"},
{"lineNum":"  503","line":"esac"},
{"lineNum":"  504","line":""},
{"lineNum":"  505","line":"# If the branch to rebase is given, that is the branch we will rebase"},
{"lineNum":"  506","line":"# $branch_name -- branch being rebased, or HEAD (already detached)"},
{"lineNum":"  507","line":"# $orig_head -- commit object name of tip of the branch before rebasing"},
{"lineNum":"  508","line":"# $head_name -- refs/heads/<that-branch> or \"detached HEAD\""},
{"lineNum":"  509","line":"switch_to=","class":"lineCov","hits":"1",},
{"lineNum":"  510","line":"case \"$#\" in","class":"lineCov","hits":"1",},
{"lineNum":"  511","line":"1)"},
{"lineNum":"  512","line":"\t# Is it \"rebase other $branchname\" or \"rebase other $commit\"?"},
{"lineNum":"  513","line":"\tbranch_name=\"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"  514","line":"\tswitch_to=\"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"  515","line":""},
{"lineNum":"  516","line":"\tif git show-ref --verify --quiet -- \"refs/heads/$1\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  517","line":"\t   orig_head=$(git rev-parse -q --verify \"refs/heads/$1\")","class":"lineCov","hits":"1",},
{"lineNum":"  518","line":"\tthen"},
{"lineNum":"  519","line":"\t\thead_name=\"refs/heads/$1\"","class":"lineCov","hits":"1",},
{"lineNum":"  520","line":"\telif orig_head=$(git rev-parse -q --verify \"$1\")","class":"lineCov","hits":"1",},
{"lineNum":"  521","line":"\tthen"},
{"lineNum":"  522","line":"\t\thead_name=\"detached HEAD\"","class":"lineCov","hits":"1",},
{"lineNum":"  523","line":"\telse"},
{"lineNum":"  524","line":"\t\tdie \"$(eval_gettext \"fatal: no such branch: \\$branch_name\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  525","line":"\tfi"},
{"lineNum":"  526","line":"\t;;"},
{"lineNum":"  527","line":"0)"},
{"lineNum":"  528","line":"\t# Do not need to switch branches, we are already on it."},
{"lineNum":"  529","line":"\tif branch_name=$(git symbolic-ref -q HEAD)","class":"lineCov","hits":"1",},
{"lineNum":"  530","line":"\tthen"},
{"lineNum":"  531","line":"\t\thead_name=$branch_name","class":"lineCov","hits":"1",},
{"lineNum":"  532","line":"\t\tbranch_name=$(expr \"z$branch_name\" : \'zrefs/heads/\\(.*\\)\')","class":"lineCov","hits":"1",},
{"lineNum":"  533","line":"\telse"},
{"lineNum":"  534","line":"\t\thead_name=\"detached HEAD\"","class":"lineCov","hits":"1",},
{"lineNum":"  535","line":"\t\tbranch_name=HEAD ;# detached","class":"lineCov","hits":"1",},
{"lineNum":"  536","line":"\tfi"},
{"lineNum":"  537","line":"\torig_head=$(git rev-parse --verify HEAD) || exit","class":"lineCov","hits":"1",},
{"lineNum":"  538","line":"\t;;"},
{"lineNum":"  539","line":"*)"},
{"lineNum":"  540","line":"\tdie \"BUG: unexpected number of arguments left to parse\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  541","line":"\t;;"},
{"lineNum":"  542","line":"esac"},
{"lineNum":"  543","line":""},
{"lineNum":"  544","line":"if test \"$fork_point\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  545","line":"then"},
{"lineNum":"  546","line":"\tnew_upstream=$(git merge-base --fork-point \"$upstream_name\" \\","class":"lineNoCov","hits":"0",},
{"lineNum":"  547","line":"\t\t\t\"${switch_to:-HEAD}\")"},
{"lineNum":"  548","line":"\tif test -n \"$new_upstream\"","class":"lineCov","hits":"1",},
{"lineNum":"  549","line":"\tthen"},
{"lineNum":"  550","line":"\t\trestrict_revision=$new_upstream","class":"lineCov","hits":"1",},
{"lineNum":"  551","line":"\tfi"},
{"lineNum":"  552","line":"fi"},
{"lineNum":"  553","line":""},
{"lineNum":"  554","line":"if test \"$autostash\" = true && ! (require_clean_work_tree) 2>/dev/null","class":"lineCov","hits":"1",},
{"lineNum":"  555","line":"then"},
{"lineNum":"  556","line":"\tstash_sha1=$(git stash create \"autostash\") ||","class":"lineCov","hits":"1",},
{"lineNum":"  557","line":"\tdie \"$(gettext \'Cannot autostash\')\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  558","line":""},
{"lineNum":"  559","line":"\tmkdir -p \"$state_dir\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  560","line":"\techo $stash_sha1 >\"$state_dir/autostash\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  561","line":"\tstash_abbrev=$(git rev-parse --short $stash_sha1) &&","class":"lineCov","hits":"1",},
{"lineNum":"  562","line":"\techo \"$(eval_gettext \'Created autostash: $stash_abbrev\')\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  563","line":"\tgit reset --hard","class":"lineCov","hits":"1",},
{"lineNum":"  564","line":"fi"},
{"lineNum":"  565","line":""},
{"lineNum":"  566","line":"require_clean_work_tree \"rebase\" \"$(gettext \"Please commit or stash them.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  567","line":""},
{"lineNum":"  568","line":"# Now we are rebasing commits $upstream..$orig_head (or with --root,"},
{"lineNum":"  569","line":"# everything leading up to $orig_head) on top of $onto"},
{"lineNum":"  570","line":""},
{"lineNum":"  571","line":"# Check if we are already based on $onto with linear history,"},
{"lineNum":"  572","line":"# but this should be done only when upstream and onto are the same"},
{"lineNum":"  573","line":"# and if this is not an interactive rebase."},
{"lineNum":"  574","line":"mb=$(git merge-base \"$onto\" \"$orig_head\")","class":"lineCov","hits":"1",},
{"lineNum":"  575","line":"if test \"$type\" != interactive && test \"$upstream\" = \"$onto\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  576","line":"\ttest \"$mb\" = \"$onto\" && test -z \"$restrict_revision\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  577","line":"\t# linear history?"},
{"lineNum":"  578","line":"\t! (git rev-list --parents \"$onto\"..\"$orig_head\" | sane_grep \" .* \") > /dev/null","class":"lineCov","hits":"1",},
{"lineNum":"  579","line":"then"},
{"lineNum":"  580","line":"\tif test -z \"$force_rebase\"","class":"lineCov","hits":"1",},
{"lineNum":"  581","line":"\tthen"},
{"lineNum":"  582","line":"\t\t# Lazily switch to the target branch if needed..."},
{"lineNum":"  583","line":"\t\ttest -z \"$switch_to\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  584","line":"\t\tGIT_REFLOG_ACTION=\"$GIT_REFLOG_ACTION: checkout $switch_to\" \\","class":"lineCov","hits":"1",},
{"lineNum":"  585","line":"\t\t\tgit checkout \"$switch_to\" --"},
{"lineNum":"  586","line":"\t\tsay \"$(eval_gettext \"Current branch \\$branch_name is up to date.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  587","line":"\t\tfinish_rebase","class":"lineCov","hits":"1",},
{"lineNum":"  588","line":"\t\texit 0","class":"lineCov","hits":"1",},
{"lineNum":"  589","line":"\telse"},
{"lineNum":"  590","line":"\t\tsay \"$(eval_gettext \"Current branch \\$branch_name is up to date, rebase forced.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  591","line":"\tfi"},
{"lineNum":"  592","line":"fi"},
{"lineNum":"  593","line":""},
{"lineNum":"  594","line":"# If a hook exists, give it a chance to interrupt"},
{"lineNum":"  595","line":"run_pre_rebase_hook \"$upstream_arg\" \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  596","line":""},
{"lineNum":"  597","line":"if test -n \"$diffstat\"","class":"lineCov","hits":"1",},
{"lineNum":"  598","line":"then"},
{"lineNum":"  599","line":"\tif test -n \"$verbose\"","class":"lineCov","hits":"1",},
{"lineNum":"  600","line":"\tthen"},
{"lineNum":"  601","line":"\t\techo \"$(eval_gettext \"Changes from \\$mb to \\$onto:\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  602","line":"\tfi"},
{"lineNum":"  603","line":"\t# We want color (if set), but no pager"},
{"lineNum":"  604","line":"\tGIT_PAGER=\'\' git diff --stat --summary \"$mb\" \"$onto\"","class":"lineCov","hits":"1",},
{"lineNum":"  605","line":"fi"},
{"lineNum":"  606","line":""},
{"lineNum":"  607","line":"test \"$type\" = interactive && run_specific_rebase","class":"lineCov","hits":"1",},
{"lineNum":"  608","line":""},
{"lineNum":"  609","line":"# Detach HEAD and reset the tree"},
{"lineNum":"  610","line":"say \"$(gettext \"First, rewinding head to replay your work on top of it...\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  611","line":""},
{"lineNum":"  612","line":"GIT_REFLOG_ACTION=\"$GIT_REFLOG_ACTION: checkout $onto_name\" \\","class":"lineCov","hits":"1",},
{"lineNum":"  613","line":"\tgit checkout -q \"$onto^0\" || die \"could not detach HEAD\""},
{"lineNum":"  614","line":"git update-ref ORIG_HEAD $orig_head","class":"lineCov","hits":"1",},
{"lineNum":"  615","line":""},
{"lineNum":"  616","line":"# If the $onto is a proper descendant of the tip of the branch, then"},
{"lineNum":"  617","line":"# we just fast-forwarded."},
{"lineNum":"  618","line":"if test \"$mb\" = \"$orig_head\"","class":"lineCov","hits":"1",},
{"lineNum":"  619","line":"then"},
{"lineNum":"  620","line":"\tsay \"$(eval_gettext \"Fast-forwarded \\$branch_name to \\$onto_name.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  621","line":"\tmove_to_original_branch","class":"lineCov","hits":"1",},
{"lineNum":"  622","line":"\tfinish_rebase","class":"lineCov","hits":"1",},
{"lineNum":"  623","line":"\texit 0","class":"lineCov","hits":"1",},
{"lineNum":"  624","line":"fi"},
{"lineNum":"  625","line":""},
{"lineNum":"  626","line":"if test -n \"$rebase_root\"","class":"lineCov","hits":"1",},
{"lineNum":"  627","line":"then"},
{"lineNum":"  628","line":"\trevisions=\"$onto..$orig_head\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  629","line":"else"},
{"lineNum":"  630","line":"\trevisions=\"${restrict_revision-$upstream}..$orig_head\"","class":"lineCov","hits":"1",},
{"lineNum":"  631","line":"fi"},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":"run_specific_rebase","class":"lineCov","hits":"1",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "git-pull", "date" : "2015-04-30 13:28:23", "instrumented" : 356, "covered" : 243,};
var merged_data = [];
