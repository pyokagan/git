var data = {lines:[
{"lineNum":"    1","line":"#!/bin/sh"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Copyright (c) 2005, 2006 Junio C Hamano"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"SUBDIRECTORY_OK=Yes","class":"lineCov","hits":"1",},
{"lineNum":"    6","line":"OPTIONS_KEEPDASHDASH=","class":"lineCov","hits":"1",},
{"lineNum":"    7","line":"OPTIONS_STUCKLONG=t","class":"lineCov","hits":"1",},
{"lineNum":"    8","line":"OPTIONS_SPEC=\"\\","class":"lineNoCov","hits":"0",},
{"lineNum":"    9","line":"git am [options] [(<mbox>|<Maildir>)...]"},
{"lineNum":"   10","line":"git am [options] (--continue | --skip | --abort)","class":"lineNoCov","hits":"0",},
{"lineNum":"   11","line":"--","class":"lineNoCov","hits":"0",},
{"lineNum":"   12","line":"i,interactive   run interactively","class":"lineNoCov","hits":"0",},
{"lineNum":"   13","line":"b,binary*       (historical option -- no-op)","class":"lineNoCov","hits":"0",},
{"lineNum":"   14","line":"3,3way          allow fall back on 3way merging if needed","class":"lineNoCov","hits":"0",},
{"lineNum":"   15","line":"q,quiet         be quiet","class":"lineNoCov","hits":"0",},
{"lineNum":"   16","line":"s,signoff       add a Signed-off-by line to the commit message","class":"lineNoCov","hits":"0",},
{"lineNum":"   17","line":"u,utf8          recode into utf8 (default)","class":"lineNoCov","hits":"0",},
{"lineNum":"   18","line":"k,keep          pass -k flag to git-mailinfo","class":"lineNoCov","hits":"0",},
{"lineNum":"   19","line":"keep-non-patch  pass -b flag to git-mailinfo","class":"lineNoCov","hits":"0",},
{"lineNum":"   20","line":"m,message-id    pass -m flag to git-mailinfo","class":"lineNoCov","hits":"0",},
{"lineNum":"   21","line":"keep-cr         pass --keep-cr flag to git-mailsplit for mbox format","class":"lineNoCov","hits":"0",},
{"lineNum":"   22","line":"no-keep-cr      do not pass --keep-cr flag to git-mailsplit independent of am.keepcr","class":"lineNoCov","hits":"0",},
{"lineNum":"   23","line":"c,scissors      strip everything before a scissors line","class":"lineNoCov","hits":"0",},
{"lineNum":"   24","line":"whitespace=     pass it through git-apply","class":"lineNoCov","hits":"0",},
{"lineNum":"   25","line":"ignore-space-change pass it through git-apply","class":"lineNoCov","hits":"0",},
{"lineNum":"   26","line":"ignore-whitespace pass it through git-apply","class":"lineNoCov","hits":"0",},
{"lineNum":"   27","line":"directory=      pass it through git-apply","class":"lineNoCov","hits":"0",},
{"lineNum":"   28","line":"exclude=        pass it through git-apply","class":"lineNoCov","hits":"0",},
{"lineNum":"   29","line":"include=        pass it through git-apply","class":"lineNoCov","hits":"0",},
{"lineNum":"   30","line":"C=              pass it through git-apply","class":"lineNoCov","hits":"0",},
{"lineNum":"   31","line":"p=              pass it through git-apply","class":"lineNoCov","hits":"0",},
{"lineNum":"   32","line":"patch-format=   format the patch(es) are in","class":"lineNoCov","hits":"0",},
{"lineNum":"   33","line":"reject          pass it through git-apply","class":"lineNoCov","hits":"0",},
{"lineNum":"   34","line":"resolvemsg=     override error message when patch failure occurs","class":"lineNoCov","hits":"0",},
{"lineNum":"   35","line":"continue        continue applying patches after resolving a conflict","class":"lineNoCov","hits":"0",},
{"lineNum":"   36","line":"r,resolved      synonyms for --continue","class":"lineNoCov","hits":"0",},
{"lineNum":"   37","line":"skip            skip the current patch","class":"lineNoCov","hits":"0",},
{"lineNum":"   38","line":"abort           restore the original branch and abort the patching operation.","class":"lineNoCov","hits":"0",},
{"lineNum":"   39","line":"committer-date-is-author-date    lie about committer date","class":"lineNoCov","hits":"0",},
{"lineNum":"   40","line":"ignore-date     use current timestamp for author date","class":"lineNoCov","hits":"0",},
{"lineNum":"   41","line":"rerere-autoupdate update the index with reused conflict resolution if possible","class":"lineNoCov","hits":"0",},
{"lineNum":"   42","line":"S,gpg-sign?     GPG-sign commits","class":"lineNoCov","hits":"0",},
{"lineNum":"   43","line":"rebasing*       (internal use for git-rebase)\"","class":"lineCov","hits":"1",},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":". git-sh-setup","class":"lineCov","hits":"1",},
{"lineNum":"   46","line":". git-sh-i18n","class":"lineCov","hits":"1",},
{"lineNum":"   47","line":"prefix=$(git rev-parse --show-prefix)","class":"lineCov","hits":"1",},
{"lineNum":"   48","line":"set_reflog_action am","class":"lineCov","hits":"1",},
{"lineNum":"   49","line":"require_work_tree","class":"lineCov","hits":"1",},
{"lineNum":"   50","line":"cd_to_toplevel","class":"lineCov","hits":"1",},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"git var GIT_COMMITTER_IDENT >/dev/null ||","class":"lineCov","hits":"1",},
{"lineNum":"   53","line":"\tdie \"$(gettext \"You need to set your committer info first\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"if git rev-parse --verify -q HEAD >/dev/null","class":"lineCov","hits":"1",},
{"lineNum":"   56","line":"then"},
{"lineNum":"   57","line":"\tHAS_HEAD=yes","class":"lineCov","hits":"1",},
{"lineNum":"   58","line":"else"},
{"lineNum":"   59","line":"\tHAS_HEAD=","class":"lineCov","hits":"1",},
{"lineNum":"   60","line":"fi"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"cmdline=\"git am\"","class":"lineCov","hits":"1",},
{"lineNum":"   63","line":"if test \'\' != \"$interactive\"","class":"lineCov","hits":"1",},
{"lineNum":"   64","line":"then"},
{"lineNum":"   65","line":"\tcmdline=\"$cmdline -i\"","class":"lineNoCov","hits":"0",},
{"lineNum":"   66","line":"fi"},
{"lineNum":"   67","line":"if test \'\' != \"$threeway\"","class":"lineCov","hits":"1",},
{"lineNum":"   68","line":"then"},
{"lineNum":"   69","line":"\tcmdline=\"$cmdline -3\"","class":"lineNoCov","hits":"0",},
{"lineNum":"   70","line":"fi"},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"sq () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   73","line":"\tgit rev-parse --sq-quote \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"   74","line":"}"},
{"lineNum":"   75","line":""},
{"lineNum":"   76","line":"stop_here () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   77","line":"    echo \"$1\" >\"$dotest/next\"","class":"lineCov","hits":"1",},
{"lineNum":"   78","line":"    git rev-parse --verify -q HEAD >\"$dotest/abort-safety\"","class":"lineCov","hits":"1",},
{"lineNum":"   79","line":"    exit 1","class":"lineCov","hits":"1",},
{"lineNum":"   80","line":"}"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"safe_to_abort () {","class":"lineNoCov","hits":"0",},
{"lineNum":"   83","line":"\tif test -f \"$dotest/dirtyindex\"","class":"lineCov","hits":"1",},
{"lineNum":"   84","line":"\tthen"},
{"lineNum":"   85","line":"\t\treturn 1","class":"lineNoCov","hits":"0",},
{"lineNum":"   86","line":"\tfi"},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"\tif ! test -s \"$dotest/abort-safety\"","class":"lineCov","hits":"1",},
{"lineNum":"   89","line":"\tthen"},
{"lineNum":"   90","line":"\t\treturn 0","class":"lineNoCov","hits":"0",},
{"lineNum":"   91","line":"\tfi"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"\tabort_safety=$(cat \"$dotest/abort-safety\")","class":"lineCov","hits":"1",},
{"lineNum":"   94","line":"\tif test \"z$(git rev-parse --verify -q HEAD)\" = \"z$abort_safety\"","class":"lineCov","hits":"1",},
{"lineNum":"   95","line":"\tthen"},
{"lineNum":"   96","line":"\t\treturn 0","class":"lineCov","hits":"1",},
{"lineNum":"   97","line":"\tfi"},
{"lineNum":"   98","line":"\tgettextln \"You seem to have moved HEAD since the last \'am\' failure.","class":"lineNoCov","hits":"0",},
{"lineNum":"   99","line":"Not rewinding to ORIG_HEAD\" >&2","class":"lineCov","hits":"1",},
{"lineNum":"  100","line":"\treturn 1","class":"lineCov","hits":"1",},
{"lineNum":"  101","line":"}"},
{"lineNum":"  102","line":""},
{"lineNum":"  103","line":"stop_here_user_resolve () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  104","line":"    if [ -n \"$resolvemsg\" ]; then","class":"lineCov","hits":"1",},
{"lineNum":"  105","line":"\t    printf \'%s\\n\' \"$resolvemsg\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  106","line":"\t    stop_here $1","class":"lineNoCov","hits":"0",},
{"lineNum":"  107","line":"    fi"},
{"lineNum":"  108","line":"    eval_gettextln \"When you have resolved this problem, run \\\"\\$cmdline --continue\\\".","class":"lineNoCov","hits":"0",},
{"lineNum":"  109","line":"If you prefer to skip this patch, run \\\"\\$cmdline --skip\\\" instead.","class":"lineNoCov","hits":"0",},
{"lineNum":"  110","line":"To restore the original branch and stop patching, run \\\"\\$cmdline --abort\\\".\"","class":"lineCov","hits":"1",},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"    stop_here $1","class":"lineCov","hits":"1",},
{"lineNum":"  113","line":"}"},
{"lineNum":"  114","line":""},
{"lineNum":"  115","line":"go_next () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  116","line":"\trm -f \"$dotest/$msgnum\" \"$dotest/msg\" \"$dotest/msg-clean\" \\","class":"lineCov","hits":"1",},
{"lineNum":"  117","line":"\t\t\"$dotest/patch\" \"$dotest/info\""},
{"lineNum":"  118","line":"\techo \"$next\" >\"$dotest/next\"","class":"lineCov","hits":"1",},
{"lineNum":"  119","line":"\tthis=$next","class":"lineCov","hits":"1",},
{"lineNum":"  120","line":"}"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"cannot_fallback () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  123","line":"\techo \"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"  124","line":"\tgettextln \"Cannot fall back to three-way merge.\"","class":"lineCov","hits":"1",},
{"lineNum":"  125","line":"\texit 1","class":"lineCov","hits":"1",},
{"lineNum":"  126","line":"}"},
{"lineNum":"  127","line":""},
{"lineNum":"  128","line":"fall_back_3way () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  129","line":"    O_OBJECT=$(cd \"$GIT_OBJECT_DIRECTORY\" && pwd)","class":"lineCov","hits":"1",},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"    rm -fr \"$dotest\"/patch-merge-*","class":"lineCov","hits":"1",},
{"lineNum":"  132","line":"    mkdir \"$dotest/patch-merge-tmp-dir\"","class":"lineCov","hits":"1",},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"    # First see if the patch records the index info that we can use."},
{"lineNum":"  135","line":"    cmd=\"git apply $git_apply_opt --build-fake-ancestor\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  136","line":"    cmd=\"$cmd \"\'\"$dotest/patch-merge-tmp-index\" \"$dotest/patch\"\' &&","class":"lineCov","hits":"1",},
{"lineNum":"  137","line":"    eval \"$cmd\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  138","line":"    GIT_INDEX_FILE=\"$dotest/patch-merge-tmp-index\" \\","class":"lineCov","hits":"1",},
{"lineNum":"  139","line":"    git write-tree >\"$dotest/patch-merge-base+\" ||"},
{"lineNum":"  140","line":"    cannot_fallback \"$(gettext \"Repository lacks necessary blobs to fall back on 3-way merge.\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  141","line":""},
{"lineNum":"  142","line":"    say \"$(gettext \"Using index info to reconstruct a base tree...\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  143","line":""},
{"lineNum":"  144","line":"    cmd=\'GIT_INDEX_FILE=\"$dotest/patch-merge-tmp-index\"\'","class":"lineCov","hits":"1",},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":"    if test -z \"$GIT_QUIET\"","class":"lineCov","hits":"1",},
{"lineNum":"  147","line":"    then"},
{"lineNum":"  148","line":"\teval \"$cmd git diff-index --cached --diff-filter=AM --name-status HEAD\"","class":"lineCov","hits":"1",},
{"lineNum":"  149","line":"    fi"},
{"lineNum":"  150","line":""},
{"lineNum":"  151","line":"    cmd=\"$cmd git apply --cached $git_apply_opt\"\' <\"$dotest/patch\"\'","class":"lineCov","hits":"1",},
{"lineNum":"  152","line":"    if eval \"$cmd\"","class":"lineCov","hits":"1",},
{"lineNum":"  153","line":"    then"},
{"lineNum":"  154","line":"\tmv \"$dotest/patch-merge-base+\" \"$dotest/patch-merge-base\"","class":"lineCov","hits":"1",},
{"lineNum":"  155","line":"\tmv \"$dotest/patch-merge-tmp-index\" \"$dotest/patch-merge-index\"","class":"lineCov","hits":"1",},
{"lineNum":"  156","line":"    else"},
{"lineNum":"  157","line":"\tcannot_fallback \"$(gettext \"Did you hand edit your patch?","class":"lineNoCov","hits":"0",},
{"lineNum":"  158","line":"It does not apply to blobs recorded in its index.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  159","line":"    fi"},
{"lineNum":"  160","line":""},
{"lineNum":"  161","line":"    test -f \"$dotest/patch-merge-index\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  162","line":"    his_tree=$(GIT_INDEX_FILE=\"$dotest/patch-merge-index\" git write-tree) &&","class":"lineCov","hits":"1",},
{"lineNum":"  163","line":"    orig_tree=$(cat \"$dotest/patch-merge-base\") &&","class":"lineCov","hits":"1",},
{"lineNum":"  164","line":"    rm -fr \"$dotest\"/patch-merge-* || exit 1","class":"lineCov","hits":"1",},
{"lineNum":"  165","line":""},
{"lineNum":"  166","line":"    say \"$(gettext \"Falling back to patching base and 3-way merge...\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"    # This is not so wrong.  Depending on which base we picked,"},
{"lineNum":"  169","line":"    # orig_tree may be wildly different from ours, but his_tree"},
{"lineNum":"  170","line":"    # has the same set of wildly different changes in parts the"},
{"lineNum":"  171","line":"    # patch did not touch, so recursive ends up canceling them,"},
{"lineNum":"  172","line":"    # saying that we reverted all those changes."},
{"lineNum":"  173","line":""},
{"lineNum":"  174","line":"    eval GITHEAD_$his_tree=\'\"$FIRSTLINE\"\'","class":"lineCov","hits":"1",},
{"lineNum":"  175","line":"    export GITHEAD_$his_tree","class":"lineCov","hits":"1",},
{"lineNum":"  176","line":"    if test -n \"$GIT_QUIET\"","class":"lineCov","hits":"1",},
{"lineNum":"  177","line":"    then"},
{"lineNum":"  178","line":"\t    GIT_MERGE_VERBOSITY=0 && export GIT_MERGE_VERBOSITY","class":"lineCov","hits":"1",},
{"lineNum":"  179","line":"    fi"},
{"lineNum":"  180","line":"    git-merge-recursive $orig_tree -- HEAD $his_tree || {","class":"lineCov","hits":"1",},
{"lineNum":"  181","line":"\t    git rerere $allow_rerere_autoupdate","class":"lineCov","hits":"1",},
{"lineNum":"  182","line":"\t    die \"$(gettext \"Failed to merge in the changes.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  183","line":"    }"},
{"lineNum":"  184","line":"    unset GITHEAD_$his_tree","class":"lineCov","hits":"1",},
{"lineNum":"  185","line":"}"},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"clean_abort () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  188","line":"\ttest $# = 0 || echo >&2 \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  189","line":"\trm -fr \"$dotest\"","class":"lineCov","hits":"1",},
{"lineNum":"  190","line":"\texit 1","class":"lineCov","hits":"1",},
{"lineNum":"  191","line":"}"},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":"patch_format=","class":"lineCov","hits":"1",},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"check_patch_format () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  196","line":"\t# early return if patch_format was set from the command line"},
{"lineNum":"  197","line":"\tif test -n \"$patch_format\"","class":"lineCov","hits":"1",},
{"lineNum":"  198","line":"\tthen"},
{"lineNum":"  199","line":"\t\treturn 0","class":"lineNoCov","hits":"0",},
{"lineNum":"  200","line":"\tfi"},
{"lineNum":"  201","line":""},
{"lineNum":"  202","line":"\t# we default to mbox format if input is from stdin and for"},
{"lineNum":"  203","line":"\t# directories"},
{"lineNum":"  204","line":"\tif test $# = 0 || test \"x$1\" = \"x-\" || test -d \"$1\"","class":"lineCov","hits":"1",},
{"lineNum":"  205","line":"\tthen"},
{"lineNum":"  206","line":"\t\tpatch_format=mbox","class":"lineCov","hits":"1",},
{"lineNum":"  207","line":"\t\treturn 0","class":"lineCov","hits":"1",},
{"lineNum":"  208","line":"\tfi"},
{"lineNum":"  209","line":""},
{"lineNum":"  210","line":"\t# otherwise, check the first few non-blank lines of the first"},
{"lineNum":"  211","line":"\t# patch to try to detect its format"},
{"lineNum":"  212","line":"\t{"},
{"lineNum":"  213","line":"\t\t# Start from first line containing non-whitespace"},
{"lineNum":"  214","line":"\t\tl1=","class":"lineCov","hits":"1",},
{"lineNum":"  215","line":"\t\twhile test -z \"$l1\"","class":"lineCov","hits":"1",},
{"lineNum":"  216","line":"\t\tdo"},
{"lineNum":"  217","line":"\t\t\tread l1 || break","class":"lineCov","hits":"1",},
{"lineNum":"  218","line":"\t\tdone"},
{"lineNum":"  219","line":"\t\tread l2","class":"lineCov","hits":"1",},
{"lineNum":"  220","line":"\t\tread l3","class":"lineCov","hits":"1",},
{"lineNum":"  221","line":"\t\tcase \"$l1\" in","class":"lineCov","hits":"1",},
{"lineNum":"  222","line":"\t\t\"From \"* | \"From: \"*)"},
{"lineNum":"  223","line":"\t\t\tpatch_format=mbox","class":"lineCov","hits":"1",},
{"lineNum":"  224","line":"\t\t\t;;"},
{"lineNum":"  225","line":"\t\t\'# This series applies on GIT commit\'*)","class":"lineNoCov","hits":"0",},
{"lineNum":"  226","line":"\t\t\tpatch_format=stgit-series","class":"lineNoCov","hits":"0",},
{"lineNum":"  227","line":"\t\t\t;;"},
{"lineNum":"  228","line":"\t\t\"# HG changeset patch\")","class":"lineNoCov","hits":"0",},
{"lineNum":"  229","line":"\t\t\tpatch_format=hg","class":"lineNoCov","hits":"0",},
{"lineNum":"  230","line":"\t\t\t;;"},
{"lineNum":"  231","line":"\t\t*)"},
{"lineNum":"  232","line":"\t\t\t# if the second line is empty and the third is"},
{"lineNum":"  233","line":"\t\t\t# a From, Author or Date entry, this is very"},
{"lineNum":"  234","line":"\t\t\t# likely an StGIT patch"},
{"lineNum":"  235","line":"\t\t\tcase \"$l2,$l3\" in","class":"lineCov","hits":"1",},
{"lineNum":"  236","line":"\t\t\t,\"From: \"* | ,\"Author: \"* | ,\"Date: \"*)"},
{"lineNum":"  237","line":"\t\t\t\tpatch_format=stgit","class":"lineNoCov","hits":"0",},
{"lineNum":"  238","line":"\t\t\t\t;;"},
{"lineNum":"  239","line":"\t\t\t*)"},
{"lineNum":"  240","line":"\t\t\t\t;;"},
{"lineNum":"  241","line":"\t\t\tesac"},
{"lineNum":"  242","line":"\t\t\t;;"},
{"lineNum":"  243","line":"\t\tesac"},
{"lineNum":"  244","line":"\t\tif test -z \"$patch_format\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  245","line":"\t\t\ttest -n \"$l1\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  246","line":"\t\t\ttest -n \"$l2\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  247","line":"\t\t\ttest -n \"$l3\"","class":"lineCov","hits":"1",},
{"lineNum":"  248","line":"\t\tthen"},
{"lineNum":"  249","line":"\t\t\t# This begins with three non-empty lines.  Is this a"},
{"lineNum":"  250","line":"\t\t\t# piece of e-mail a-la RFC2822?  Grab all the headers,"},
{"lineNum":"  251","line":"\t\t\t# discarding the indented remainder of folded lines,"},
{"lineNum":"  252","line":"\t\t\t# and see if it looks like that they all begin with the"},
{"lineNum":"  253","line":"\t\t\t# header field names..."},
{"lineNum":"  254","line":"\t\t\ttr -d \'\\015\' <\"$1\" |","class":"lineCov","hits":"1",},
{"lineNum":"  255","line":"\t\t\tsed -n -e \'/^$/q\' -e \'/^[ \t]/d\' -e p |","class":"lineCov","hits":"1",},
{"lineNum":"  256","line":"\t\t\tsane_egrep -v \'^[!-9;-~]+:\' >/dev/null ||","class":"lineCov","hits":"1",},
{"lineNum":"  257","line":"\t\t\tpatch_format=mbox","class":"lineCov","hits":"1",},
{"lineNum":"  258","line":"\t\tfi"},
{"lineNum":"  259","line":"\t} < \"$1\" || clean_abort","class":"lineNoCov","hits":"0",},
{"lineNum":"  260","line":"}"},
{"lineNum":"  261","line":""},
{"lineNum":"  262","line":"split_patches () {","class":"lineNoCov","hits":"0",},
{"lineNum":"  263","line":"\tcase \"$patch_format\" in","class":"lineCov","hits":"1",},
{"lineNum":"  264","line":"\tmbox)"},
{"lineNum":"  265","line":"\t\tif test t = \"$keepcr\"","class":"lineCov","hits":"1",},
{"lineNum":"  266","line":"\t\tthen"},
{"lineNum":"  267","line":"\t\t    keep_cr=--keep-cr","class":"lineCov","hits":"1",},
{"lineNum":"  268","line":"\t\telse"},
{"lineNum":"  269","line":"\t\t    keep_cr=","class":"lineCov","hits":"1",},
{"lineNum":"  270","line":"\t\tfi"},
{"lineNum":"  271","line":"\t\tgit mailsplit -d\"$prec\" -o\"$dotest\" -b $keep_cr -- \"$@\" > \"$dotest/last\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  272","line":"\t\tclean_abort","class":"lineNoCov","hits":"0",},
{"lineNum":"  273","line":"\t\t;;"},
{"lineNum":"  274","line":"\tstgit-series)"},
{"lineNum":"  275","line":"\t\tif test $# -ne 1","class":"lineNoCov","hits":"0",},
{"lineNum":"  276","line":"\t\tthen"},
{"lineNum":"  277","line":"\t\t\tclean_abort \"$(gettext \"Only one StGIT patch series can be applied at once\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  278","line":"\t\tfi"},
{"lineNum":"  279","line":"\t\tseries_dir=$(dirname \"$1\")","class":"lineNoCov","hits":"0",},
{"lineNum":"  280","line":"\t\tseries_file=\"$1\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  281","line":"\t\tshift","class":"lineNoCov","hits":"0",},
{"lineNum":"  282","line":"\t\t{"},
{"lineNum":"  283","line":"\t\t\tset x","class":"lineNoCov","hits":"0",},
{"lineNum":"  284","line":"\t\t\twhile read filename","class":"lineNoCov","hits":"0",},
{"lineNum":"  285","line":"\t\t\tdo"},
{"lineNum":"  286","line":"\t\t\t\tset \"$@\" \"$series_dir/$filename\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  287","line":"\t\t\tdone"},
{"lineNum":"  288","line":"\t\t\t# remove the safety x"},
{"lineNum":"  289","line":"\t\t\tshift","class":"lineNoCov","hits":"0",},
{"lineNum":"  290","line":"\t\t\t# remove the arg coming from the first-line comment"},
{"lineNum":"  291","line":"\t\t\tshift","class":"lineNoCov","hits":"0",},
{"lineNum":"  292","line":"\t\t} < \"$series_file\" || clean_abort","class":"lineNoCov","hits":"0",},
{"lineNum":"  293","line":"\t\t# set the patch format appropriately"},
{"lineNum":"  294","line":"\t\tpatch_format=stgit","class":"lineNoCov","hits":"0",},
{"lineNum":"  295","line":"\t\t# now handle the actual StGIT patches"},
{"lineNum":"  296","line":"\t\tsplit_patches \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  297","line":"\t\t;;"},
{"lineNum":"  298","line":"\tstgit)"},
{"lineNum":"  299","line":"\t\tthis=0","class":"lineNoCov","hits":"0",},
{"lineNum":"  300","line":"\t\tfor stgit in \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  301","line":"\t\tdo"},
{"lineNum":"  302","line":"\t\t\tthis=$(expr \"$this\" + 1)","class":"lineNoCov","hits":"0",},
{"lineNum":"  303","line":"\t\t\tmsgnum=$(printf \"%0${prec}d\" $this)","class":"lineNoCov","hits":"0",},
{"lineNum":"  304","line":"\t\t\t# Perl version of StGIT parse_patch. The first nonemptyline"},
{"lineNum":"  305","line":"\t\t\t# not starting with Author, From or Date is the"},
{"lineNum":"  306","line":"\t\t\t# subject, and the body starts with the next nonempty"},
{"lineNum":"  307","line":"\t\t\t# line not starting with Author, From or Date"},
{"lineNum":"  308","line":"\t\t\t/usr/bin/perl -ne \'BEGIN { $subject = 0 }","class":"lineNoCov","hits":"0",},
{"lineNum":"  309","line":"\t\t\t\tif ($subject > 1) { print ; }","class":"lineNoCov","hits":"0",},
{"lineNum":"  310","line":"\t\t\t\telsif (/^\\s+$/) { next ; }","class":"lineNoCov","hits":"0",},
{"lineNum":"  311","line":"\t\t\t\telsif (/^Author:/) { s/Author/From/ ; print ;}","class":"lineNoCov","hits":"0",},
{"lineNum":"  312","line":"\t\t\t\telsif (/^(From|Date)/) { print ; }","class":"lineNoCov","hits":"0",},
{"lineNum":"  313","line":"\t\t\t\telsif ($subject) {","class":"lineNoCov","hits":"0",},
{"lineNum":"  314","line":"\t\t\t\t\t$subject = 2 ;","class":"lineNoCov","hits":"0",},
{"lineNum":"  315","line":"\t\t\t\t\tprint \"\\n\" ;","class":"lineNoCov","hits":"0",},
{"lineNum":"  316","line":"\t\t\t\t\tprint ;","class":"lineNoCov","hits":"0",},
{"lineNum":"  317","line":"\t\t\t\t} else {","class":"lineNoCov","hits":"0",},
{"lineNum":"  318","line":"\t\t\t\t\tprint \"Subject: \", $_ ;","class":"lineNoCov","hits":"0",},
{"lineNum":"  319","line":"\t\t\t\t\t$subject = 1;","class":"lineNoCov","hits":"0",},
{"lineNum":"  320","line":"\t\t\t\t}"},
{"lineNum":"  321","line":"\t\t\t\' < \"$stgit\" > \"$dotest/$msgnum\" || clean_abort","class":"lineNoCov","hits":"0",},
{"lineNum":"  322","line":"\t\tdone"},
{"lineNum":"  323","line":"\t\techo \"$this\" > \"$dotest/last\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  324","line":"\t\tthis=","class":"lineNoCov","hits":"0",},
{"lineNum":"  325","line":"\t\tmsgnum=","class":"lineNoCov","hits":"0",},
{"lineNum":"  326","line":"\t\t;;"},
{"lineNum":"  327","line":"\thg)"},
{"lineNum":"  328","line":"\t\tthis=0","class":"lineNoCov","hits":"0",},
{"lineNum":"  329","line":"\t\tfor hg in \"$@\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  330","line":"\t\tdo"},
{"lineNum":"  331","line":"\t\t\tthis=$(( $this + 1 ))","class":"lineNoCov","hits":"0",},
{"lineNum":"  332","line":"\t\t\tmsgnum=$(printf \"%0${prec}d\" $this)","class":"lineNoCov","hits":"0",},
{"lineNum":"  333","line":"\t\t\t# hg stores changeset metadata in #-commented lines preceding"},
{"lineNum":"  334","line":"\t\t\t# the commit message and diff(s). The only metadata we care about"},
{"lineNum":"  335","line":"\t\t\t# are the User and Date (Node ID and Parent are hashes which are"},
{"lineNum":"  336","line":"\t\t\t# only relevant to the hg repository and thus not useful to us)"},
{"lineNum":"  337","line":"\t\t\t# Since we cannot guarantee that the commit message is in"},
{"lineNum":"  338","line":"\t\t\t# git-friendly format, we put no Subject: line and just consume"},
{"lineNum":"  339","line":"\t\t\t# all of the message as the body"},
{"lineNum":"  340","line":"\t\t\tLANG=C LC_ALL=C /usr/bin/perl -M\'POSIX qw(strftime)\' -ne \'BEGIN { $subject = 0 }","class":"lineNoCov","hits":"0",},
{"lineNum":"  341","line":"\t\t\t\tif ($subject) { print ; }","class":"lineNoCov","hits":"0",},
{"lineNum":"  342","line":"\t\t\t\telsif (/^\\# User /) { s/\\# User/From:/ ; print ; }","class":"lineNoCov","hits":"0",},
{"lineNum":"  343","line":"\t\t\t\telsif (/^\\# Date /) {"},
{"lineNum":"  344","line":"\t\t\t\t\tmy ($hashsign, $str, $time, $tz) = split ;"},
{"lineNum":"  345","line":"\t\t\t\t\t$tz = sprintf \"%+05d\", (0-$tz)/36;","class":"lineNoCov","hits":"0",},
{"lineNum":"  346","line":"\t\t\t\t\tprint \"Date: \" .","class":"lineNoCov","hits":"0",},
{"lineNum":"  347","line":"\t\t\t\t\t      strftime(\"%a, %d %b %Y %H:%M:%S \",","class":"lineNoCov","hits":"0",},
{"lineNum":"  348","line":"\t\t\t\t\t\t       localtime($time))","class":"lineNoCov","hits":"0",},
{"lineNum":"  349","line":"\t\t\t\t\t      . \"$tz\\n\";","class":"lineNoCov","hits":"0",},
{"lineNum":"  350","line":"\t\t\t\t} elsif (/^\\# /) { next ; }","class":"lineNoCov","hits":"0",},
{"lineNum":"  351","line":"\t\t\t\telse {"},
{"lineNum":"  352","line":"\t\t\t\t\tprint \"\\n\", $_ ;","class":"lineNoCov","hits":"0",},
{"lineNum":"  353","line":"\t\t\t\t\t$subject = 1;","class":"lineNoCov","hits":"0",},
{"lineNum":"  354","line":"\t\t\t\t}"},
{"lineNum":"  355","line":"\t\t\t\' <\"$hg\" >\"$dotest/$msgnum\" || clean_abort","class":"lineNoCov","hits":"0",},
{"lineNum":"  356","line":"\t\tdone"},
{"lineNum":"  357","line":"\t\techo \"$this\" >\"$dotest/last\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  358","line":"\t\tthis=","class":"lineNoCov","hits":"0",},
{"lineNum":"  359","line":"\t\tmsgnum=","class":"lineNoCov","hits":"0",},
{"lineNum":"  360","line":"\t\t;;"},
{"lineNum":"  361","line":"\t*)"},
{"lineNum":"  362","line":"\t\tif test -n \"$patch_format\"","class":"lineCov","hits":"1",},
{"lineNum":"  363","line":"\t\tthen"},
{"lineNum":"  364","line":"\t\t\tclean_abort \"$(eval_gettext \"Patch format \\$patch_format is not supported.\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  365","line":"\t\telse"},
{"lineNum":"  366","line":"\t\t\tclean_abort \"$(gettext \"Patch format detection failed.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  367","line":"\t\tfi"},
{"lineNum":"  368","line":"\t\t;;"},
{"lineNum":"  369","line":"\tesac"},
{"lineNum":"  370","line":"}"},
{"lineNum":"  371","line":""},
{"lineNum":"  372","line":"prec=4","class":"lineCov","hits":"1",},
{"lineNum":"  373","line":"dotest=\"$GIT_DIR/rebase-apply\"","class":"lineCov","hits":"1",},
{"lineNum":"  374","line":"sign= utf8=t keep= keepcr= skip= interactive= resolved= rebasing= abort=","class":"lineCov","hits":"1",},
{"lineNum":"  375","line":"messageid= resolvemsg= resume= scissors= no_inbody_headers=","class":"lineCov","hits":"1",},
{"lineNum":"  376","line":"git_apply_opt=","class":"lineCov","hits":"1",},
{"lineNum":"  377","line":"committer_date_is_author_date=","class":"lineCov","hits":"1",},
{"lineNum":"  378","line":"ignore_date=","class":"lineCov","hits":"1",},
{"lineNum":"  379","line":"allow_rerere_autoupdate=","class":"lineCov","hits":"1",},
{"lineNum":"  380","line":"gpg_sign_opt=","class":"lineCov","hits":"1",},
{"lineNum":"  381","line":""},
{"lineNum":"  382","line":"if test \"$(git config --bool --get am.messageid)\" = true","class":"lineCov","hits":"1",},
{"lineNum":"  383","line":"then"},
{"lineNum":"  384","line":"    messageid=t","class":"lineNoCov","hits":"0",},
{"lineNum":"  385","line":"fi"},
{"lineNum":"  386","line":""},
{"lineNum":"  387","line":"if test \"$(git config --bool --get am.keepcr)\" = true","class":"lineCov","hits":"1",},
{"lineNum":"  388","line":"then"},
{"lineNum":"  389","line":"    keepcr=t","class":"lineCov","hits":"1",},
{"lineNum":"  390","line":"fi"},
{"lineNum":"  391","line":""},
{"lineNum":"  392","line":"while test $# != 0","class":"lineCov","hits":"1",},
{"lineNum":"  393","line":"do"},
{"lineNum":"  394","line":"\tcase \"$1\" in","class":"lineCov","hits":"1",},
{"lineNum":"  395","line":"\t-i|--interactive)"},
{"lineNum":"  396","line":"\t\tinteractive=t ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  397","line":"\t-b|--binary)"},
{"lineNum":"  398","line":"\t\tgettextln >&2 \"The -b/--binary option has been a no-op for long time, and","class":"lineNoCov","hits":"0",},
{"lineNum":"  399","line":"it will be removed. Please do not use it anymore.\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  400","line":"\t\t;;"},
{"lineNum":"  401","line":"\t-3|--3way)"},
{"lineNum":"  402","line":"\t\tthreeway=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  403","line":"\t-s|--signoff)"},
{"lineNum":"  404","line":"\t\tsign=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  405","line":"\t-u|--utf8)"},
{"lineNum":"  406","line":"\t\tutf8=t ;; # this is now default","class":"lineNoCov","hits":"0",},
{"lineNum":"  407","line":"\t--no-utf8)"},
{"lineNum":"  408","line":"\t\tutf8= ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  409","line":"\t-m|--message-id)"},
{"lineNum":"  410","line":"\t\tmessageid=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  411","line":"\t--no-message-id)"},
{"lineNum":"  412","line":"\t\tmessageid=f ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  413","line":"\t-k|--keep)"},
{"lineNum":"  414","line":"\t\tkeep=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  415","line":"\t--keep-non-patch)"},
{"lineNum":"  416","line":"\t\tkeep=b ;;","class":"lineCov","hits":"1",},
{"lineNum":"  417","line":"\t-c|--scissors)"},
{"lineNum":"  418","line":"\t\tscissors=t ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  419","line":"\t--no-scissors)"},
{"lineNum":"  420","line":"\t\tscissors=f ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  421","line":"\t-r|--resolved|--continue)"},
{"lineNum":"  422","line":"\t\tresolved=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  423","line":"\t--skip)"},
{"lineNum":"  424","line":"\t\tskip=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  425","line":"\t--abort)"},
{"lineNum":"  426","line":"\t\tabort=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  427","line":"\t--rebasing)"},
{"lineNum":"  428","line":"\t\trebasing=t threeway=t ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  429","line":"\t--resolvemsg=*)"},
{"lineNum":"  430","line":"\t\tresolvemsg=\"${1#--resolvemsg=}\" ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  431","line":"\t--whitespace=*|--directory=*|--exclude=*|--include=*)"},
{"lineNum":"  432","line":"\t\tgit_apply_opt=\"$git_apply_opt $(sq \"$1\")\" ;;","class":"lineCov","hits":"1",},
{"lineNum":"  433","line":"\t-C*|-p*)"},
{"lineNum":"  434","line":"\t\tgit_apply_opt=\"$git_apply_opt $(sq \"$1\")\" ;;","class":"lineCov","hits":"1",},
{"lineNum":"  435","line":"\t--patch-format=*)"},
{"lineNum":"  436","line":"\t\tpatch_format=\"${1#--patch-format=}\" ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  437","line":"\t--reject|--ignore-whitespace|--ignore-space-change)"},
{"lineNum":"  438","line":"\t\tgit_apply_opt=\"$git_apply_opt $1\" ;;","class":"lineCov","hits":"1",},
{"lineNum":"  439","line":"\t--committer-date-is-author-date)"},
{"lineNum":"  440","line":"\t\tcommitter_date_is_author_date=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  441","line":"\t--ignore-date)"},
{"lineNum":"  442","line":"\t\tignore_date=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  443","line":"\t--rerere-autoupdate|--no-rerere-autoupdate)"},
{"lineNum":"  444","line":"\t\tallow_rerere_autoupdate=\"$1\" ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  445","line":"\t-q|--quiet)"},
{"lineNum":"  446","line":"\t\tGIT_QUIET=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  447","line":"\t--keep-cr)"},
{"lineNum":"  448","line":"\t\tkeepcr=t ;;","class":"lineCov","hits":"1",},
{"lineNum":"  449","line":"\t--no-keep-cr)"},
{"lineNum":"  450","line":"\t\tkeepcr=f ;;","class":"lineCov","hits":"1",},
{"lineNum":"  451","line":"\t--gpg-sign)"},
{"lineNum":"  452","line":"\t\tgpg_sign_opt=-S ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  453","line":"\t--gpg-sign=*)"},
{"lineNum":"  454","line":"\t\tgpg_sign_opt=\"-S${1#--gpg-sign=}\" ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  455","line":"\t--)"},
{"lineNum":"  456","line":"\t\tshift; break ;;","class":"lineCov","hits":"1",},
{"lineNum":"  457","line":"\t*)"},
{"lineNum":"  458","line":"\t\tusage ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  459","line":"\tesac"},
{"lineNum":"  460","line":"\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  461","line":"done"},
{"lineNum":"  462","line":""},
{"lineNum":"  463","line":"# If the dotest directory exists, but we have finished applying all the"},
{"lineNum":"  464","line":"# patches in them, clear it out."},
{"lineNum":"  465","line":"if test -d \"$dotest\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  466","line":"   test -f \"$dotest/last\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  467","line":"   test -f \"$dotest/next\" &&","class":"lineCov","hits":"1",},
{"lineNum":"  468","line":"   last=$(cat \"$dotest/last\") &&","class":"lineCov","hits":"1",},
{"lineNum":"  469","line":"   next=$(cat \"$dotest/next\") &&","class":"lineCov","hits":"1",},
{"lineNum":"  470","line":"   test $# != 0 &&","class":"lineCov","hits":"1",},
{"lineNum":"  471","line":"   test \"$next\" -gt \"$last\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  472","line":"then"},
{"lineNum":"  473","line":"   rm -fr \"$dotest\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  474","line":"fi"},
{"lineNum":"  475","line":""},
{"lineNum":"  476","line":"if test -d \"$dotest\" && test -f \"$dotest/last\" && test -f \"$dotest/next\"","class":"lineCov","hits":"1",},
{"lineNum":"  477","line":"then"},
{"lineNum":"  478","line":"\tcase \"$#,$skip$resolved$abort\" in","class":"lineCov","hits":"1",},
{"lineNum":"  479","line":"\t0,*t*)"},
{"lineNum":"  480","line":"\t\t# Explicit resume command and we do not have file, so"},
{"lineNum":"  481","line":"\t\t# we are happy."},
{"lineNum":"  482","line":"\t\t: ;;","class":"lineCov","hits":"1",},
{"lineNum":"  483","line":"\t0,)"},
{"lineNum":"  484","line":"\t\t# No file input but without resume parameters; catch"},
{"lineNum":"  485","line":"\t\t# user error to feed us a patch from standard input"},
{"lineNum":"  486","line":"\t\t# when there is already $dotest.  This is somewhat"},
{"lineNum":"  487","line":"\t\t# unreliable -- stdin could be /dev/null for example"},
{"lineNum":"  488","line":"\t\t# and the caller did not intend to feed us a patch but"},
{"lineNum":"  489","line":"\t\t# wanted to continue unattended."},
{"lineNum":"  490","line":"\t\ttest -t 0","class":"lineNoCov","hits":"0",},
{"lineNum":"  491","line":"\t\t;;"},
{"lineNum":"  492","line":"\t*)"},
{"lineNum":"  493","line":"\t\tfalse","class":"lineNoCov","hits":"0",},
{"lineNum":"  494","line":"\t\t;;"},
{"lineNum":"  495","line":"\tesac ||","class":"lineNoCov","hits":"0",},
{"lineNum":"  496","line":"\tdie \"$(eval_gettext \"previous rebase directory \\$dotest still exists but mbox given.\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  497","line":"\tresume=yes","class":"lineCov","hits":"1",},
{"lineNum":"  498","line":""},
{"lineNum":"  499","line":"\tcase \"$skip,$abort\" in","class":"lineCov","hits":"1",},
{"lineNum":"  500","line":"\tt,t)"},
{"lineNum":"  501","line":"\t\tdie \"$(gettext \"Please make up your mind. --skip or --abort?\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  502","line":"\t\t;;"},
{"lineNum":"  503","line":"\tt,)"},
{"lineNum":"  504","line":"\t\tgit rerere clear","class":"lineCov","hits":"1",},
{"lineNum":"  505","line":"\t\tgit read-tree --reset -u HEAD HEAD","class":"lineCov","hits":"1",},
{"lineNum":"  506","line":"\t\torig_head=$(cat \"$GIT_DIR/ORIG_HEAD\")","class":"lineCov","hits":"1",},
{"lineNum":"  507","line":"\t\tgit reset HEAD","class":"lineCov","hits":"1",},
{"lineNum":"  508","line":"\t\tgit update-ref ORIG_HEAD $orig_head","class":"lineCov","hits":"1",},
{"lineNum":"  509","line":"\t\t;;"},
{"lineNum":"  510","line":"\t,t)"},
{"lineNum":"  511","line":"\t\tif test -f \"$dotest/rebasing\"","class":"lineCov","hits":"1",},
{"lineNum":"  512","line":"\t\tthen"},
{"lineNum":"  513","line":"\t\t\texec git rebase --abort","class":"lineNoCov","hits":"0",},
{"lineNum":"  514","line":"\t\tfi"},
{"lineNum":"  515","line":"\t\tgit rerere clear","class":"lineCov","hits":"1",},
{"lineNum":"  516","line":"\t\tif safe_to_abort","class":"lineCov","hits":"1",},
{"lineNum":"  517","line":"\t\tthen"},
{"lineNum":"  518","line":"\t\t\tgit read-tree --reset -u HEAD ORIG_HEAD","class":"lineCov","hits":"1",},
{"lineNum":"  519","line":"\t\t\tgit reset ORIG_HEAD","class":"lineCov","hits":"1",},
{"lineNum":"  520","line":"\t\tfi"},
{"lineNum":"  521","line":"\t\trm -fr \"$dotest\"","class":"lineCov","hits":"1",},
{"lineNum":"  522","line":"\t\texit ;;","class":"lineCov","hits":"1",},
{"lineNum":"  523","line":"\tesac"},
{"lineNum":"  524","line":"\trm -f \"$dotest/dirtyindex\"","class":"lineCov","hits":"1",},
{"lineNum":"  525","line":"else"},
{"lineNum":"  526","line":"\t# Possible stray $dotest directory in the independent-run"},
{"lineNum":"  527","line":"\t# case; in the --rebasing case, it is upto the caller"},
{"lineNum":"  528","line":"\t# (git-rebase--am) to take care of stray directories."},
{"lineNum":"  529","line":"\tif test -d \"$dotest\" && test -z \"$rebasing\"","class":"lineCov","hits":"1",},
{"lineNum":"  530","line":"\tthen"},
{"lineNum":"  531","line":"\t\tcase \"$skip,$resolved,$abort\" in","class":"lineCov","hits":"1",},
{"lineNum":"  532","line":"\t\t,,t)"},
{"lineNum":"  533","line":"\t\t\trm -fr \"$dotest\"","class":"lineCov","hits":"1",},
{"lineNum":"  534","line":"\t\t\texit 0","class":"lineCov","hits":"1",},
{"lineNum":"  535","line":"\t\t\t;;"},
{"lineNum":"  536","line":"\t\t*)"},
{"lineNum":"  537","line":"\t\t\tdie \"$(eval_gettext \"Stray \\$dotest directory found.","class":"lineNoCov","hits":"0",},
{"lineNum":"  538","line":"Use \\\"git am --abort\\\" to remove it.\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  539","line":"\t\t\t;;"},
{"lineNum":"  540","line":"\t\tesac"},
{"lineNum":"  541","line":"\tfi"},
{"lineNum":"  542","line":""},
{"lineNum":"  543","line":"\t# Make sure we are not given --skip, --continue, or --abort"},
{"lineNum":"  544","line":"\ttest \"$skip$resolved$abort\" = \"\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  545","line":"\t\tdie \"$(gettext \"Resolve operation not in progress, we are not resuming.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  546","line":""},
{"lineNum":"  547","line":"\t# Start afresh."},
{"lineNum":"  548","line":"\tmkdir -p \"$dotest\" || exit","class":"lineCov","hits":"1",},
{"lineNum":"  549","line":""},
{"lineNum":"  550","line":"\tif test -n \"$prefix\" && test $# != 0","class":"lineCov","hits":"1",},
{"lineNum":"  551","line":"\tthen"},
{"lineNum":"  552","line":"\t\tfirst=t","class":"lineCov","hits":"1",},
{"lineNum":"  553","line":"\t\tfor arg","class":"lineCov","hits":"1",},
{"lineNum":"  554","line":"\t\tdo"},
{"lineNum":"  555","line":"\t\t\ttest -n \"$first\" && {","class":"lineCov","hits":"1",},
{"lineNum":"  556","line":"\t\t\t\tset x","class":"lineCov","hits":"1",},
{"lineNum":"  557","line":"\t\t\t\tfirst=","class":"lineCov","hits":"1",},
{"lineNum":"  558","line":"\t\t\t}"},
{"lineNum":"  559","line":"\t\t\tif is_absolute_path \"$arg\"","class":"lineCov","hits":"1",},
{"lineNum":"  560","line":"\t\t\tthen"},
{"lineNum":"  561","line":"\t\t\t\tset \"$@\" \"$arg\"","class":"lineCov","hits":"1",},
{"lineNum":"  562","line":"\t\t\telse"},
{"lineNum":"  563","line":"\t\t\t\tset \"$@\" \"$prefix$arg\"","class":"lineCov","hits":"1",},
{"lineNum":"  564","line":"\t\t\tfi"},
{"lineNum":"  565","line":"\t\tdone"},
{"lineNum":"  566","line":"\t\tshift","class":"lineCov","hits":"1",},
{"lineNum":"  567","line":"\tfi"},
{"lineNum":"  568","line":""},
{"lineNum":"  569","line":"\tcheck_patch_format \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  570","line":""},
{"lineNum":"  571","line":"\tsplit_patches \"$@\"","class":"lineCov","hits":"1",},
{"lineNum":"  572","line":""},
{"lineNum":"  573","line":"\t# -i can and must be given when resuming; everything"},
{"lineNum":"  574","line":"\t# else is kept"},
{"lineNum":"  575","line":"\techo \" $git_apply_opt\" >\"$dotest/apply-opt\"","class":"lineCov","hits":"1",},
{"lineNum":"  576","line":"\techo \"$threeway\" >\"$dotest/threeway\"","class":"lineCov","hits":"1",},
{"lineNum":"  577","line":"\techo \"$sign\" >\"$dotest/sign\"","class":"lineCov","hits":"1",},
{"lineNum":"  578","line":"\techo \"$utf8\" >\"$dotest/utf8\"","class":"lineCov","hits":"1",},
{"lineNum":"  579","line":"\techo \"$keep\" >\"$dotest/keep\"","class":"lineCov","hits":"1",},
{"lineNum":"  580","line":"\techo \"$messageid\" >\"$dotest/messageid\"","class":"lineCov","hits":"1",},
{"lineNum":"  581","line":"\techo \"$scissors\" >\"$dotest/scissors\"","class":"lineCov","hits":"1",},
{"lineNum":"  582","line":"\techo \"$no_inbody_headers\" >\"$dotest/no_inbody_headers\"","class":"lineCov","hits":"1",},
{"lineNum":"  583","line":"\techo \"$GIT_QUIET\" >\"$dotest/quiet\"","class":"lineCov","hits":"1",},
{"lineNum":"  584","line":"\techo 1 >\"$dotest/next\"","class":"lineCov","hits":"1",},
{"lineNum":"  585","line":"\tif test -n \"$rebasing\"","class":"lineCov","hits":"1",},
{"lineNum":"  586","line":"\tthen"},
{"lineNum":"  587","line":"\t\t: >\"$dotest/rebasing\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  588","line":"\telse"},
{"lineNum":"  589","line":"\t\t: >\"$dotest/applying\"","class":"lineCov","hits":"1",},
{"lineNum":"  590","line":"\t\tif test -n \"$HAS_HEAD\"","class":"lineCov","hits":"1",},
{"lineNum":"  591","line":"\t\tthen"},
{"lineNum":"  592","line":"\t\t\tgit update-ref ORIG_HEAD HEAD","class":"lineCov","hits":"1",},
{"lineNum":"  593","line":"\t\telse"},
{"lineNum":"  594","line":"\t\t\tgit update-ref -d ORIG_HEAD >/dev/null 2>&1","class":"lineCov","hits":"1",},
{"lineNum":"  595","line":"\t\tfi"},
{"lineNum":"  596","line":"\tfi"},
{"lineNum":"  597","line":"fi"},
{"lineNum":"  598","line":""},
{"lineNum":"  599","line":"git update-index -q --refresh","class":"lineCov","hits":"1",},
{"lineNum":"  600","line":""},
{"lineNum":"  601","line":"case \"$resolved\" in","class":"lineCov","hits":"1",},
{"lineNum":"  602","line":"\'\')"},
{"lineNum":"  603","line":"\tcase \"$HAS_HEAD\" in","class":"lineCov","hits":"1",},
{"lineNum":"  604","line":"\t\'\')"},
{"lineNum":"  605","line":"\t\tfiles=$(git ls-files) ;;","class":"lineCov","hits":"1",},
{"lineNum":"  606","line":"\t?*)"},
{"lineNum":"  607","line":"\t\tfiles=$(git diff-index --cached --name-only HEAD --) ;;","class":"lineCov","hits":"1",},
{"lineNum":"  608","line":"\tesac || exit","class":"lineNoCov","hits":"0",},
{"lineNum":"  609","line":"\tif test \"$files\"","class":"lineCov","hits":"1",},
{"lineNum":"  610","line":"\tthen"},
{"lineNum":"  611","line":"\t\ttest -n \"$HAS_HEAD\" && : >\"$dotest/dirtyindex\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  612","line":"\t\tdie \"$(eval_gettext \"Dirty index: cannot apply patches (dirty: \\$files)\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  613","line":"\tfi"},
{"lineNum":"  614","line":"esac"},
{"lineNum":"  615","line":""},
{"lineNum":"  616","line":"# Now, decide what command line options we will give to the git"},
{"lineNum":"  617","line":"# commands we invoke, based on the result of parsing command line"},
{"lineNum":"  618","line":"# options and previous invocation state stored in $dotest/ files."},
{"lineNum":"  619","line":""},
{"lineNum":"  620","line":"if test \"$(cat \"$dotest/utf8\")\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  621","line":"then"},
{"lineNum":"  622","line":"\tutf8=-u","class":"lineCov","hits":"1",},
{"lineNum":"  623","line":"else"},
{"lineNum":"  624","line":"\tutf8=-n","class":"lineNoCov","hits":"0",},
{"lineNum":"  625","line":"fi"},
{"lineNum":"  626","line":"keep=$(cat \"$dotest/keep\")","class":"lineCov","hits":"1",},
{"lineNum":"  627","line":"case \"$keep\" in","class":"lineCov","hits":"1",},
{"lineNum":"  628","line":"t)"},
{"lineNum":"  629","line":"\tkeep=-k ;;","class":"lineCov","hits":"1",},
{"lineNum":"  630","line":"b)"},
{"lineNum":"  631","line":"\tkeep=-b ;;","class":"lineCov","hits":"1",},
{"lineNum":"  632","line":"*)"},
{"lineNum":"  633","line":"\tkeep= ;;","class":"lineCov","hits":"1",},
{"lineNum":"  634","line":"esac"},
{"lineNum":"  635","line":"case \"$(cat \"$dotest/messageid\")\" in","class":"lineCov","hits":"1",},
{"lineNum":"  636","line":"t)"},
{"lineNum":"  637","line":"\tmessageid=-m ;;","class":"lineCov","hits":"1",},
{"lineNum":"  638","line":"f)"},
{"lineNum":"  639","line":"\tmessageid= ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  640","line":"esac"},
{"lineNum":"  641","line":"case \"$(cat \"$dotest/scissors\")\" in","class":"lineCov","hits":"1",},
{"lineNum":"  642","line":"t)"},
{"lineNum":"  643","line":"\tscissors=--scissors ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  644","line":"f)"},
{"lineNum":"  645","line":"\tscissors=--no-scissors ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  646","line":"esac"},
{"lineNum":"  647","line":"if test \"$(cat \"$dotest/no_inbody_headers\")\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  648","line":"then"},
{"lineNum":"  649","line":"\tno_inbody_headers=--no-inbody-headers","class":"lineNoCov","hits":"0",},
{"lineNum":"  650","line":"else"},
{"lineNum":"  651","line":"\tno_inbody_headers=","class":"lineCov","hits":"1",},
{"lineNum":"  652","line":"fi"},
{"lineNum":"  653","line":"if test \"$(cat \"$dotest/quiet\")\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  654","line":"then"},
{"lineNum":"  655","line":"\tGIT_QUIET=t","class":"lineCov","hits":"1",},
{"lineNum":"  656","line":"fi"},
{"lineNum":"  657","line":"if test \"$(cat \"$dotest/threeway\")\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  658","line":"then"},
{"lineNum":"  659","line":"\tthreeway=t","class":"lineCov","hits":"1",},
{"lineNum":"  660","line":"fi"},
{"lineNum":"  661","line":"git_apply_opt=$(cat \"$dotest/apply-opt\")","class":"lineCov","hits":"1",},
{"lineNum":"  662","line":"if test \"$(cat \"$dotest/sign\")\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  663","line":"then"},
{"lineNum":"  664","line":"\tSIGNOFF=$(git var GIT_COMMITTER_IDENT | sed -e \'","class":"lineNoCov","hits":"0",},
{"lineNum":"  665","line":"\t\t\ts/>.*/>/","class":"lineNoCov","hits":"0",},
{"lineNum":"  666","line":"\t\t\ts/^/Signed-off-by: /\'","class":"lineNoCov","hits":"0",},
{"lineNum":"  667","line":"\t\t)"},
{"lineNum":"  668","line":"else"},
{"lineNum":"  669","line":"\tSIGNOFF=","class":"lineCov","hits":"1",},
{"lineNum":"  670","line":"fi"},
{"lineNum":"  671","line":""},
{"lineNum":"  672","line":"last=$(cat \"$dotest/last\")","class":"lineCov","hits":"1",},
{"lineNum":"  673","line":"this=$(cat \"$dotest/next\")","class":"lineCov","hits":"1",},
{"lineNum":"  674","line":"if test \"$skip\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  675","line":"then"},
{"lineNum":"  676","line":"\tthis=$(expr \"$this\" + 1)","class":"lineCov","hits":"1",},
{"lineNum":"  677","line":"\tresume=","class":"lineCov","hits":"1",},
{"lineNum":"  678","line":"fi"},
{"lineNum":"  679","line":""},
{"lineNum":"  680","line":"while test \"$this\" -le \"$last\"","class":"lineCov","hits":"1",},
{"lineNum":"  681","line":"do"},
{"lineNum":"  682","line":"\tmsgnum=$(printf \"%0${prec}d\" $this)","class":"lineCov","hits":"1",},
{"lineNum":"  683","line":"\tnext=$(expr \"$this\" + 1)","class":"lineCov","hits":"1",},
{"lineNum":"  684","line":"\ttest -f \"$dotest/$msgnum\" || {","class":"lineCov","hits":"1",},
{"lineNum":"  685","line":"\t\tresume=","class":"lineNoCov","hits":"0",},
{"lineNum":"  686","line":"\t\tgo_next","class":"lineNoCov","hits":"0",},
{"lineNum":"  687","line":"\t\tcontinue","class":"lineNoCov","hits":"0",},
{"lineNum":"  688","line":"\t}"},
{"lineNum":"  689","line":""},
{"lineNum":"  690","line":"\t# If we are not resuming, parse and extract the patch information"},
{"lineNum":"  691","line":"\t# into separate files:"},
{"lineNum":"  692","line":"\t#  - info records the authorship and title"},
{"lineNum":"  693","line":"\t#  - msg is the rest of commit log message"},
{"lineNum":"  694","line":"\t#  - patch is the patch body."},
{"lineNum":"  695","line":"\t#"},
{"lineNum":"  696","line":"\t# When we are resuming, these files are either already prepared"},
{"lineNum":"  697","line":"\t# by the user, or the user can tell us to do so by --continue flag."},
{"lineNum":"  698","line":"\tcase \"$resume\" in","class":"lineCov","hits":"1",},
{"lineNum":"  699","line":"\t\'\')"},
{"lineNum":"  700","line":"\t\tif test -f \"$dotest/rebasing\"","class":"lineCov","hits":"1",},
{"lineNum":"  701","line":"\t\tthen"},
{"lineNum":"  702","line":"\t\t\tcommit=$(sed -e \'s/^From \\([0-9a-f]*\\) .*/\\1/\' \\","class":"lineNoCov","hits":"0",},
{"lineNum":"  703","line":"\t\t\t\t-e q \"$dotest/$msgnum\") &&"},
{"lineNum":"  704","line":"\t\t\ttest \"$(git cat-file -t \"$commit\")\" = commit ||","class":"lineNoCov","hits":"0",},
{"lineNum":"  705","line":"\t\t\t\tstop_here $this","class":"lineNoCov","hits":"0",},
{"lineNum":"  706","line":"\t\t\tgit cat-file commit \"$commit\" |","class":"lineNoCov","hits":"0",},
{"lineNum":"  707","line":"\t\t\tsed -e \'1,/^$/d\' >\"$dotest/msg-clean\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  708","line":"\t\t\techo \"$commit\" >\"$dotest/original-commit\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  709","line":"\t\t\tget_author_ident_from_commit \"$commit\" >\"$dotest/author-script\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  710","line":"\t\t\tgit diff-tree --root --binary --full-index \"$commit\" >\"$dotest/patch\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  711","line":"\t\telse"},
{"lineNum":"  712","line":"\t\t\tgit mailinfo $keep $no_inbody_headers $messageid $scissors $utf8 \"$dotest/msg\" \"$dotest/patch\" \\","class":"lineCov","hits":"1",},
{"lineNum":"  713","line":"\t\t\t\t<\"$dotest/$msgnum\" >\"$dotest/info\" ||"},
{"lineNum":"  714","line":"\t\t\t\tstop_here $this","class":"lineNoCov","hits":"0",},
{"lineNum":"  715","line":""},
{"lineNum":"  716","line":"\t\t\t# skip pine\'s internal folder data"},
{"lineNum":"  717","line":"\t\t\tsane_grep \'^Author: Mail System Internal Data$\' \\","class":"lineCov","hits":"1",},
{"lineNum":"  718","line":"\t\t\t\t<\"$dotest\"/info >/dev/null &&"},
{"lineNum":"  719","line":"\t\t\t\tgo_next && continue","class":"lineCov","hits":"1",},
{"lineNum":"  720","line":""},
{"lineNum":"  721","line":"\t\t\ttest -s \"$dotest/patch\" || {","class":"lineCov","hits":"1",},
{"lineNum":"  722","line":"\t\t\t\teval_gettextln \"Patch is empty.  Was it split wrong?","class":"lineNoCov","hits":"0",},
{"lineNum":"  723","line":"If you would prefer to skip this patch, instead run \\\"\\$cmdline --skip\\\".","class":"lineNoCov","hits":"0",},
{"lineNum":"  724","line":"To restore the original branch and stop patching run \\\"\\$cmdline --abort\\\".\"","class":"lineCov","hits":"1",},
{"lineNum":"  725","line":"\t\t\t\tstop_here $this","class":"lineCov","hits":"1",},
{"lineNum":"  726","line":"\t\t\t}"},
{"lineNum":"  727","line":"\t\t\trm -f \"$dotest/original-commit\" \"$dotest/author-script\"","class":"lineCov","hits":"1",},
{"lineNum":"  728","line":"\t\t\t{"},
{"lineNum":"  729","line":"\t\t\t\tsed -n \'/^Subject/ s/Subject: //p\' \"$dotest/info\"","class":"lineCov","hits":"1",},
{"lineNum":"  730","line":"\t\t\t\techo","class":"lineCov","hits":"1",},
{"lineNum":"  731","line":"\t\t\t\tcat \"$dotest/msg\"","class":"lineCov","hits":"1",},
{"lineNum":"  732","line":"\t\t\t} |","class":"lineNoCov","hits":"0",},
{"lineNum":"  733","line":"\t\t\tgit stripspace > \"$dotest/msg-clean\"","class":"lineCov","hits":"1",},
{"lineNum":"  734","line":"\t\tfi"},
{"lineNum":"  735","line":"\t\t;;"},
{"lineNum":"  736","line":"\tesac"},
{"lineNum":"  737","line":""},
{"lineNum":"  738","line":"\tif test -f \"$dotest/author-script\"","class":"lineCov","hits":"1",},
{"lineNum":"  739","line":"\tthen"},
{"lineNum":"  740","line":"\t\teval $(cat \"$dotest/author-script\")","class":"lineNoCov","hits":"0",},
{"lineNum":"  741","line":"\telse"},
{"lineNum":"  742","line":"\t\tGIT_AUTHOR_NAME=\"$(sed -n \'/^Author/ s/Author: //p\' \"$dotest/info\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  743","line":"\t\tGIT_AUTHOR_EMAIL=\"$(sed -n \'/^Email/ s/Email: //p\' \"$dotest/info\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  744","line":"\t\tGIT_AUTHOR_DATE=\"$(sed -n \'/^Date/ s/Date: //p\' \"$dotest/info\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  745","line":"\tfi"},
{"lineNum":"  746","line":""},
{"lineNum":"  747","line":"\tif test -z \"$GIT_AUTHOR_EMAIL\"","class":"lineCov","hits":"1",},
{"lineNum":"  748","line":"\tthen"},
{"lineNum":"  749","line":"\t\tgettextln \"Patch does not have a valid e-mail address.\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  750","line":"\t\tstop_here $this","class":"lineNoCov","hits":"0",},
{"lineNum":"  751","line":"\tfi"},
{"lineNum":"  752","line":""},
{"lineNum":"  753","line":"\texport GIT_AUTHOR_NAME GIT_AUTHOR_EMAIL GIT_AUTHOR_DATE","class":"lineCov","hits":"1",},
{"lineNum":"  754","line":""},
{"lineNum":"  755","line":"\tcase \"$resume\" in","class":"lineCov","hits":"1",},
{"lineNum":"  756","line":"\t\'\')"},
{"lineNum":"  757","line":"\t    if test \'\' != \"$SIGNOFF\"","class":"lineCov","hits":"1",},
{"lineNum":"  758","line":"\t    then"},
{"lineNum":"  759","line":"\t\tLAST_SIGNED_OFF_BY=$(","class":"lineNoCov","hits":"0",},
{"lineNum":"  760","line":"\t\t    sed -ne \'/^Signed-off-by: /p\' \\","class":"lineNoCov","hits":"0",},
{"lineNum":"  761","line":"\t\t    \"$dotest/msg-clean\" |"},
{"lineNum":"  762","line":"\t\t    sed -ne \'$p\'","class":"lineNoCov","hits":"0",},
{"lineNum":"  763","line":"\t\t)"},
{"lineNum":"  764","line":"\t\tADD_SIGNOFF=$(","class":"lineCov","hits":"1",},
{"lineNum":"  765","line":"\t\t    test \"$LAST_SIGNED_OFF_BY\" = \"$SIGNOFF\" || {","class":"lineCov","hits":"1",},
{"lineNum":"  766","line":"\t\t    test \'\' = \"$LAST_SIGNED_OFF_BY\" && echo","class":"lineNoCov","hits":"0",},
{"lineNum":"  767","line":"\t\t    echo \"$SIGNOFF\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  768","line":"\t\t})"},
{"lineNum":"  769","line":"\t    else"},
{"lineNum":"  770","line":"\t\tADD_SIGNOFF=","class":"lineCov","hits":"1",},
{"lineNum":"  771","line":"\t    fi"},
{"lineNum":"  772","line":"\t    {"},
{"lineNum":"  773","line":"\t\tif test -s \"$dotest/msg-clean\"","class":"lineCov","hits":"1",},
{"lineNum":"  774","line":"\t\tthen"},
{"lineNum":"  775","line":"\t\t\tcat \"$dotest/msg-clean\"","class":"lineCov","hits":"1",},
{"lineNum":"  776","line":"\t\tfi"},
{"lineNum":"  777","line":"\t\tif test \'\' != \"$ADD_SIGNOFF\"","class":"lineCov","hits":"1",},
{"lineNum":"  778","line":"\t\tthen"},
{"lineNum":"  779","line":"\t\t\techo \"$ADD_SIGNOFF\"","class":"lineCov","hits":"1",},
{"lineNum":"  780","line":"\t\tfi"},
{"lineNum":"  781","line":"\t    } >\"$dotest/final-commit\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  782","line":"\t    ;;"},
{"lineNum":"  783","line":"\t*)"},
{"lineNum":"  784","line":"\t\tcase \"$resolved$interactive\" in","class":"lineCov","hits":"1",},
{"lineNum":"  785","line":"\t\ttt)"},
{"lineNum":"  786","line":"\t\t\t# This is used only for interactive view option."},
{"lineNum":"  787","line":"\t\t\tgit diff-index -p --cached HEAD -- >\"$dotest/patch\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  788","line":"\t\t\t;;"},
{"lineNum":"  789","line":"\t\tesac"},
{"lineNum":"  790","line":"\tesac"},
{"lineNum":"  791","line":""},
{"lineNum":"  792","line":"\tresume=","class":"lineCov","hits":"1",},
{"lineNum":"  793","line":"\tif test \"$interactive\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  794","line":"\tthen"},
{"lineNum":"  795","line":"\t    test -t 0 ||","class":"lineNoCov","hits":"0",},
{"lineNum":"  796","line":"\t    die \"$(gettext \"cannot be interactive without stdin connected to a terminal.\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  797","line":"\t    action=again","class":"lineNoCov","hits":"0",},
{"lineNum":"  798","line":"\t    while test \"$action\" = again","class":"lineNoCov","hits":"0",},
{"lineNum":"  799","line":"\t    do"},
{"lineNum":"  800","line":"\t\tgettextln \"Commit Body is:\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  801","line":"\t\techo \"--------------------------\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  802","line":"\t\tcat \"$dotest/final-commit\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  803","line":"\t\techo \"--------------------------\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  804","line":"\t\t# TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]"},
{"lineNum":"  805","line":"\t\t# in your translation. The program will only accept English"},
{"lineNum":"  806","line":"\t\t# input at this point."},
{"lineNum":"  807","line":"\t\tgettext \"Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all \"","class":"lineNoCov","hits":"0",},
{"lineNum":"  808","line":"\t\tread reply","class":"lineNoCov","hits":"0",},
{"lineNum":"  809","line":"\t\tcase \"$reply\" in","class":"lineNoCov","hits":"0",},
{"lineNum":"  810","line":"\t\t[yY]*) action=yes ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  811","line":"\t\t[aA]*) action=yes interactive= ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  812","line":"\t\t[nN]*) action=skip ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  813","line":"\t\t[eE]*) git_editor \"$dotest/final-commit\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  814","line":"\t\t       action=again ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  815","line":"\t\t[vV]*) action=again","class":"lineNoCov","hits":"0",},
{"lineNum":"  816","line":"\t\t       git_pager \"$dotest/patch\" ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  817","line":"\t\t*)     action=again ;;","class":"lineNoCov","hits":"0",},
{"lineNum":"  818","line":"\t\tesac"},
{"lineNum":"  819","line":"\t    done"},
{"lineNum":"  820","line":"\telse"},
{"lineNum":"  821","line":"\t    action=yes","class":"lineCov","hits":"1",},
{"lineNum":"  822","line":"\tfi"},
{"lineNum":"  823","line":""},
{"lineNum":"  824","line":"\tif test $action = skip","class":"lineCov","hits":"1",},
{"lineNum":"  825","line":"\tthen"},
{"lineNum":"  826","line":"\t\tgo_next","class":"lineNoCov","hits":"0",},
{"lineNum":"  827","line":"\t\tcontinue","class":"lineNoCov","hits":"0",},
{"lineNum":"  828","line":"\tfi"},
{"lineNum":"  829","line":""},
{"lineNum":"  830","line":"\tif test -x \"$GIT_DIR\"/hooks/applypatch-msg","class":"lineCov","hits":"1",},
{"lineNum":"  831","line":"\tthen"},
{"lineNum":"  832","line":"\t\t\"$GIT_DIR\"/hooks/applypatch-msg \"$dotest/final-commit\" ||","class":"lineNoCov","hits":"0",},
{"lineNum":"  833","line":"\t\tstop_here $this","class":"lineNoCov","hits":"0",},
{"lineNum":"  834","line":"\tfi"},
{"lineNum":"  835","line":""},
{"lineNum":"  836","line":"\tif test -f \"$dotest/final-commit\"","class":"lineCov","hits":"1",},
{"lineNum":"  837","line":"\tthen"},
{"lineNum":"  838","line":"\t\tFIRSTLINE=$(sed 1q \"$dotest/final-commit\")","class":"lineCov","hits":"1",},
{"lineNum":"  839","line":"\telse"},
{"lineNum":"  840","line":"\t\tFIRSTLINE=\"\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  841","line":"\tfi"},
{"lineNum":"  842","line":""},
{"lineNum":"  843","line":"\tsay \"$(eval_gettext \"Applying: \\$FIRSTLINE\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  844","line":""},
{"lineNum":"  845","line":"\tcase \"$resolved\" in","class":"lineCov","hits":"1",},
{"lineNum":"  846","line":"\t\'\')"},
{"lineNum":"  847","line":"\t\t# When we are allowed to fall back to 3-way later, don\'t give"},
{"lineNum":"  848","line":"\t\t# false errors during the initial attempt."},
{"lineNum":"  849","line":"\t\tsquelch=","class":"lineCov","hits":"1",},
{"lineNum":"  850","line":"\t\tif test \"$threeway\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  851","line":"\t\tthen"},
{"lineNum":"  852","line":"\t\t\tsquelch=\'>/dev/null 2>&1 \'","class":"lineCov","hits":"1",},
{"lineNum":"  853","line":"\t\tfi"},
{"lineNum":"  854","line":"\t\teval \"git apply $squelch$git_apply_opt\"\' --index \"$dotest/patch\"\'","class":"lineCov","hits":"1",},
{"lineNum":"  855","line":"\t\tapply_status=$?","class":"lineCov","hits":"1",},
{"lineNum":"  856","line":"\t\t;;"},
{"lineNum":"  857","line":"\tt)"},
{"lineNum":"  858","line":"\t\t# Resolved means the user did all the hard work, and"},
{"lineNum":"  859","line":"\t\t# we do not have to do any patch application.  Just"},
{"lineNum":"  860","line":"\t\t# trust what the user has in the index file and the"},
{"lineNum":"  861","line":"\t\t# working tree."},
{"lineNum":"  862","line":"\t\tresolved=","class":"lineCov","hits":"1",},
{"lineNum":"  863","line":"\t\tgit diff-index --quiet --cached HEAD -- && {","class":"lineCov","hits":"1",},
{"lineNum":"  864","line":"\t\t\tgettextln \"No changes - did you forget to use \'git add\'?","class":"lineNoCov","hits":"0",},
{"lineNum":"  865","line":"If there is nothing left to stage, chances are that something else","class":"lineNoCov","hits":"0",},
{"lineNum":"  866","line":"already introduced the same changes; you might want to skip this patch.\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  867","line":"\t\t\tstop_here_user_resolve $this","class":"lineNoCov","hits":"0",},
{"lineNum":"  868","line":"\t\t}"},
{"lineNum":"  869","line":"\t\tunmerged=$(git ls-files -u)","class":"lineCov","hits":"1",},
{"lineNum":"  870","line":"\t\tif test -n \"$unmerged\"","class":"lineCov","hits":"1",},
{"lineNum":"  871","line":"\t\tthen"},
{"lineNum":"  872","line":"\t\t\tgettextln \"You still have unmerged paths in your index","class":"lineNoCov","hits":"0",},
{"lineNum":"  873","line":"did you forget to use \'git add\'?\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  874","line":"\t\t\tstop_here_user_resolve $this","class":"lineNoCov","hits":"0",},
{"lineNum":"  875","line":"\t\tfi"},
{"lineNum":"  876","line":"\t\tapply_status=0","class":"lineCov","hits":"1",},
{"lineNum":"  877","line":"\t\tgit rerere","class":"lineCov","hits":"1",},
{"lineNum":"  878","line":"\t\t;;"},
{"lineNum":"  879","line":"\tesac"},
{"lineNum":"  880","line":""},
{"lineNum":"  881","line":"\tif test $apply_status != 0 && test \"$threeway\" = t","class":"lineCov","hits":"1",},
{"lineNum":"  882","line":"\tthen"},
{"lineNum":"  883","line":"\t\tif (fall_back_3way)","class":"lineCov","hits":"1",},
{"lineNum":"  884","line":"\t\tthen"},
{"lineNum":"  885","line":"\t\t    # Applying the patch to an earlier tree and merging the"},
{"lineNum":"  886","line":"\t\t    # result may have produced the same tree as ours."},
{"lineNum":"  887","line":"\t\t    git diff-index --quiet --cached HEAD -- && {","class":"lineCov","hits":"1",},
{"lineNum":"  888","line":"\t\t\tsay \"$(gettext \"No changes -- Patch already applied.\")\"","class":"lineCov","hits":"1",},
{"lineNum":"  889","line":"\t\t\tgo_next","class":"lineCov","hits":"1",},
{"lineNum":"  890","line":"\t\t\tcontinue","class":"lineCov","hits":"1",},
{"lineNum":"  891","line":"\t\t    }"},
{"lineNum":"  892","line":"\t\t    # clear apply_status -- we have successfully merged."},
{"lineNum":"  893","line":"\t\t    apply_status=0","class":"lineCov","hits":"1",},
{"lineNum":"  894","line":"\t\tfi"},
{"lineNum":"  895","line":"\tfi"},
{"lineNum":"  896","line":"\tif test $apply_status != 0","class":"lineCov","hits":"1",},
{"lineNum":"  897","line":"\tthen"},
{"lineNum":"  898","line":"\t\teval_gettextln \'Patch failed at $msgnum $FIRSTLINE\'","class":"lineCov","hits":"1",},
{"lineNum":"  899","line":"\t\tif test \"$(git config --bool advice.amworkdir)\" != false","class":"lineCov","hits":"1",},
{"lineNum":"  900","line":"\t\tthen"},
{"lineNum":"  901","line":"\t\t\teval_gettextln \'The copy of the patch that failed is found in:","class":"lineNoCov","hits":"0",},
{"lineNum":"  902","line":"   $dotest/patch\'","class":"lineCov","hits":"1",},
{"lineNum":"  903","line":"\t\tfi"},
{"lineNum":"  904","line":"\t\tstop_here_user_resolve $this","class":"lineCov","hits":"1",},
{"lineNum":"  905","line":"\tfi"},
{"lineNum":"  906","line":""},
{"lineNum":"  907","line":"\tif test -x \"$GIT_DIR\"/hooks/pre-applypatch","class":"lineCov","hits":"1",},
{"lineNum":"  908","line":"\tthen"},
{"lineNum":"  909","line":"\t\t\"$GIT_DIR\"/hooks/pre-applypatch || stop_here $this","class":"lineNoCov","hits":"0",},
{"lineNum":"  910","line":"\tfi"},
{"lineNum":"  911","line":""},
{"lineNum":"  912","line":"\ttree=$(git write-tree) &&","class":"lineCov","hits":"1",},
{"lineNum":"  913","line":"\tcommit=$(","class":"lineNoCov","hits":"0",},
{"lineNum":"  914","line":"\t\tif test -n \"$ignore_date\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  915","line":"\t\tthen"},
{"lineNum":"  916","line":"\t\t\tGIT_AUTHOR_DATE=","class":"lineNoCov","hits":"0",},
{"lineNum":"  917","line":"\t\tfi"},
{"lineNum":"  918","line":"\t\tparent=$(git rev-parse --verify -q HEAD) ||","class":"lineNoCov","hits":"0",},
{"lineNum":"  919","line":"\t\tsay >&2 \"$(gettext \"applying to an empty history\")\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  920","line":""},
{"lineNum":"  921","line":"\t\tif test -n \"$committer_date_is_author_date\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  922","line":"\t\tthen"},
{"lineNum":"  923","line":"\t\t\tGIT_COMMITTER_DATE=\"$GIT_AUTHOR_DATE\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  924","line":"\t\t\texport GIT_COMMITTER_DATE","class":"lineNoCov","hits":"0",},
{"lineNum":"  925","line":"\t\tfi &&","class":"lineNoCov","hits":"0",},
{"lineNum":"  926","line":"\t\tgit commit-tree ${parent:+-p} $parent ${gpg_sign_opt:+\"$gpg_sign_opt\"} $tree  \\","class":"lineNoCov","hits":"0",},
{"lineNum":"  927","line":"\t\t\t<\"$dotest/final-commit\""},
{"lineNum":"  928","line":"\t) &&","class":"lineCov","hits":"1",},
{"lineNum":"  929","line":"\tgit update-ref -m \"$GIT_REFLOG_ACTION: $FIRSTLINE\" HEAD $commit $parent ||","class":"lineCov","hits":"1",},
{"lineNum":"  930","line":"\tstop_here $this","class":"lineNoCov","hits":"0",},
{"lineNum":"  931","line":""},
{"lineNum":"  932","line":"\tif test -f \"$dotest/original-commit\"; then","class":"lineCov","hits":"1",},
{"lineNum":"  933","line":"\t\techo \"$(cat \"$dotest/original-commit\") $commit\" >> \"$dotest/rewritten\"","class":"lineCov","hits":"1",},
{"lineNum":"  934","line":"\tfi"},
{"lineNum":"  935","line":""},
{"lineNum":"  936","line":"\tif test -x \"$GIT_DIR\"/hooks/post-applypatch","class":"lineCov","hits":"1",},
{"lineNum":"  937","line":"\tthen"},
{"lineNum":"  938","line":"\t\t\"$GIT_DIR\"/hooks/post-applypatch","class":"lineCov","hits":"1",},
{"lineNum":"  939","line":"\tfi"},
{"lineNum":"  940","line":""},
{"lineNum":"  941","line":"\tgo_next","class":"lineCov","hits":"1",},
{"lineNum":"  942","line":"done"},
{"lineNum":"  943","line":""},
{"lineNum":"  944","line":"if test -s \"$dotest\"/rewritten; then","class":"lineCov","hits":"1",},
{"lineNum":"  945","line":"    git notes copy --for-rewrite=rebase < \"$dotest\"/rewritten","class":"lineNoCov","hits":"0",},
{"lineNum":"  946","line":"    if test -x \"$GIT_DIR\"/hooks/post-rewrite; then","class":"lineNoCov","hits":"0",},
{"lineNum":"  947","line":"\t\"$GIT_DIR\"/hooks/post-rewrite rebase < \"$dotest\"/rewritten","class":"lineNoCov","hits":"0",},
{"lineNum":"  948","line":"    fi"},
{"lineNum":"  949","line":"fi"},
{"lineNum":"  950","line":""},
{"lineNum":"  951","line":"# If am was called with --rebasing (from git-rebase--am), it\'s up to"},
{"lineNum":"  952","line":"# the caller to take care of housekeeping."},
{"lineNum":"  953","line":"if ! test -f \"$dotest/rebasing\"","class":"lineCov","hits":"1",},
{"lineNum":"  954","line":"then"},
{"lineNum":"  955","line":"\trm -fr \"$dotest\"","class":"lineCov","hits":"1",},
{"lineNum":"  956","line":"\tgit gc --auto","class":"lineCov","hits":"1",},
{"lineNum":"  957","line":"fi"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "git-pull", "date" : "2015-04-30 13:28:23", "instrumented" : 522, "covered" : 295,};
var merged_data = [];
