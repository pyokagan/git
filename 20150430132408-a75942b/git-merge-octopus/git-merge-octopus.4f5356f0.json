var data = {lines:[
{"lineNum":"    1","line":"#!/bin/sh"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Copyright (c) 2005 Junio C Hamano"},
{"lineNum":"    4","line":"#"},
{"lineNum":"    5","line":"# Resolve two or more trees."},
{"lineNum":"    6","line":"#"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"LF=\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"    9","line":"\'","class":"lineCov","hits":"16","possible_hits":"0",},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"die () {","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   12","line":"    echo >&2 \"$*\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   13","line":"    exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   14","line":"}"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"# The first parameters up to -- are merge bases; the rest are heads."},
{"lineNum":"   17","line":"bases= head= remotes= sep_seen=","class":"lineCov","hits":"64","possible_hits":"0",},
{"lineNum":"   18","line":"for arg","class":"lineCov","hits":"119","possible_hits":"0",},
{"lineNum":"   19","line":"do"},
{"lineNum":"   20","line":"\tcase \",$sep_seen,$head,$arg,\" in","class":"lineCov","hits":"119","possible_hits":"0",},
{"lineNum":"   21","line":"\t*,--,)"},
{"lineNum":"   22","line":"\t\tsep_seen=yes","class":"lineCov","hits":"16","possible_hits":"0",},
{"lineNum":"   23","line":"\t\t;;"},
{"lineNum":"   24","line":"\t,yes,,*)"},
{"lineNum":"   25","line":"\t\thead=$arg","class":"lineCov","hits":"16","possible_hits":"0",},
{"lineNum":"   26","line":"\t\t;;"},
{"lineNum":"   27","line":"\t,yes,*)"},
{"lineNum":"   28","line":"\t\tremotes=\"$remotes$arg \"","class":"lineCov","hits":"71","possible_hits":"0",},
{"lineNum":"   29","line":"\t\t;;"},
{"lineNum":"   30","line":"\t*)"},
{"lineNum":"   31","line":"\t\tbases=\"$bases$arg \"","class":"lineCov","hits":"16","possible_hits":"0",},
{"lineNum":"   32","line":"\t\t;;"},
{"lineNum":"   33","line":"\tesac"},
{"lineNum":"   34","line":"done"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"# Reject if this is not an Octopus -- resolve should be used instead."},
{"lineNum":"   37","line":"case \"$remotes\" in","class":"lineCov","hits":"32","possible_hits":"0",},
{"lineNum":"   38","line":"?*\' \'?*)"},
{"lineNum":"   39","line":"\t;;"},
{"lineNum":"   40","line":"*)"},
{"lineNum":"   41","line":"\texit 2 ;;","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   42","line":"esac"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"# MRC is the current \"merge reference commit\""},
{"lineNum":"   45","line":"# MRT is the current \"merge result tree\""},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"MRC=$(git rev-parse --verify -q $head)","class":"lineCov","hits":"32","possible_hits":"0",},
{"lineNum":"   48","line":"MRT=$(git write-tree)","class":"lineCov","hits":"32","possible_hits":"0",},
{"lineNum":"   49","line":"NON_FF_MERGE=0","class":"lineCov","hits":"16","possible_hits":"0",},
{"lineNum":"   50","line":"OCTOPUS_FAILURE=0","class":"lineCov","hits":"16","possible_hits":"0",},
{"lineNum":"   51","line":"for SHA1 in $remotes","class":"lineCov","hits":"71","possible_hits":"0",},
{"lineNum":"   52","line":"do"},
{"lineNum":"   53","line":"\tcase \"$OCTOPUS_FAILURE\" in","class":"lineCov","hits":"71","possible_hits":"0",},
{"lineNum":"   54","line":"\t1)"},
{"lineNum":"   55","line":"\t\t# We allow only last one to have a hand-resolvable"},
{"lineNum":"   56","line":"\t\t# conflicts.  Last round failed and we still had"},
{"lineNum":"   57","line":"\t\t# a head to merge."},
{"lineNum":"   58","line":"\t\techo \"Automated merge did not work.\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   59","line":"\t\techo \"Should not be doing an Octopus.\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   60","line":"\t\texit 2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   61","line":"\tesac"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"\teval pretty_name=\\${GITHEAD_$SHA1:-$SHA1}","class":"lineCov","hits":"142","possible_hits":"0",},
{"lineNum":"   64","line":"\tif test \"$SHA1\" = \"$pretty_name\"","class":"lineCov","hits":"71","possible_hits":"0",},
{"lineNum":"   65","line":"\tthen"},
{"lineNum":"   66","line":"\t\tSHA1_UP=\"$(echo \"$SHA1\" | tr a-z A-Z)\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   67","line":"\t\teval pretty_name=\\${GITHEAD_$SHA1_UP:-$pretty_name}","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   68","line":"\tfi"},
{"lineNum":"   69","line":"\tcommon=$(git merge-base --all $SHA1 $MRC) ||","class":"lineCov","hits":"142","possible_hits":"0",},
{"lineNum":"   70","line":"\t\tdie \"Unable to find common commit with $pretty_name\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"\tcase \"$LF$common$LF\" in","class":"lineCov","hits":"71","possible_hits":"0",},
{"lineNum":"   73","line":"\t*\"$LF$SHA1$LF\"*)"},
{"lineNum":"   74","line":"\t\techo \"Already up-to-date with $pretty_name\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   75","line":"\t\tcontinue","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   76","line":"\t\t;;"},
{"lineNum":"   77","line":"\tesac"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"\tif test \"$common,$NON_FF_MERGE\" = \"$MRC,0\"","class":"lineCov","hits":"71","possible_hits":"0",},
{"lineNum":"   80","line":"\tthen"},
{"lineNum":"   81","line":"\t\t# The first head being merged was a fast-forward."},
{"lineNum":"   82","line":"\t\t# Advance MRC to the head being merged, and use that"},
{"lineNum":"   83","line":"\t\t# tree as the intermediate result of the merge."},
{"lineNum":"   84","line":"\t\t# We still need to count this as part of the parent set."},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"\t\techo \"Fast-forwarding to: $pretty_name\"","class":"lineCov","hits":"4","possible_hits":"0",},
{"lineNum":"   87","line":"\t\tgit read-tree -u -m $head $SHA1 || exit","class":"lineCov","hits":"4","possible_hits":"0",},
{"lineNum":"   88","line":"\t\tMRC=$SHA1 MRT=$(git write-tree)","class":"lineCov","hits":"12","possible_hits":"0",},
{"lineNum":"   89","line":"\t\tcontinue","class":"lineCov","hits":"4","possible_hits":"0",},
{"lineNum":"   90","line":"\tfi"},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"\tNON_FF_MERGE=1","class":"lineCov","hits":"67","possible_hits":"0",},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"\techo \"Trying simple merge with $pretty_name\"","class":"lineCov","hits":"67","possible_hits":"0",},
{"lineNum":"   95","line":"\tgit read-tree -u -m --aggressive  $common $MRT $SHA1 || exit 2","class":"lineCov","hits":"67","possible_hits":"0",},
{"lineNum":"   96","line":"\tnext=$(git write-tree 2>/dev/null)","class":"lineCov","hits":"134","possible_hits":"0",},
{"lineNum":"   97","line":"\tif test $? -ne 0","class":"lineCov","hits":"67","possible_hits":"0",},
{"lineNum":"   98","line":"\tthen"},
{"lineNum":"   99","line":"\t\techo \"Simple merge did not work, trying automatic merge.\"","class":"lineCov","hits":"7","possible_hits":"0",},
{"lineNum":"  100","line":"\t\tgit-merge-index -o git-merge-one-file -a ||","class":"lineCov","hits":"7","possible_hits":"0",},
{"lineNum":"  101","line":"\t\tOCTOPUS_FAILURE=1","class":"lineCov","hits":"1","possible_hits":"0",},
{"lineNum":"  102","line":"\t\tnext=$(git write-tree 2>/dev/null)","class":"lineCov","hits":"14","possible_hits":"0",},
{"lineNum":"  103","line":"\tfi"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"\tMRC=\"$MRC $SHA1\"","class":"lineCov","hits":"67","possible_hits":"0",},
{"lineNum":"  106","line":"\tMRT=$next","class":"lineCov","hits":"67","possible_hits":"0",},
{"lineNum":"  107","line":"done"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"exit \"$OCTOPUS_FAILURE\"","class":"lineCov","hits":"16","possible_hits":"0",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "git-merge-octopus", "date" : "2015-04-30 13:26:43", "instrumented" : 49, "covered" : 36,};
var merged_data = [];
